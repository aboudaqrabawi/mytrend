{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.height = exports.width = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Footer = _interopRequireDefault(require(\"../../components/Footer\"));\n\nvar _LoaderBox = _interopRequireDefault(require(\"../../components/LoaderBox\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactNativeImageCropPicker = _interopRequireDefault(require(\"react-native-image-crop-picker\"));\n\nvar _Config = _interopRequireDefault(require(\"../../../assets/Config\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _colors = require(\"../../../assets/colors\");\n\nvar _nativeBase = require(\"native-base\");\n\nvar _InterestBox = _interopRequireDefault(require(\"../../components/InterestBox\"));\n\nvar _checkbox = _interopRequireDefault(require(\"@react-native-community/checkbox\"));\n\nvar _rnFetchBlob = _interopRequireDefault(require(\"rn-fetch-blob\"));\n\nvar _jsxFileName = \"/Users/alheresh/trend-mobile/my-trend-new/src/screens/AddTrend/AddTrendScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nexports.height = height;\nexports.width = width;\n\nvar AddTrendScreen = function (_Component) {\n  (0, _inherits2.default)(AddTrendScreen, _Component);\n\n  var _super = _createSuper(AddTrendScreen);\n\n  function AddTrendScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AddTrendScreen);\n    _this = _super.call(this, props);\n\n    _this.renderList = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return _react.default.createElement(_InterestBox.default, {\n        data: item,\n        index: index,\n        nav: _this.props.navigation,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      showProgress: false,\n      uploadedVideo: '',\n      data: []\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(AddTrendScreen, [{\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      if (this.state.showProgress) {\n        return _react.default.createElement(_LoaderBox.default, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(msg) {\n      if (_reactNative.Platform.OS === 'android') {\n        ToastAndroid.show(msg, ToastAndroid.LONG);\n      } else {\n        AlertIOS.alert(msg);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      return _regenerator.default.async(function UNSAFE_componentWillMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.getInterstings();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getInterstings\",\n    value: function getInterstings() {\n      var response, res;\n      return _regenerator.default.async(function getInterstings$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.setState({\n                showProgress: true\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regenerator.default.awrap(fetch(_Config.default.DOMAIN + 'interests'));\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 7;\n              return _regenerator.default.awrap(response.json());\n\n            case 7:\n              res = _context2.sent;\n\n              if (res.status != 400) {\n                this.setState({\n                  data: res[0]\n                });\n              } else {\n                this.error(strings.thereisErr);\n              }\n\n              this.setState({\n                showProgress: false\n              });\n              _context2.next = 16;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n              this.setState({\n                showProgress: false\n              });\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[1, 12]], Promise);\n    }\n  }, {\n    key: \"uploadVideo\",\n    value: function uploadVideo() {\n      var _this2 = this;\n\n      return _regenerator.default.async(function uploadVideo$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _reactNativeImageCropPicker.default.openPicker({\n                mediaType: 'video'\n              }).then(function (image) {\n                _this2.setState({\n                  uploadedVideo: _rnFetchBlob.default.wrap(image),\n                  video_ext: image.mime\n                });\n\n                _this2.addTrend(image.path, image.mime);\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"addTrend\",\n    value: function addTrend() {\n      var userId;\n      return _regenerator.default.async(function addTrend$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regenerator.default.awrap(_asyncStorage.default.getItem('@Trend:token'));\n\n            case 2:\n              userId = _context4.sent;\n\n              _rnFetchBlob.default.fetch('POST', 'http://192.168.1.46:8000/api/addtrend', {\n                Authorization: 'Bearer ' + userId,\n                Accept: 'application/json',\n                'Content-Type': 'multipart/form-data'\n              }, [{\n                data: _rnFetchBlob.default.wrap(this.state.uploadedVideo)\n              }]).then(function (response) {\n                return response.json();\n              }).then(function (response) {\n                console.log(response);\n\n                if (response.status === 'success') {\n                  alert('‘Video is uploaded successfully’');\n                } else {\n                  alert('‘Something went wrong’');\n                }\n              }).catch(function (err) {\n                alert(err);\n              });\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          backgroundColor: _colors.white\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.StatusBar, {\n        barStyle: \"light-content\",\n        backgroundColor: _colors.gray,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNativeGestureHandler.ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          width: width * 0.9,\n          alignSelf: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.uploadVideo();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          borderWidth: 2,\n          borderRadius: 15,\n          borderColor: _colors.gray,\n          marginVertical: 15,\n          justifyContent: 'center',\n          alignContent: 'center',\n          padding: 40,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_nativeBase.Icon, {\n        name: this.state.uploadedVideo == '' ? 'video-plus-outline' : 'video-check-outline',\n        type: \"MaterialCommunityIcons\",\n        style: {\n          alignSelf: 'center',\n          fontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, this.state.uploadedVideo == '' ? 'Upload Video' : 'Video uploaded succussfuly'))), _react.default.createElement(_reactNative.TextInput, {\n        style: [styles.textInput, {\n          width: '100%'\n        }],\n        placeholder: 'Trend Title',\n        placeholderTextColor: _colors.gray,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            title: text\n          });\n        },\n        defaultValue: this.state.title,\n        returnKeyType: \"next\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }), _react.default.createElement(_reactNative.TextInput, {\n        style: [styles.textInput, {\n          width: '100%'\n        }],\n        placeholder: 'Trend Description',\n        placeholderTextColor: _colors.gray,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            title: text\n          });\n        },\n        defaultValue: this.state.title,\n        returnKeyType: \"next\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }\n      }, 'The Interstings :'), _react.default.createElement(_reactNative.FlatList, {\n        data: this.state.data,\n        renderItem: this.renderList,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }))), _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_Footer.default, {\n        nav: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return AddTrendScreen;\n}(_react.Component);\n\nexports.default = AddTrendScreen;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/src/screens/AddTrend/AddTrendScreen.js"],"names":["Dimensions","get","width","height","AddTrendScreen","props","renderList","item","index","navigation","state","showProgress","uploadedVideo","data","msg","Platform","OS","ToastAndroid","show","LONG","AlertIOS","alert","getInterstings","setState","fetch","config","DOMAIN","response","json","res","status","error","strings","thereisErr","console","log","ImagePicker","openPicker","mediaType","then","image","RNFetchBlob","wrap","video_ext","mime","addTrend","path","AsyncStorage","getItem","userId","Authorization","Accept","catch","err","flex","backgroundColor","white","gray","alignSelf","alignItems","justifyContent","padding","uploadVideo","borderWidth","borderRadius","borderColor","marginVertical","alignContent","fontSize","textAlign","styles","textInput","text","title","id","Component"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  StatusBar,\n  TouchableOpacity,\n  Platform,\n  //   Base64,\n  FlatList,\n} from 'react-native';\nimport Footer from '../../components/Footer';\nimport LoaderBox from '../../components/LoaderBox';\nimport {ScrollView} from 'react-native-gesture-handler';\nexport const {width, height} = Dimensions.get('window');\nimport ImagePicker from 'react-native-image-crop-picker';\nimport config from '../../../assets/Config';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {gray, white} from '../../../assets/colors';\nimport {Icon} from 'native-base';\nimport InterestBox from '../../components/InterestBox';\nimport CheckBox from '@react-native-community/checkbox';\n\nimport RNFetchBlob from 'rn-fetch-blob';\n\nexport default class AddTrendScreen extends Component {\n  // static navigationOptions = ({navigation}) => {\n  //   return {\n  //     headerTitle: <Text>{'Add Trend'}</Text>,\n  //     headerStyle: {\n  //       backgroundColor: gray,\n  //       elevation: 0,\n  //     },\n  //     headerLeft: () => (\n  //       <TouchableOpacity onPress={() => navigation.navigate('TrendsScreen')}>\n  //         <Icon\n  //           type=\"AntDesign\"\n  //           name={lang ? 'arrowright' : 'arrowleft'}\n  //           color=\"#fff\"\n  //           size={35}\n  //           style={{padding: 10}}\n  //         />\n  //       </TouchableOpacity>\n  //     ),\n  //   };\n  // };\n  constructor(props) {\n    super(props);\n    this.state = {\n      showProgress: false,\n      uploadedVideo: '',\n      data: [],\n    };\n  }\n\n  renderLoading() {\n    if (this.state.showProgress) {\n      return <LoaderBox />;\n    }\n  }\n  error(msg) {\n    if (Platform.OS === 'android') {\n      ToastAndroid.show(msg, ToastAndroid.LONG);\n    } else {\n      AlertIOS.alert(msg);\n    }\n  }\n  async UNSAFE_componentWillMount() {\n    this.getInterstings();\n  }\n\n  async getInterstings() {\n    this.setState({showProgress: true});\n    try {\n      let response = await fetch(config.DOMAIN + 'interests');\n      let res = await response.json();\n      if (res.status != 400) {\n        this.setState({\n          data: res[0],\n        });\n      } else {\n        this.error(strings.thereisErr);\n      }\n      this.setState({showProgress: false});\n    } catch (error) {\n      console.log(error);\n      this.setState({showProgress: false});\n    }\n  }\n  renderList = ({item, index}) => {\n    return (\n      <InterestBox data={item} index={index} nav={this.props.navigation} />\n    );\n  };\n  async uploadVideo() {\n    ImagePicker.openPicker({\n      mediaType: 'video',\n    }).then((image) => {\n      this.setState({\n        uploadedVideo: RNFetchBlob.wrap(image),\n        video_ext: image.mime,\n      });\n      this.addTrend(image.path, image.mime);\n    });\n  }\n  async addTrend() {\n    const userId = await AsyncStorage.getItem('@Trend:token');\n    RNFetchBlob.fetch(\n      'POST',\n      'http://192.168.1.46:8000/api/addtrend',\n      {\n        Authorization: 'Bearer ' + userId,\n        Accept: 'application/json',\n        'Content-Type': 'multipart/form-data',\n      },\n      [\n        {\n          data: RNFetchBlob.wrap(this.state.uploadedVideo),\n        },\n      ],\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(response);\n        if (response.status === 'success') {\n          // If you will get a success response from your api\n          alert('‘Video is uploaded successfully’');\n        } else {\n          alert('‘Something went wrong’');\n        }\n      })\n      .catch((err) => {\n        alert(err);\n      });\n\n    // let res = await fetch('http://192.168.1.46:8000/api/addtrend', {\n    //   method: 'post',\n    //   body: video,\n    //   headers: {\n    //     'Content-Type': 'multipart/form-data',\n    //     Authorization: 'Bearer ' + userId,\n    //   },\n    // });\n    // let responseJson = await res.json();\n    // console.log(responseJson);\n    // if (responseJson.status == 1) {\n    //   alert('Upload Successful');\n    // }\n\n    // fetch('http://192.168.1.46:8000/api/addtrend', {\n    //   mode: 'no-cors',\n    //   method: 'POST',\n    //   body: video,\n    // }).then(\n    //   function (res) {\n    //     if (res.ok) {\n    //       console.log('res', res.json);\n    //       alert('Perfect! ');\n    //     } else if (res.status == 401) {\n    //       alert('Oops! ');\n    //     }\n    //   },\n    //   function (e) {\n    //     alert('Error submitting form!');\n    //   },\n    // );\n  }\n  render() {\n    return (\n      <View style={{flex: 1, backgroundColor: white}}>\n        <StatusBar barStyle=\"light-content\" backgroundColor={gray} />\n        <ScrollView>\n          <View\n            style={{\n              width: width * 0.9,\n              alignSelf: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              padding: 20,\n            }}>\n            <TouchableOpacity onPress={() => this.uploadVideo()}>\n              <View\n                style={{\n                  borderWidth: 2,\n                  borderRadius: 15,\n                  borderColor: gray,\n                  marginVertical: 15,\n                  justifyContent: 'center',\n                  alignContent: 'center',\n                  padding: 40,\n                  width: '100%',\n                }}>\n                <Icon\n                  name={\n                    this.state.uploadedVideo == ''\n                      ? 'video-plus-outline'\n                      : 'video-check-outline'\n                  }\n                  type=\"MaterialCommunityIcons\"\n                  style={{alignSelf: 'center', fontSize: 25}}\n                />\n                <Text style={{textAlign: 'center'}}>\n                  {this.state.uploadedVideo == ''\n                    ? 'Upload Video'\n                    : 'Video uploaded succussfuly'}\n                </Text>\n              </View>\n            </TouchableOpacity>\n\n            <TextInput\n              style={[styles.textInput, {width: '100%'}]}\n              placeholder={'Trend Title'}\n              placeholderTextColor={gray}\n              onChangeText={(text) => this.setState({title: text})}\n              defaultValue={this.state.title}\n              returnKeyType=\"next\"\n            />\n            <TextInput\n              style={[styles.textInput, {width: '100%'}]}\n              placeholder={'Trend Description'}\n              placeholderTextColor={gray}\n              onChangeText={(text) => this.setState({title: text})}\n              defaultValue={this.state.title}\n              returnKeyType=\"next\"\n            />\n            <Text>{'The Interstings :'}</Text>\n            <FlatList\n              data={this.state.data}\n              renderItem={this.renderList}\n              keyExtractor={(item) => item.id}\n            />\n          </View>\n        </ScrollView>\n\n        <View>\n          <Footer nav={this.props.navigation} />\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}