{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _construct2 = _interopRequireDefault(require(\"@babel/runtime/helpers/construct\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _FieldPath = _interopRequireDefault(require(\"./FieldPath\"));\n\nvar _QuerySnapshot = _interopRequireDefault(require(\"./QuerySnapshot\"));\n\nvar _SnapshotError = _interopRequireDefault(require(\"./SnapshotError\"));\n\nvar _DocumentSnapshot = _interopRequireDefault(require(\"./DocumentSnapshot\"));\n\nvar _native = require(\"../../utils/native\");\n\nvar _serialize = require(\"./utils/serialize\");\n\nvar _utils = require(\"../../utils\");\n\nvar _events = require(\"../../utils/events\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar DIRECTIONS = {\n  ASC: 'ASCENDING',\n  asc: 'ASCENDING',\n  DESC: 'DESCENDING',\n  desc: 'DESCENDING'\n};\nvar OPERATORS = {\n  '=': 'EQUAL',\n  '==': 'EQUAL',\n  '>': 'GREATER_THAN',\n  '>=': 'GREATER_THAN_OR_EQUAL',\n  '<': 'LESS_THAN',\n  '<=': 'LESS_THAN_OR_EQUAL',\n  'array-contains': 'ARRAY_CONTAINS'\n};\n\nfunction buildNativeFieldPath(fieldPath) {\n  if (fieldPath instanceof _FieldPath.default) {\n    return {\n      elements: fieldPath._segments,\n      type: 'fieldpath'\n    };\n  }\n\n  return {\n    string: fieldPath,\n    type: 'string'\n  };\n}\n\nvar Query = function () {\n  function Query(firestore, path, fieldFilters, fieldOrders, queryOptions) {\n    (0, _classCallCheck2.default)(this, Query);\n    this._fieldFilters = fieldFilters || [];\n    this._fieldOrders = fieldOrders || [];\n    this._firestore = firestore;\n    this._queryOptions = queryOptions || {};\n    this._referencePath = path;\n  }\n\n  (0, _createClass2.default)(Query, [{\n    key: \"firestore\",\n    get: function get() {\n      return this._firestore;\n    }\n  }, {\n    key: \"endAt\",\n    value: function endAt() {\n      for (var _len = arguments.length, snapshotOrVarArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n        snapshotOrVarArgs[_key] = arguments[_key];\n      }\n\n      var options = _objectSpread(_objectSpread({}, this._queryOptions), {}, {\n        endAt: this._buildOrderByOption(snapshotOrVarArgs)\n      });\n\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n    }\n  }, {\n    key: \"endBefore\",\n    value: function endBefore() {\n      for (var _len2 = arguments.length, snapshotOrVarArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        snapshotOrVarArgs[_key2] = arguments[_key2];\n      }\n\n      var options = _objectSpread(_objectSpread({}, this._queryOptions), {}, {\n        endBefore: this._buildOrderByOption(snapshotOrVarArgs)\n      });\n\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n    }\n  }, {\n    key: \"get\",\n    value: function get(options) {\n      var _this = this;\n\n      if (options) {\n        if (!(0, _utils.isObject)(options)) {\n          return Promise.reject(new Error('Query.get failed: First argument must be an object.'));\n        }\n\n        if (options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n          return Promise.reject(new Error('Query.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'));\n        }\n      }\n\n      return (0, _native.getNativeModule)(this._firestore).collectionGet(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, options).then(function (nativeData) {\n        return new _QuerySnapshot.default(_this._firestore, _this, nativeData);\n      });\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherQuery) {\n      if (!(otherQuery instanceof Query)) {\n        throw new Error('firebase.firestore.Query.isEqual(*) expects an instance of Query.');\n      }\n\n      if (this._firestore.app.name !== otherQuery._firestore.app.name) {\n        return false;\n      }\n\n      if (this._firestore.app.options.projectId !== otherQuery._firestore.app.options.projectId) {\n        return false;\n      }\n\n      if (this._fieldFilters.length !== otherQuery._fieldFilters.length) {\n        return false;\n      }\n\n      for (var i = 0; i < this._fieldFilters.length; i++) {\n        var thisFieldFilter = this._fieldFilters[i];\n        var otherFieldFilter = otherQuery._fieldFilters[i];\n\n        if (thisFieldFilter.fieldPath.string !== otherFieldFilter.fieldPath.string) {\n          return false;\n        }\n\n        if (thisFieldFilter.fieldPath.type !== otherFieldFilter.fieldPath.type) {\n          return false;\n        }\n\n        if (thisFieldFilter.value.type !== otherFieldFilter.value.type) {\n          return false;\n        }\n\n        if (thisFieldFilter.value.value !== otherFieldFilter.value.value) {\n          return false;\n        }\n\n        if (thisFieldFilter.operator !== otherFieldFilter.operator) {\n          return false;\n        }\n      }\n\n      if (this._fieldOrders.length !== otherQuery._fieldOrders.length) {\n        return false;\n      }\n\n      for (var _i = 0; _i < this._fieldOrders.length; _i++) {\n        var thisFieldOrder = this._fieldOrders[_i];\n        var otherFieldOrder = otherQuery._fieldOrders[_i];\n\n        if (thisFieldOrder.direction !== otherFieldOrder.direction) {\n          return false;\n        }\n\n        if (thisFieldOrder.fieldPath.string !== otherFieldOrder.fieldPath.string) {\n          return false;\n        }\n\n        if (thisFieldOrder.fieldPath.type !== otherFieldOrder.fieldPath.type) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"limit\",\n    value: function limit(_limit) {\n      var options = _objectSpread(_objectSpread({}, this._queryOptions), {}, {\n        limit: _limit\n      });\n\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n    }\n  }, {\n    key: \"onSnapshot\",\n    value: function onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n      var _this2 = this;\n\n      var observer;\n      var metadataChanges = {};\n\n      if ((0, _utils.isFunction)(optionsOrObserverOrOnNext)) {\n        if (observerOrOnNextOrOnError && !(0, _utils.isFunction)(observerOrOnNextOrOnError)) {\n          throw new Error('Query.onSnapshot failed: Second argument must be a valid function.');\n        }\n\n        observer = {\n          next: optionsOrObserverOrOnNext,\n          error: observerOrOnNextOrOnError\n        };\n      } else if (optionsOrObserverOrOnNext && (0, _utils.isObject)(optionsOrObserverOrOnNext)) {\n        if (optionsOrObserverOrOnNext.next) {\n          if ((0, _utils.isFunction)(optionsOrObserverOrOnNext.next)) {\n            if (optionsOrObserverOrOnNext.error && !(0, _utils.isFunction)(optionsOrObserverOrOnNext.error)) {\n              throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n            }\n\n            observer = {\n              next: optionsOrObserverOrOnNext.next,\n              error: optionsOrObserverOrOnNext.error\n            };\n          } else {\n            throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n          }\n        } else if (Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')) {\n          metadataChanges = optionsOrObserverOrOnNext;\n\n          if ((0, _utils.isFunction)(observerOrOnNextOrOnError)) {\n            if (onError && !(0, _utils.isFunction)(onError)) {\n              throw new Error('Query.onSnapshot failed: Third argument must be a valid function.');\n            }\n\n            observer = {\n              next: observerOrOnNextOrOnError,\n              error: onError\n            };\n          } else if (observerOrOnNextOrOnError && (0, _utils.isObject)(observerOrOnNextOrOnError) && observerOrOnNextOrOnError.next) {\n            if ((0, _utils.isFunction)(observerOrOnNextOrOnError.next)) {\n              if (observerOrOnNextOrOnError.error && !(0, _utils.isFunction)(observerOrOnNextOrOnError.error)) {\n                throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n              }\n\n              observer = {\n                next: observerOrOnNextOrOnError.next,\n                error: observerOrOnNextOrOnError.error\n              };\n            } else {\n              throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n            }\n          } else {\n            throw new Error('Query.onSnapshot failed: Second argument must be a function or observer.');\n          }\n        } else {\n          throw new Error('Query.onSnapshot failed: First argument must be a function, observer or options.');\n        }\n      } else {\n        throw new Error('Query.onSnapshot failed: Called with invalid arguments.');\n      }\n\n      var listenerId = (0, _utils.firestoreAutoId)();\n\n      var listener = function listener(nativeQuerySnapshot) {\n        var querySnapshot = new _QuerySnapshot.default(_this2._firestore, _this2, nativeQuerySnapshot);\n        observer.next(querySnapshot);\n      };\n\n      var unsubscribe;\n\n      var snapshotSubscription = _events.SharedEventEmitter.addListener((0, _events.getAppEventName)(this._firestore, \"onQuerySnapshot:\" + listenerId), listener);\n\n      var errorSubscription = _events.SharedEventEmitter.addListener((0, _events.getAppEventName)(this._firestore, \"onQuerySnapshotError:\" + listenerId), function (e) {\n        if (unsubscribe) unsubscribe();\n        var error = new _SnapshotError.default(e);\n        if (observer.error) observer.error(error);else _this2.firestore.log.error(error);\n      });\n\n      (0, _native.getNativeModule)(this._firestore).collectionOnSnapshot(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, listenerId, metadataChanges);\n\n      unsubscribe = function unsubscribe() {\n        snapshotSubscription.remove();\n        errorSubscription.remove();\n        (0, _native.getNativeModule)(_this2._firestore).collectionOffSnapshot(_this2._referencePath.relativeName, _this2._fieldFilters, _this2._fieldOrders, _this2._queryOptions, listenerId);\n      };\n\n      return unsubscribe;\n    }\n  }, {\n    key: \"orderBy\",\n    value: function orderBy(fieldPath) {\n      var directionStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n\n      if (this._queryOptions.startAt || this._queryOptions.startAfter || this._queryOptions.endAt || this._queryOptions.endBefore) {\n        throw new Error('Cannot specify an orderBy() constraint after calling ' + 'startAt(), startAfter(), endBefore() or endAt().');\n      }\n\n      var newOrder = {\n        direction: DIRECTIONS[directionStr],\n        fieldPath: buildNativeFieldPath(fieldPath)\n      };\n\n      var combinedOrders = this._fieldOrders.concat(newOrder);\n\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, combinedOrders, this._queryOptions);\n    }\n  }, {\n    key: \"startAfter\",\n    value: function startAfter() {\n      for (var _len3 = arguments.length, snapshotOrVarArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        snapshotOrVarArgs[_key3] = arguments[_key3];\n      }\n\n      var options = _objectSpread(_objectSpread({}, this._queryOptions), {}, {\n        startAfter: this._buildOrderByOption(snapshotOrVarArgs)\n      });\n\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n    }\n  }, {\n    key: \"startAt\",\n    value: function startAt() {\n      for (var _len4 = arguments.length, snapshotOrVarArgs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        snapshotOrVarArgs[_key4] = arguments[_key4];\n      }\n\n      var options = _objectSpread(_objectSpread({}, this._queryOptions), {}, {\n        startAt: this._buildOrderByOption(snapshotOrVarArgs)\n      });\n\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n    }\n  }, {\n    key: \"where\",\n    value: function where(fieldPath, opStr, value) {\n      var nativeValue = (0, _serialize.buildTypeMap)(value);\n      var newFilter = {\n        fieldPath: buildNativeFieldPath(fieldPath),\n        operator: OPERATORS[opStr],\n        value: nativeValue\n      };\n\n      var combinedFilters = this._fieldFilters.concat(newFilter);\n\n      return new Query(this.firestore, this._referencePath, combinedFilters, this._fieldOrders, this._queryOptions);\n    }\n  }, {\n    key: \"_buildOrderByOption\",\n    value: function _buildOrderByOption(snapshotOrVarArgs) {\n      var values;\n\n      if (snapshotOrVarArgs.length === 1 && snapshotOrVarArgs[0] instanceof _DocumentSnapshot.default) {\n        var docSnapshot = snapshotOrVarArgs[0];\n        values = [];\n\n        for (var i = 0; i < this._fieldOrders.length; i++) {\n          var fieldOrder = this._fieldOrders[i];\n\n          if (fieldOrder.fieldPath.type === 'string' && fieldOrder.fieldPath.string) {\n            values.push(docSnapshot.get(fieldOrder.fieldPath.string));\n          } else if (fieldOrder.fieldPath.elements) {\n            var fieldPath = (0, _construct2.default)(_FieldPath.default, (0, _toConsumableArray2.default)(fieldOrder.fieldPath.elements));\n            values.push(docSnapshot.get(fieldPath));\n          }\n        }\n      } else {\n        values = snapshotOrVarArgs;\n      }\n\n      return (0, _serialize.buildNativeArray)(values);\n    }\n  }]);\n  return Query;\n}();\n\nexports.default = Query;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/firestore/Query.js"],"names":["DIRECTIONS","ASC","asc","DESC","desc","OPERATORS","buildNativeFieldPath","fieldPath","FieldPath","elements","_segments","type","string","Query","firestore","path","fieldFilters","fieldOrders","queryOptions","_fieldFilters","_fieldOrders","_firestore","_queryOptions","_referencePath","snapshotOrVarArgs","options","endAt","_buildOrderByOption","endBefore","Promise","reject","Error","source","collectionGet","relativeName","then","nativeData","QuerySnapshot","otherQuery","app","name","projectId","length","i","thisFieldFilter","otherFieldFilter","value","operator","thisFieldOrder","otherFieldOrder","direction","limit","optionsOrObserverOrOnNext","observerOrOnNextOrOnError","onError","observer","metadataChanges","next","error","Object","prototype","hasOwnProperty","call","listenerId","listener","nativeQuerySnapshot","querySnapshot","unsubscribe","snapshotSubscription","SharedEventEmitter","addListener","errorSubscription","e","SnapshotError","log","collectionOnSnapshot","remove","collectionOffSnapshot","directionStr","startAt","startAfter","newOrder","combinedOrders","concat","opStr","nativeValue","newFilter","combinedFilters","values","DocumentSnapshot","docSnapshot","fieldOrder","push","get"],"mappings":"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","sourcesContent":["/**\n * \n * Query representation wrapper\n */\nimport FieldPath from './FieldPath';\nimport QuerySnapshot from './QuerySnapshot';\nimport SnapshotError from './SnapshotError';\nimport DocumentSnapshot from './DocumentSnapshot';\nimport { getNativeModule } from '../../utils/native';\nimport { buildNativeArray, buildTypeMap } from './utils/serialize';\nimport { firestoreAutoId, isFunction, isObject } from '../../utils';\nimport { getAppEventName, SharedEventEmitter } from '../../utils/events';\nconst DIRECTIONS = {\n  ASC: 'ASCENDING',\n  asc: 'ASCENDING',\n  DESC: 'DESCENDING',\n  desc: 'DESCENDING'\n};\nconst OPERATORS = {\n  '=': 'EQUAL',\n  '==': 'EQUAL',\n  '>': 'GREATER_THAN',\n  '>=': 'GREATER_THAN_OR_EQUAL',\n  '<': 'LESS_THAN',\n  '<=': 'LESS_THAN_OR_EQUAL',\n  'array-contains': 'ARRAY_CONTAINS'\n};\n\nfunction buildNativeFieldPath(fieldPath) {\n  if (fieldPath instanceof FieldPath) {\n    return {\n      elements: fieldPath._segments,\n      type: 'fieldpath'\n    };\n  }\n\n  return {\n    string: fieldPath,\n    type: 'string'\n  };\n}\n/**\n * @class Query\n */\n\n\nexport default class Query {\n  constructor(firestore, path, fieldFilters, fieldOrders, queryOptions) {\n    this._fieldFilters = fieldFilters || [];\n    this._fieldOrders = fieldOrders || [];\n    this._firestore = firestore;\n    this._queryOptions = queryOptions || {};\n    this._referencePath = path;\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  endAt(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      endAt: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  endBefore(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      endBefore: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  get(options) {\n    if (options) {\n      if (!isObject(options)) {\n        return Promise.reject(new Error('Query.get failed: First argument must be an object.'));\n      }\n\n      if (options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n        return Promise.reject(new Error('Query.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'));\n      }\n    }\n\n    return getNativeModule(this._firestore).collectionGet(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, options).then(nativeData => new QuerySnapshot(this._firestore, this, nativeData));\n  }\n\n  isEqual(otherQuery) {\n    if (!(otherQuery instanceof Query)) {\n      throw new Error('firebase.firestore.Query.isEqual(*) expects an instance of Query.');\n    }\n\n    if (this._firestore.app.name !== otherQuery._firestore.app.name) {\n      return false;\n    }\n\n    if (this._firestore.app.options.projectId !== otherQuery._firestore.app.options.projectId) {\n      return false;\n    }\n\n    if (this._fieldFilters.length !== otherQuery._fieldFilters.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this._fieldFilters.length; i++) {\n      const thisFieldFilter = this._fieldFilters[i];\n      const otherFieldFilter = otherQuery._fieldFilters[i];\n\n      if (thisFieldFilter.fieldPath.string !== otherFieldFilter.fieldPath.string) {\n        return false;\n      }\n\n      if (thisFieldFilter.fieldPath.type !== otherFieldFilter.fieldPath.type) {\n        return false;\n      }\n\n      if (thisFieldFilter.value.type !== otherFieldFilter.value.type) {\n        return false;\n      }\n\n      if (thisFieldFilter.value.value !== otherFieldFilter.value.value) {\n        return false;\n      }\n\n      if (thisFieldFilter.operator !== otherFieldFilter.operator) {\n        return false;\n      }\n    }\n\n    if (this._fieldOrders.length !== otherQuery._fieldOrders.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this._fieldOrders.length; i++) {\n      const thisFieldOrder = this._fieldOrders[i];\n      const otherFieldOrder = otherQuery._fieldOrders[i];\n\n      if (thisFieldOrder.direction !== otherFieldOrder.direction) {\n        return false;\n      }\n\n      if (thisFieldOrder.fieldPath.string !== otherFieldOrder.fieldPath.string) {\n        return false;\n      }\n\n      if (thisFieldOrder.fieldPath.type !== otherFieldOrder.fieldPath.type) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  limit(limit) {\n    // TODO: Validation\n    // validate.isInteger('n', n);\n    const options = { ...this._queryOptions,\n      limit\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n    // TODO refactor this 💩\n    let observer;\n    let metadataChanges = {}; // Called with: onNext, ?onError\n\n    if (isFunction(optionsOrObserverOrOnNext)) {\n      if (observerOrOnNextOrOnError && !isFunction(observerOrOnNextOrOnError)) {\n        throw new Error('Query.onSnapshot failed: Second argument must be a valid function.');\n      } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n      observer = {\n        next: optionsOrObserverOrOnNext,\n        error: observerOrOnNextOrOnError\n      };\n    } else if (optionsOrObserverOrOnNext && isObject(optionsOrObserverOrOnNext)) {\n      // Called with: Observer\n      if (optionsOrObserverOrOnNext.next) {\n        if (isFunction(optionsOrObserverOrOnNext.next)) {\n          if (optionsOrObserverOrOnNext.error && !isFunction(optionsOrObserverOrOnNext.error)) {\n            throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n          observer = {\n            next: optionsOrObserverOrOnNext.next,\n            error: optionsOrObserverOrOnNext.error\n          };\n        } else {\n          throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n        }\n      } else if (Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')) {\n        metadataChanges = optionsOrObserverOrOnNext; // Called with: Options, onNext, ?onError\n\n        if (isFunction(observerOrOnNextOrOnError)) {\n          if (onError && !isFunction(onError)) {\n            throw new Error('Query.onSnapshot failed: Third argument must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n          observer = {\n            next: observerOrOnNextOrOnError,\n            error: onError\n          }; // Called with Options, Observer\n        } else if (observerOrOnNextOrOnError && isObject(observerOrOnNextOrOnError) && observerOrOnNextOrOnError.next) {\n          if (isFunction(observerOrOnNextOrOnError.next)) {\n            if (observerOrOnNextOrOnError.error && !isFunction(observerOrOnNextOrOnError.error)) {\n              throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n            }\n\n            observer = {\n              next: observerOrOnNextOrOnError.next,\n              error: observerOrOnNextOrOnError.error\n            };\n          } else {\n            throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n          }\n        } else {\n          throw new Error('Query.onSnapshot failed: Second argument must be a function or observer.');\n        }\n      } else {\n        throw new Error('Query.onSnapshot failed: First argument must be a function, observer or options.');\n      }\n    } else {\n      throw new Error('Query.onSnapshot failed: Called with invalid arguments.');\n    }\n\n    const listenerId = firestoreAutoId();\n\n    const listener = nativeQuerySnapshot => {\n      const querySnapshot = new QuerySnapshot(this._firestore, this, nativeQuerySnapshot);\n      observer.next(querySnapshot);\n    };\n\n    let unsubscribe; // Listen to snapshot events\n\n    const snapshotSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onQuerySnapshot:${listenerId}`), listener); // listen for snapshot error events\n\n    const errorSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onQuerySnapshotError:${listenerId}`), e => {\n      if (unsubscribe) unsubscribe();\n      const error = new SnapshotError(e);\n      if (observer.error) observer.error(error);else this.firestore.log.error(error);\n    }); // Add the native listener\n\n    getNativeModule(this._firestore).collectionOnSnapshot(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, listenerId, metadataChanges); // return an unsubscribe method\n\n    unsubscribe = () => {\n      snapshotSubscription.remove();\n      errorSubscription.remove(); // cancel native listener\n\n      getNativeModule(this._firestore).collectionOffSnapshot(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, listenerId);\n    };\n\n    return unsubscribe;\n  }\n\n  orderBy(fieldPath, directionStr = 'asc') {\n    // TODO: Validation\n    // validate.isFieldPath('fieldPath', fieldPath);\n    // validate.isOptionalFieldOrder('directionStr', directionStr);\n    if (this._queryOptions.startAt || this._queryOptions.startAfter || this._queryOptions.endAt || this._queryOptions.endBefore) {\n      throw new Error('Cannot specify an orderBy() constraint after calling ' + 'startAt(), startAfter(), endBefore() or endAt().');\n    }\n\n    const newOrder = {\n      direction: DIRECTIONS[directionStr],\n      fieldPath: buildNativeFieldPath(fieldPath)\n    };\n\n    const combinedOrders = this._fieldOrders.concat(newOrder);\n\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, combinedOrders, this._queryOptions);\n  }\n\n  startAfter(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      startAfter: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  startAt(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      startAt: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  where(fieldPath, opStr, value) {\n    // TODO: Validation\n    // validate.isFieldPath('fieldPath', fieldPath);\n    // validate.isFieldFilter('fieldFilter', opStr, value);\n    const nativeValue = buildTypeMap(value);\n    const newFilter = {\n      fieldPath: buildNativeFieldPath(fieldPath),\n      operator: OPERATORS[opStr],\n      value: nativeValue\n    };\n\n    const combinedFilters = this._fieldFilters.concat(newFilter);\n\n    return new Query(this.firestore, this._referencePath, combinedFilters, this._fieldOrders, this._queryOptions);\n  }\n  /**\n   * INTERNALS\n   */\n\n\n  _buildOrderByOption(snapshotOrVarArgs) {\n    // TODO: Validation\n    let values;\n\n    if (snapshotOrVarArgs.length === 1 && snapshotOrVarArgs[0] instanceof DocumentSnapshot) {\n      const docSnapshot = snapshotOrVarArgs[0];\n      values = [];\n\n      for (let i = 0; i < this._fieldOrders.length; i++) {\n        const fieldOrder = this._fieldOrders[i];\n\n        if (fieldOrder.fieldPath.type === 'string' && fieldOrder.fieldPath.string) {\n          values.push(docSnapshot.get(fieldOrder.fieldPath.string));\n        } else if (fieldOrder.fieldPath.elements) {\n          const fieldPath = new FieldPath(...fieldOrder.fieldPath.elements);\n          values.push(docSnapshot.get(fieldPath));\n        }\n      }\n    } else {\n      values = snapshotOrVarArgs;\n    }\n\n    return buildNativeArray(values);\n  }\n\n}"]},"metadata":{},"sourceType":"script"}