{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _AndroidNotification = _interopRequireDefault(require(\"./AndroidNotification\"));\n\nvar _IOSNotification = _interopRequireDefault(require(\"./IOSNotification\"));\n\nvar _utils = require(\"../../utils\");\n\nvar Notification = function () {\n  function Notification(nativeNotification, notifications) {\n    (0, _classCallCheck2.default)(this, Notification);\n\n    if (nativeNotification) {\n      this._body = nativeNotification.body;\n      this._data = nativeNotification.data;\n      this._notificationId = nativeNotification.notificationId;\n      this._sound = nativeNotification.sound;\n      this._subtitle = nativeNotification.subtitle;\n      this._title = nativeNotification.title;\n    }\n\n    this._android = new _AndroidNotification.default(this, nativeNotification && nativeNotification.android);\n    this._ios = new _IOSNotification.default(this, notifications, nativeNotification && nativeNotification.ios);\n    this._data = this._data || {};\n    this._notificationId = this._notificationId || (0, _utils.generatePushID)();\n  }\n\n  (0, _createClass2.default)(Notification, [{\n    key: \"android\",\n    get: function get() {\n      return this._android;\n    }\n  }, {\n    key: \"body\",\n    get: function get() {\n      return this._body;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }, {\n    key: \"ios\",\n    get: function get() {\n      return this._ios;\n    }\n  }, {\n    key: \"notificationId\",\n    get: function get() {\n      return this._notificationId;\n    }\n  }, {\n    key: \"sound\",\n    get: function get() {\n      return this._sound;\n    }\n  }, {\n    key: \"subtitle\",\n    get: function get() {\n      return this._subtitle;\n    }\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this._title;\n    }\n  }, {\n    key: \"setBody\",\n    value: function setBody(body) {\n      this._body = body;\n      return this;\n    }\n  }, {\n    key: \"setData\",\n    value: function setData() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!(0, _utils.isObject)(data)) {\n        throw new Error(\"Notification:withData expects an object but got type '\" + typeof data + \"'.\");\n      }\n\n      this._data = data;\n      return this;\n    }\n  }, {\n    key: \"setNotificationId\",\n    value: function setNotificationId(notificationId) {\n      this._notificationId = notificationId;\n      return this;\n    }\n  }, {\n    key: \"setSound\",\n    value: function setSound(sound) {\n      this._sound = sound;\n      return this;\n    }\n  }, {\n    key: \"setSubtitle\",\n    value: function setSubtitle(subtitle) {\n      this._subtitle = subtitle;\n      return this;\n    }\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(title) {\n      this._title = title;\n      return this;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this._notificationId) {\n        throw new Error('Notification: Missing required `notificationId` property');\n      }\n\n      return {\n        android: _reactNative.Platform.OS === 'android' ? this._android.build() : undefined,\n        body: this._body,\n        data: this._data,\n        ios: _reactNative.Platform.OS === 'ios' ? this._ios.build() : undefined,\n        notificationId: this._notificationId,\n        sound: this._sound,\n        subtitle: this._subtitle,\n        title: this._title\n      };\n    }\n  }]);\n  return Notification;\n}();\n\nexports.default = Notification;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/notifications/Notification.js"],"names":["Notification","nativeNotification","notifications","_body","body","_data","data","_notificationId","notificationId","_sound","sound","_subtitle","subtitle","_title","title","_android","AndroidNotification","android","_ios","IOSNotification","ios","Error","Platform","OS","build","undefined"],"mappings":"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","sourcesContent":["/**\n * \n * Notification representation wrapper\n */\nimport { Platform } from 'react-native';\nimport AndroidNotification from './AndroidNotification';\nimport IOSNotification from './IOSNotification';\nimport { generatePushID, isObject } from '../../utils';\nexport default class Notification {\n  // iOS 8/9 | 10+ | Android\n  // alertBody | body | contentText\n  // userInfo | userInfo | extras\n  // soundName | sound | sound\n  // N/A | subtitle | subText\n  // alertTitle | title | contentTitle\n  constructor(nativeNotification, notifications) {\n    if (nativeNotification) {\n      this._body = nativeNotification.body;\n      this._data = nativeNotification.data;\n      this._notificationId = nativeNotification.notificationId;\n      this._sound = nativeNotification.sound;\n      this._subtitle = nativeNotification.subtitle;\n      this._title = nativeNotification.title;\n    }\n\n    this._android = new AndroidNotification(this, nativeNotification && nativeNotification.android);\n    this._ios = new IOSNotification(this, notifications, nativeNotification && nativeNotification.ios); // Defaults\n\n    this._data = this._data || {}; // TODO: Is this the best way to generate an ID?\n\n    this._notificationId = this._notificationId || generatePushID();\n  }\n\n  get android() {\n    return this._android;\n  }\n\n  get body() {\n    return this._body;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get ios() {\n    return this._ios;\n  }\n\n  get notificationId() {\n    return this._notificationId;\n  }\n\n  get sound() {\n    return this._sound;\n  }\n\n  get subtitle() {\n    return this._subtitle;\n  }\n\n  get title() {\n    return this._title;\n  }\n  /**\n   *\n   * @param body\n   * @returns {Notification}\n   */\n\n\n  setBody(body) {\n    this._body = body;\n    return this;\n  }\n  /**\n   *\n   * @param data\n   * @returns {Notification}\n   */\n\n\n  setData(data = {}) {\n    if (!isObject(data)) {\n      throw new Error(`Notification:withData expects an object but got type '${typeof data}'.`);\n    }\n\n    this._data = data;\n    return this;\n  }\n  /**\n   *\n   * @param notificationId\n   * @returns {Notification}\n   */\n\n\n  setNotificationId(notificationId) {\n    this._notificationId = notificationId;\n    return this;\n  }\n  /**\n   *\n   * @param sound\n   * @returns {Notification}\n   */\n\n\n  setSound(sound) {\n    this._sound = sound;\n    return this;\n  }\n  /**\n   *\n   * @param subtitle\n   * @returns {Notification}\n   */\n\n\n  setSubtitle(subtitle) {\n    this._subtitle = subtitle;\n    return this;\n  }\n  /**\n   *\n   * @param title\n   * @returns {Notification}\n   */\n\n\n  setTitle(title) {\n    this._title = title;\n    return this;\n  }\n\n  build() {\n    if (!this._notificationId) {\n      throw new Error('Notification: Missing required `notificationId` property');\n    }\n\n    return {\n      android: Platform.OS === 'android' ? this._android.build() : undefined,\n      body: this._body,\n      data: this._data,\n      ios: Platform.OS === 'ios' ? this._ios.build() : undefined,\n      notificationId: this._notificationId,\n      sound: this._sound,\n      subtitle: this._subtitle,\n      title: this._title\n    };\n  }\n\n}"]},"metadata":{},"sourceType":"script"}