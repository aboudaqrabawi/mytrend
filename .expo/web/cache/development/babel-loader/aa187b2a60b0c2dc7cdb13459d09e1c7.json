{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _nativeBase = require(\"native-base\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxFileName = \"/Users/alheresh/trend-mobile/my-trend-new/src/screens/ReportAProblem/ReportAProblemScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ReportAProblemScreen = function (_Component) {\n  (0, _inherits2.default)(ReportAProblemScreen, _Component);\n\n  var _super = _createSuper(ReportAProblemScreen);\n\n  function ReportAProblemScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ReportAProblemScreen);\n    _this = _super.call(this, props);\n\n    _this.card = function (_ref) {\n      var id = _ref.id,\n          title = _ref.title;\n      return _react.default.createElement(_nativeBase.ListItem, {\n        style: {\n          width: '100%'\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_nativeBase.Radio, {\n        selected: _this.state.selectedItem == id ? true : false,\n        standardStyle: true,\n        onPress: function onPress() {\n          console.log;\n\n          _this.setState({\n            selectedItem: id\n          });\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_nativeBase.Body, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          color: '#111',\n          fontSize: 15,\n          marginLeft: 10\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, title)));\n    };\n\n    _this.state = {\n      status: 200,\n      isClicked: false,\n      selectedItem: '',\n      report: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ReportAProblemScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_nativeBase.Root, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n        behavior: Platform.OS == 'ios' ? 'padding' : 'height',\n        style: _styles.default.keyboardAvoidingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        contentContainerStyle: _styles.default.scrollViewContentContainerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, this.card({\n        id: '1',\n        title: 'False News 1'\n      }), this.card({\n        id: '2',\n        title: 'False News 2'\n      }), this.card({\n        id: '3',\n        title: 'False News 3'\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.textInputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          height: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.TextInput, {\n        style: _styles.default.reportInputBox,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            report: text\n          });\n        },\n        autoCorrect: false,\n        multiline: true,\n        placeholderTextColor: \"#111\",\n        selectionColor: \"#111\",\n        enablesReturnKeyAutomatically: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: {\n          height: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }), _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: _styles.default.sendButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }, this.state.status == 400 ? _react.default.createElement(_reactNative.ActivityIndicator, {\n        color: 'white',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      }) : _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.sendText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }\n      }, strings.send))))));\n    }\n  }]);\n  return ReportAProblemScreen;\n}(_react.Component);\n\nexports.default = ReportAProblemScreen;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/src/screens/ReportAProblem/ReportAProblemScreen.js"],"names":["ReportAProblemScreen","props","card","id","title","width","state","selectedItem","console","log","setState","color","fontSize","marginLeft","status","isClicked","report","styles","container","Platform","OS","keyboardAvoidingView","scrollViewContentContainerStyle","textInputView","height","reportInputBox","text","sendButton","sendText","strings","send","Component"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  Alert,\n  KeyboardAvoidingView,\n  ActivityIndicator,\n} from 'react-native';\n// import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport {Toast, Root, ListItem, Body, Radio} from 'native-base';\n\nimport styles from './styles';\n\nexport default class ReportAProblemScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 200,\n      isClicked: false,\n      selectedItem: '',\n      report: '',\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // async componentDidMount() {\n  //   await AsyncStorage.getItem(\"api_token\").then((token) => {\n  //     this.setState({\n  //       api_token: token,\n  //     });\n  //     console.log(\"AsyncStorage.getItem(api_token)\", token);\n  //   });\n  // }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // onSend() {\n  //   if (this.state.report != \"\") {\n  //     this.setState({\n  //       status: 400,\n  //     });\n\n  //     fetch(API.baseURL + \"addReport\", {\n  //       method: \"POST\",\n\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\",\n  //         Authorization: \"Bearer \" + this.state.api_token,\n  //       },\n  //       body: JSON.stringify({\n  //         report: this.state.report,\n  //       }),\n  //     })\n  //       .then((response) => response.json())\n  //       .then((responseJson) => {\n  //         console.log(\"responseJson_____Send______\", responseJson);\n  //         // If server response message same as Data Matched\n  //         if (responseJson.status == 200) {\n  //           this.setState({\n  //             status: 200,\n  //           });\n\n  //           Alert.alert(i18n.t(\"yourReportHasBeenSentSuccessfully\"), \"\", [\n  //             {\n  //               text: i18n.t(\"ok\"),\n  //               onPress: () => this.props.navigation.navigate(\"BottomTab\"),\n  //             },\n  //           ]);\n  //         } else {\n  //           this.setState({\n  //             status: 200,\n  //           });\n  //           Alert.alert(\n  //             i18n.t(\"somethingWentWrong\"),\n  //             i18n.t(\"pleaseTryAgainLater\"),\n  //             [\n  //               {\n  //                 text: i18n.t(\"ok\"),\n  //                 onPress: () => this.props.navigation.goBack(),\n  //               },\n  //             ]\n  //           );\n  //         }\n  //       })\n  //       .catch((error) => {\n  //         this.setState({\n  //           status: 200,\n  //         });\n  //         console.error(error);\n  //       });\n  //   } else {\n  //     this.setState({ isClicked: true });\n  //     Toast.show({\n  //       text: i18n.t(\"pleaseFillAllFields\"),\n  //       textStyle: { textAlign: \"left\" },\n  //       duration: 2000,\n  //       type: \"danger\",\n  //       position: \"bottom\",\n  //     });\n  //   }\n  // }\n\n  card = ({id, title}) => {\n    return (\n      <ListItem style={{width: '100%'}}>\n        <Radio\n          // /color={\"red\"}\n          selected={this.state.selectedItem == id ? true : false}\n          standardStyle={true}\n          // selectedColor={\"red\"}\n          onPress={() => {\n            console.log;\n            this.setState({selectedItem: id});\n          }}\n        />\n        <Body>\n          <Text style={{color: '#111', fontSize: 15, marginLeft: 10}}>\n            {title}\n          </Text>\n        </Body>\n      </ListItem>\n    );\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  render() {\n    return (\n      <Root>\n        <View style={styles.container}>\n          <KeyboardAvoidingView\n            behavior={Platform.OS == 'ios' ? 'padding' : 'height'}\n            style={styles.keyboardAvoidingView}>\n            <ScrollView\n              contentContainerStyle={styles.scrollViewContentContainerStyle}>\n              {this.card({\n                id: '1',\n                title: 'False News 1',\n              })}\n              {this.card({\n                id: '2',\n                title: 'False News 2',\n              })}\n              {this.card({\n                id: '3',\n                title: 'False News 3',\n              })}\n\n              <View style={styles.textInputView}>\n                <View style={{height: 10}} />\n                <TextInput\n                  style={styles.reportInputBox}\n                  onChangeText={(text) => this.setState({report: text})}\n                  autoCorrect={false}\n                  multiline\n                  placeholderTextColor=\"#111\"\n                  selectionColor=\"#111\"\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n\n              <View style={{height: 10}} />\n\n              <TouchableOpacity\n                style={styles.sendButton}\n                //onPress={() => this.onSend()}\n              >\n                {this.state.status == 400 ? (\n                  <ActivityIndicator color={'white'} />\n                ) : (\n                  <Text style={styles.sendText}>{strings.send}</Text>\n                )}\n              </TouchableOpacity>\n            </ScrollView>\n          </KeyboardAvoidingView>\n        </View>\n      </Root>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}