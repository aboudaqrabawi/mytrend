{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _ReferenceBase2 = _interopRequireDefault(require(\"../../utils/ReferenceBase\"));\n\nvar _task = _interopRequireWildcard(require(\"./task\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _native = require(\"../../utils/native\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar StorageReference = function (_ReferenceBase) {\n  (0, _inherits2.default)(StorageReference, _ReferenceBase);\n\n  var _super = _createSuper(StorageReference);\n\n  function StorageReference(storage, path) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, StorageReference);\n    _this = _super.call(this, path);\n    _this._storage = storage;\n    return _this;\n  }\n\n  (0, _createClass2.default)(StorageReference, [{\n    key: \"fullPath\",\n    get: function get() {\n      return this.path;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"gs://\" + this._storage.app.options.storageBucket + this.path;\n    }\n  }, {\n    key: \"child\",\n    value: function child(path) {\n      return new StorageReference(this._storage, this.path + \"/\" + path);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return (0, _native.getNativeModule)(this._storage).delete(this.path);\n    }\n  }, {\n    key: \"getDownloadURL\",\n    value: function getDownloadURL() {\n      return (0, _native.getNativeModule)(this._storage).getDownloadURL(this.path);\n    }\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata() {\n      return (0, _native.getNativeModule)(this._storage).getMetadata(this.path);\n    }\n  }, {\n    key: \"updateMetadata\",\n    value: function updateMetadata() {\n      var metadata = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return (0, _native.getNativeModule)(this._storage).updateMetadata(this.path, metadata);\n    }\n  }, {\n    key: \"downloadFile\",\n    value: function downloadFile(filePath) {\n      return new _task.default(_task.DOWNLOAD_TASK, (0, _native.getNativeModule)(this._storage).downloadFile(this.path, filePath), this);\n    }\n  }, {\n    key: \"put\",\n    get: function get() {\n      return this.putFile;\n    }\n  }, {\n    key: \"putFile\",\n    value: function putFile(filePath) {\n      var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _filePath = _utils.isIOS ? filePath.replace('file://', '') : filePath;\n\n      if (_filePath.includes('%')) _filePath = decodeURIComponent(_filePath);\n      return new _task.default(_task.UPLOAD_TASK, (0, _native.getNativeModule)(this._storage).putFile(this.path, _filePath, metadata), this);\n    }\n  }]);\n  return StorageReference;\n}(_ReferenceBase2.default);\n\nexports.default = StorageReference;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/storage/reference.js"],"names":["StorageReference","storage","path","_storage","app","options","storageBucket","delete","getDownloadURL","getMetadata","metadata","updateMetadata","filePath","StorageTask","DOWNLOAD_TASK","downloadFile","putFile","_filePath","isIOS","replace","includes","decodeURIComponent","UPLOAD_TASK","ReferenceBase"],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;;AACA;;AACA;;AACA;;;;;;IAKqBA,gB;;;;;AACnB,4BAAYC,OAAZ,EAAqBC,IAArB,EAA2B;AAAA;;AAAA;AACzB,8BAAMA,IAAN;AACA,UAAKC,QAAL,GAAgBF,OAAhB;AAFyB;AAG1B;;;;SAED,eAAe;AACb,aAAO,KAAKC,IAAZ;AACD;;;WAED,oBAAW;AACT,uBAAe,KAAKC,QAAL,CAAcC,GAAd,CAAkBC,OAAlB,CAA0BC,aAAzC,GAAyD,KAAKJ,IAA9D;AACD;;;WAQD,eAAMA,IAAN,EAAY;AACV,aAAO,IAAIF,gBAAJ,CAAqB,KAAKG,QAA1B,EAAuC,KAAKD,IAA5C,SAAoDA,IAApD,CAAP;AACD;;;WAOD,mBAAS;AACP,aAAO,6BAAgB,KAAKC,QAArB,EAA+BI,MAA/B,CAAsC,KAAKL,IAA3C,CAAP;AACD;;;WAOD,0BAAiB;AACf,aAAO,6BAAgB,KAAKC,QAArB,EAA+BK,cAA/B,CAA8C,KAAKN,IAAnD,CAAP;AACD;;;WAOD,uBAAc;AACZ,aAAO,6BAAgB,KAAKC,QAArB,EAA+BM,WAA/B,CAA2C,KAAKP,IAAhD,CAAP;AACD;;;WAQD,0BAA8B;AAAA,UAAfQ,QAAe,uEAAJ,EAAI;AAC5B,aAAO,6BAAgB,KAAKP,QAArB,EAA+BQ,cAA/B,CAA8C,KAAKT,IAAnD,EAAyDQ,QAAzD,CAAP;AACD;;;WAQD,sBAAaE,QAAb,EAAuB;AACrB,aAAO,IAAIC,aAAJ,CAAgBC,mBAAhB,EAA+B,6BAAgB,KAAKX,QAArB,EAA+BY,YAA/B,CAA4C,KAAKb,IAAjD,EAAuDU,QAAvD,CAA/B,EAAiG,IAAjG,CAAP;AACD;;;SAOD,eAAU;AACR,aAAO,KAAKI,OAAZ;AACD;;;WASD,iBAAQJ,QAAR,EAAiC;AAAA,UAAfF,QAAe,uEAAJ,EAAI;;AAC/B,UAAIO,SAAS,GAAGC,eAAQN,QAAQ,CAACO,OAAT,CAAiB,SAAjB,EAA4B,EAA5B,CAAR,GAA0CP,QAA1D;;AAEA,UAAIK,SAAS,CAACG,QAAV,CAAmB,GAAnB,CAAJ,EAA6BH,SAAS,GAAGI,kBAAkB,CAACJ,SAAD,CAA9B;AAC7B,aAAO,IAAIJ,aAAJ,CAAgBS,iBAAhB,EAA6B,6BAAgB,KAAKnB,QAArB,EAA+Ba,OAA/B,CAAuC,KAAKd,IAA5C,EAAkDe,SAAlD,EAA6DP,QAA7D,CAA7B,EAAqG,IAArG,CAAP;AACD;;;EA5F2Ca,uB","sourcesContent":["/**\n * \n * StorageReference representation wrapper\n */\nimport ReferenceBase from '../../utils/ReferenceBase';\nimport StorageTask, { UPLOAD_TASK, DOWNLOAD_TASK } from './task';\nimport { isIOS } from '../../utils';\nimport { getNativeModule } from '../../utils/native';\n\n/**\n * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference\n */\nexport default class StorageReference extends ReferenceBase {\n  constructor(storage, path) {\n    super(path);\n    this._storage = storage;\n  }\n\n  get fullPath() {\n    return this.path;\n  }\n\n  toString() {\n    return `gs://${this._storage.app.options.storageBucket}${this.path}`;\n  }\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#child\n   * @param path\n   * @returns {StorageReference}\n   */\n\n\n  child(path) {\n    return new StorageReference(this._storage, `${this.path}/${path}`);\n  }\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#delete\n   * @returns {Promise.<T>|*}\n   */\n\n\n  delete() {\n    return getNativeModule(this._storage).delete(this.path);\n  }\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getDownloadURL\n   * @returns {Promise.<T>|*}\n   */\n\n\n  getDownloadURL() {\n    return getNativeModule(this._storage).getDownloadURL(this.path);\n  }\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getMetadata\n   * @returns {Promise.<T>|*}\n   */\n\n\n  getMetadata() {\n    return getNativeModule(this._storage).getMetadata(this.path);\n  }\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#updateMetadata\n   * @param metadata\n   * @returns {Promise.<T>|*}\n   */\n\n\n  updateMetadata(metadata = {}) {\n    return getNativeModule(this._storage).updateMetadata(this.path, metadata);\n  }\n  /**\n   * Downloads a reference to the device\n   * @param {String} filePath Where to store the file\n   * @return {Promise}\n   */\n\n\n  downloadFile(filePath) {\n    return new StorageTask(DOWNLOAD_TASK, getNativeModule(this._storage).downloadFile(this.path, filePath), this);\n  }\n  /**\n   * Alias to putFile\n   * @returns {StorageReference.putFile}\n   */\n\n\n  get put() {\n    return this.putFile;\n  }\n  /**\n   * Upload a file path\n   * @param  {string} filePath The local path of the file\n   * @param  {object} metadata An object containing metadata\n   * @return {Promise}\n   */\n\n\n  putFile(filePath, metadata = {}) {\n    let _filePath = isIOS ? filePath.replace('file://', '') : filePath;\n\n    if (_filePath.includes('%')) _filePath = decodeURIComponent(_filePath);\n    return new StorageTask(UPLOAD_TASK, getNativeModule(this._storage).putFile(this.path, _filePath, metadata), this);\n  }\n\n}"]},"metadata":{},"sourceType":"script"}