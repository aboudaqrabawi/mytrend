{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromNativeAndroidAction = exports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _AndroidRemoteInput = _interopRequireWildcard(require(\"./AndroidRemoteInput\"));\n\nvar _types = require(\"./types\");\n\nvar AndroidAction = function () {\n  function AndroidAction(action, icon, title) {\n    (0, _classCallCheck2.default)(this, AndroidAction);\n    this._action = action;\n    this._icon = icon;\n    this._remoteInputs = [];\n    this._showUserInterface = true;\n    this._title = title;\n  }\n\n  (0, _createClass2.default)(AndroidAction, [{\n    key: \"action\",\n    get: function get() {\n      return this._action;\n    }\n  }, {\n    key: \"allowGeneratedReplies\",\n    get: function get() {\n      return this._allowGeneratedReplies;\n    }\n  }, {\n    key: \"icon\",\n    get: function get() {\n      return this._icon;\n    }\n  }, {\n    key: \"remoteInputs\",\n    get: function get() {\n      return this._remoteInputs;\n    }\n  }, {\n    key: \"semanticAction\",\n    get: function get() {\n      return this._semanticAction;\n    }\n  }, {\n    key: \"showUserInterface\",\n    get: function get() {\n      return this._showUserInterface;\n    }\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this._title;\n    }\n  }, {\n    key: \"addRemoteInput\",\n    value: function addRemoteInput(remoteInput) {\n      if (!(remoteInput instanceof _AndroidRemoteInput.default)) {\n        throw new Error(\"AndroidAction:addRemoteInput expects an 'RemoteInput' but got type \" + typeof remoteInput);\n      }\n\n      this._remoteInputs.push(remoteInput);\n\n      return this;\n    }\n  }, {\n    key: \"setAllowGenerateReplies\",\n    value: function setAllowGenerateReplies(allowGeneratedReplies) {\n      this._allowGeneratedReplies = allowGeneratedReplies;\n      return this;\n    }\n  }, {\n    key: \"setSemanticAction\",\n    value: function setSemanticAction(semanticAction) {\n      if (!Object.values(_types.SemanticAction).includes(semanticAction)) {\n        throw new Error(\"AndroidAction:setSemanticAction Invalid Semantic Action: \" + semanticAction);\n      }\n\n      this._semanticAction = semanticAction;\n      return this;\n    }\n  }, {\n    key: \"setShowUserInterface\",\n    value: function setShowUserInterface(showUserInterface) {\n      this._showUserInterface = showUserInterface;\n      return this;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this._action) {\n        throw new Error('AndroidAction: Missing required `action` property');\n      } else if (!this._icon) {\n        throw new Error('AndroidAction: Missing required `icon` property');\n      } else if (!this._title) {\n        throw new Error('AndroidAction: Missing required `title` property');\n      }\n\n      return {\n        action: this._action,\n        allowGeneratedReplies: this._allowGeneratedReplies,\n        icon: this._icon,\n        remoteInputs: this._remoteInputs.map(function (remoteInput) {\n          return remoteInput.build();\n        }),\n        semanticAction: this._semanticAction,\n        showUserInterface: this._showUserInterface,\n        title: this._title\n      };\n    }\n  }]);\n  return AndroidAction;\n}();\n\nexports.default = AndroidAction;\n\nvar fromNativeAndroidAction = function fromNativeAndroidAction(nativeAction) {\n  var action = new AndroidAction(nativeAction.action, nativeAction.icon, nativeAction.title);\n\n  if (nativeAction.allowGeneratedReplies) {\n    action.setAllowGenerateReplies(nativeAction.allowGeneratedReplies);\n  }\n\n  if (nativeAction.remoteInputs) {\n    nativeAction.remoteInputs.forEach(function (remoteInput) {\n      action.addRemoteInput((0, _AndroidRemoteInput.fromNativeAndroidRemoteInput)(remoteInput));\n    });\n  }\n\n  if (nativeAction.semanticAction) {\n    action.setSemanticAction(nativeAction.semanticAction);\n  }\n\n  if (nativeAction.showUserInterface) {\n    action.setShowUserInterface(nativeAction.showUserInterface);\n  }\n\n  return action;\n};\n\nexports.fromNativeAndroidAction = fromNativeAndroidAction;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/notifications/AndroidAction.js"],"names":["AndroidAction","action","icon","title","_action","_icon","_remoteInputs","_showUserInterface","_title","_allowGeneratedReplies","_semanticAction","remoteInput","RemoteInput","Error","push","allowGeneratedReplies","semanticAction","Object","values","SemanticAction","includes","showUserInterface","remoteInputs","map","build","fromNativeAndroidAction","nativeAction","setAllowGenerateReplies","forEach","addRemoteInput","setSemanticAction","setShowUserInterface"],"mappings":"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","sourcesContent":["/**\n * \n * AndroidAction representation wrapper\n */\nimport RemoteInput, { fromNativeAndroidRemoteInput } from './AndroidRemoteInput';\nimport { SemanticAction } from './types';\nexport default class AndroidAction {\n  constructor(action, icon, title) {\n    this._action = action;\n    this._icon = icon;\n    this._remoteInputs = [];\n    this._showUserInterface = true;\n    this._title = title;\n  }\n\n  get action() {\n    return this._action;\n  }\n\n  get allowGeneratedReplies() {\n    return this._allowGeneratedReplies;\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  get remoteInputs() {\n    return this._remoteInputs;\n  }\n\n  get semanticAction() {\n    return this._semanticAction;\n  }\n\n  get showUserInterface() {\n    return this._showUserInterface;\n  }\n\n  get title() {\n    return this._title;\n  }\n  /**\n   *\n   * @param remoteInput\n   * @returns {AndroidAction}\n   */\n\n\n  addRemoteInput(remoteInput) {\n    if (!(remoteInput instanceof RemoteInput)) {\n      throw new Error(`AndroidAction:addRemoteInput expects an 'RemoteInput' but got type ${typeof remoteInput}`);\n    }\n\n    this._remoteInputs.push(remoteInput);\n\n    return this;\n  }\n  /**\n   *\n   * @param allowGeneratedReplies\n   * @returns {AndroidAction}\n   */\n\n\n  setAllowGenerateReplies(allowGeneratedReplies) {\n    this._allowGeneratedReplies = allowGeneratedReplies;\n    return this;\n  }\n  /**\n   *\n   * @param semanticAction\n   * @returns {AndroidAction}\n   */\n\n\n  setSemanticAction(semanticAction) {\n    if (!Object.values(SemanticAction).includes(semanticAction)) {\n      throw new Error(`AndroidAction:setSemanticAction Invalid Semantic Action: ${semanticAction}`);\n    }\n\n    this._semanticAction = semanticAction;\n    return this;\n  }\n  /**\n   *\n   * @param showUserInterface\n   * @returns {AndroidAction}\n   */\n\n\n  setShowUserInterface(showUserInterface) {\n    this._showUserInterface = showUserInterface;\n    return this;\n  }\n\n  build() {\n    if (!this._action) {\n      throw new Error('AndroidAction: Missing required `action` property');\n    } else if (!this._icon) {\n      throw new Error('AndroidAction: Missing required `icon` property');\n    } else if (!this._title) {\n      throw new Error('AndroidAction: Missing required `title` property');\n    }\n\n    return {\n      action: this._action,\n      allowGeneratedReplies: this._allowGeneratedReplies,\n      icon: this._icon,\n      remoteInputs: this._remoteInputs.map(remoteInput => remoteInput.build()),\n      semanticAction: this._semanticAction,\n      showUserInterface: this._showUserInterface,\n      title: this._title\n    };\n  }\n\n}\nexport const fromNativeAndroidAction = nativeAction => {\n  const action = new AndroidAction(nativeAction.action, nativeAction.icon, nativeAction.title);\n\n  if (nativeAction.allowGeneratedReplies) {\n    action.setAllowGenerateReplies(nativeAction.allowGeneratedReplies);\n  }\n\n  if (nativeAction.remoteInputs) {\n    nativeAction.remoteInputs.forEach(remoteInput => {\n      action.addRemoteInput(fromNativeAndroidRemoteInput(remoteInput));\n    });\n  }\n\n  if (nativeAction.semanticAction) {\n    action.setSemanticAction(nativeAction.semanticAction);\n  }\n\n  if (nativeAction.showUserInterface) {\n    action.setShowUserInterface(nativeAction.showUserInterface);\n  }\n\n  return action;\n};"]},"metadata":{},"sourceType":"script"}