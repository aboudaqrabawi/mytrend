{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromNativeAndroidRemoteInput = exports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar AndroidRemoteInput = function () {\n  function AndroidRemoteInput(resultKey) {\n    (0, _classCallCheck2.default)(this, AndroidRemoteInput);\n    this._allowedDataTypes = [];\n    this._choices = [];\n    this._resultKey = resultKey;\n  }\n\n  (0, _createClass2.default)(AndroidRemoteInput, [{\n    key: \"allowedDataTypes\",\n    get: function get() {\n      return this._allowedDataTypes;\n    }\n  }, {\n    key: \"allowFreeFormInput\",\n    get: function get() {\n      return this._allowFreeFormInput;\n    }\n  }, {\n    key: \"choices\",\n    get: function get() {\n      return this._choices;\n    }\n  }, {\n    key: \"label\",\n    get: function get() {\n      return this._label;\n    }\n  }, {\n    key: \"resultKey\",\n    get: function get() {\n      return this._resultKey;\n    }\n  }, {\n    key: \"setAllowDataType\",\n    value: function setAllowDataType(mimeType, allow) {\n      this._allowedDataTypes.push({\n        allow: allow,\n        mimeType: mimeType\n      });\n\n      return this;\n    }\n  }, {\n    key: \"setAllowFreeFormInput\",\n    value: function setAllowFreeFormInput(allowFreeFormInput) {\n      this._allowFreeFormInput = allowFreeFormInput;\n      return this;\n    }\n  }, {\n    key: \"setChoices\",\n    value: function setChoices(choices) {\n      this._choices = choices;\n      return this;\n    }\n  }, {\n    key: \"setLabel\",\n    value: function setLabel(label) {\n      this._label = label;\n      return this;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this._resultKey) {\n        throw new Error('AndroidRemoteInput: Missing required `resultKey` property');\n      }\n\n      return {\n        allowedDataTypes: this._allowedDataTypes,\n        allowFreeFormInput: this._allowFreeFormInput,\n        choices: this._choices,\n        label: this._label,\n        resultKey: this._resultKey\n      };\n    }\n  }]);\n  return AndroidRemoteInput;\n}();\n\nexports.default = AndroidRemoteInput;\n\nvar fromNativeAndroidRemoteInput = function fromNativeAndroidRemoteInput(nativeRemoteInput) {\n  var remoteInput = new AndroidRemoteInput(nativeRemoteInput.resultKey);\n\n  if (nativeRemoteInput.allowedDataTypes) {\n    for (var i = 0; i < nativeRemoteInput.allowedDataTypes.length; i++) {\n      var allowDataType = nativeRemoteInput.allowedDataTypes[i];\n      remoteInput.setAllowDataType(allowDataType.mimeType, allowDataType.allow);\n    }\n  }\n\n  if (nativeRemoteInput.allowFreeFormInput) {\n    remoteInput.setAllowFreeFormInput(nativeRemoteInput.allowFreeFormInput);\n  }\n\n  if (nativeRemoteInput.choices) {\n    remoteInput.setChoices(nativeRemoteInput.choices);\n  }\n\n  if (nativeRemoteInput.label) {\n    remoteInput.setLabel(nativeRemoteInput.label);\n  }\n\n  return remoteInput;\n};\n\nexports.fromNativeAndroidRemoteInput = fromNativeAndroidRemoteInput;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/notifications/AndroidRemoteInput.js"],"names":["AndroidRemoteInput","resultKey","_allowedDataTypes","_choices","_resultKey","_allowFreeFormInput","_label","mimeType","allow","push","allowFreeFormInput","choices","label","Error","allowedDataTypes","fromNativeAndroidRemoteInput","nativeRemoteInput","remoteInput","i","length","allowDataType","setAllowDataType","setAllowFreeFormInput","setChoices","setLabel"],"mappings":";;;;;;;;;;;IAIqBA,kB;AACnB,8BAAYC,SAAZ,EAAuB;AAAA;AACrB,SAAKC,iBAAL,GAAyB,EAAzB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,UAAL,GAAkBH,SAAlB;AACD;;;;SAED,eAAuB;AACrB,aAAO,KAAKC,iBAAZ;AACD;;;SAED,eAAyB;AACvB,aAAO,KAAKG,mBAAZ;AACD;;;SAED,eAAc;AACZ,aAAO,KAAKF,QAAZ;AACD;;;SAED,eAAY;AACV,aAAO,KAAKG,MAAZ;AACD;;;SAED,eAAgB;AACd,aAAO,KAAKF,UAAZ;AACD;;;WASD,0BAAiBG,QAAjB,EAA2BC,KAA3B,EAAkC;AAChC,WAAKN,iBAAL,CAAuBO,IAAvB,CAA4B;AAC1BD,QAAAA,KAAK,EAALA,KAD0B;AAE1BD,QAAAA,QAAQ,EAARA;AAF0B,OAA5B;;AAKA,aAAO,IAAP;AACD;;;WAQD,+BAAsBG,kBAAtB,EAA0C;AACxC,WAAKL,mBAAL,GAA2BK,kBAA3B;AACA,aAAO,IAAP;AACD;;;WAQD,oBAAWC,OAAX,EAAoB;AAClB,WAAKR,QAAL,GAAgBQ,OAAhB;AACA,aAAO,IAAP;AACD;;;WAQD,kBAASC,KAAT,EAAgB;AACd,WAAKN,MAAL,GAAcM,KAAd;AACA,aAAO,IAAP;AACD;;;WAED,iBAAQ;AACN,UAAI,CAAC,KAAKR,UAAV,EAAsB;AACpB,cAAM,IAAIS,KAAJ,CAAU,2DAAV,CAAN;AACD;;AAED,aAAO;AACLC,QAAAA,gBAAgB,EAAE,KAAKZ,iBADlB;AAELQ,QAAAA,kBAAkB,EAAE,KAAKL,mBAFpB;AAGLM,QAAAA,OAAO,EAAE,KAAKR,QAHT;AAILS,QAAAA,KAAK,EAAE,KAAKN,MAJP;AAKLL,QAAAA,SAAS,EAAE,KAAKG;AALX,OAAP;AAOD;;;;;;;AAGI,IAAMW,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAAC,iBAAiB,EAAI;AAC/D,MAAMC,WAAW,GAAG,IAAIjB,kBAAJ,CAAuBgB,iBAAiB,CAACf,SAAzC,CAApB;;AAEA,MAAIe,iBAAiB,CAACF,gBAAtB,EAAwC;AACtC,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,iBAAiB,CAACF,gBAAlB,CAAmCK,MAAvD,EAA+DD,CAAC,EAAhE,EAAoE;AAClE,UAAME,aAAa,GAAGJ,iBAAiB,CAACF,gBAAlB,CAAmCI,CAAnC,CAAtB;AACAD,MAAAA,WAAW,CAACI,gBAAZ,CAA6BD,aAAa,CAACb,QAA3C,EAAqDa,aAAa,CAACZ,KAAnE;AACD;AACF;;AAED,MAAIQ,iBAAiB,CAACN,kBAAtB,EAA0C;AACxCO,IAAAA,WAAW,CAACK,qBAAZ,CAAkCN,iBAAiB,CAACN,kBAApD;AACD;;AAED,MAAIM,iBAAiB,CAACL,OAAtB,EAA+B;AAC7BM,IAAAA,WAAW,CAACM,UAAZ,CAAuBP,iBAAiB,CAACL,OAAzC;AACD;;AAED,MAAIK,iBAAiB,CAACJ,KAAtB,EAA6B;AAC3BK,IAAAA,WAAW,CAACO,QAAZ,CAAqBR,iBAAiB,CAACJ,KAAvC;AACD;;AAED,SAAOK,WAAP;AACD,CAvBM","sourcesContent":["/**\n * \n * AndroidRemoteInput representation wrapper\n */\nexport default class AndroidRemoteInput {\n  constructor(resultKey) {\n    this._allowedDataTypes = [];\n    this._choices = [];\n    this._resultKey = resultKey;\n  }\n\n  get allowedDataTypes() {\n    return this._allowedDataTypes;\n  }\n\n  get allowFreeFormInput() {\n    return this._allowFreeFormInput;\n  }\n\n  get choices() {\n    return this._choices;\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  get resultKey() {\n    return this._resultKey;\n  }\n  /**\n   *\n   * @param mimeType\n   * @param allow\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setAllowDataType(mimeType, allow) {\n    this._allowedDataTypes.push({\n      allow,\n      mimeType\n    });\n\n    return this;\n  }\n  /**\n   *\n   * @param allowFreeFormInput\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setAllowFreeFormInput(allowFreeFormInput) {\n    this._allowFreeFormInput = allowFreeFormInput;\n    return this;\n  }\n  /**\n   *\n   * @param choices\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setChoices(choices) {\n    this._choices = choices;\n    return this;\n  }\n  /**\n   *\n   * @param label\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setLabel(label) {\n    this._label = label;\n    return this;\n  }\n\n  build() {\n    if (!this._resultKey) {\n      throw new Error('AndroidRemoteInput: Missing required `resultKey` property');\n    }\n\n    return {\n      allowedDataTypes: this._allowedDataTypes,\n      allowFreeFormInput: this._allowFreeFormInput,\n      choices: this._choices,\n      label: this._label,\n      resultKey: this._resultKey\n    };\n  }\n\n}\nexport const fromNativeAndroidRemoteInput = nativeRemoteInput => {\n  const remoteInput = new AndroidRemoteInput(nativeRemoteInput.resultKey);\n\n  if (nativeRemoteInput.allowedDataTypes) {\n    for (let i = 0; i < nativeRemoteInput.allowedDataTypes.length; i++) {\n      const allowDataType = nativeRemoteInput.allowedDataTypes[i];\n      remoteInput.setAllowDataType(allowDataType.mimeType, allowDataType.allow);\n    }\n  }\n\n  if (nativeRemoteInput.allowFreeFormInput) {\n    remoteInput.setAllowFreeFormInput(nativeRemoteInput.allowFreeFormInput);\n  }\n\n  if (nativeRemoteInput.choices) {\n    remoteInput.setChoices(nativeRemoteInput.choices);\n  }\n\n  if (nativeRemoteInput.label) {\n    remoteInput.setLabel(nativeRemoteInput.label);\n  }\n\n  return remoteInput;\n};"]},"metadata":{},"sourceType":"script"}