{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _DocumentReference = _interopRequireDefault(require(\"./DocumentReference\"));\n\nvar _FieldPath = _interopRequireDefault(require(\"./FieldPath\"));\n\nvar _Path = _interopRequireDefault(require(\"./Path\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _serialize = require(\"./utils/serialize\");\n\nvar extractFieldPathData = function extractFieldPathData(data, segments) {\n  if (!data || !(0, _utils.isObject)(data)) {\n    return undefined;\n  }\n\n  var pathValue = data[segments[0]];\n\n  if (segments.length === 1) {\n    return pathValue;\n  }\n\n  return extractFieldPathData(pathValue, segments.slice(1));\n};\n\nvar DocumentSnapshot = function () {\n  function DocumentSnapshot(firestore, nativeData) {\n    var _this = this;\n\n    (0, _classCallCheck2.default)(this, DocumentSnapshot);\n\n    this.data = function () {\n      return _this._data;\n    };\n\n    this.get = function (fieldPath) {\n      if (fieldPath instanceof _FieldPath.default) {\n        return extractFieldPathData(_this._data, fieldPath._segments);\n      }\n\n      return (0, _utils.deepGet)(_this._data, fieldPath, '.');\n    };\n\n    this._data = (0, _serialize.parseNativeMap)(firestore, nativeData.data);\n    this._metadata = nativeData.metadata;\n    this._ref = new _DocumentReference.default(firestore, _Path.default.fromName(nativeData.path));\n  }\n\n  (0, _createClass2.default)(DocumentSnapshot, [{\n    key: \"exists\",\n    get: function get() {\n      return this._data !== undefined;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._ref.id;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._metadata;\n    }\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return this._ref;\n    }\n  }]);\n  return DocumentSnapshot;\n}();\n\nexports.default = DocumentSnapshot;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/firestore/DocumentSnapshot.js"],"names":["extractFieldPathData","data","segments","undefined","pathValue","length","slice","DocumentSnapshot","firestore","nativeData","_data","get","fieldPath","FieldPath","_segments","_metadata","metadata","_ref","DocumentReference","Path","fromName","path","id"],"mappings":";;;;;;;;;;;AAIA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAOC,QAAP,EAAoB;AAC/C,MAAI,CAACD,IAAD,IAAS,CAAC,qBAASA,IAAT,CAAd,EAA8B;AAC5B,WAAOE,SAAP;AACD;;AAED,MAAMC,SAAS,GAAGH,IAAI,CAACC,QAAQ,CAAC,CAAD,CAAT,CAAtB;;AAEA,MAAIA,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAOD,SAAP;AACD;;AAED,SAAOJ,oBAAoB,CAACI,SAAD,EAAYF,QAAQ,CAACI,KAAT,CAAe,CAAf,CAAZ,CAA3B;AACD,CAZD;;IAkBqBC,gB;AACnB,4BAAYC,SAAZ,EAAuBC,UAAvB,EAAmC;AAAA;;AAAA;;AAAA,SAsBnCR,IAtBmC,GAsB5B;AAAA,aAAM,KAAI,CAACS,KAAX;AAAA,KAtB4B;;AAAA,SAuBnCC,GAvBmC,GAuB7B,UAAAC,SAAS,EAAI;AACjB,UAAIA,SAAS,YAAYC,kBAAzB,EAAoC;AAClC,eAAOb,oBAAoB,CAAC,KAAI,CAACU,KAAN,EAAaE,SAAS,CAACE,SAAvB,CAA3B;AACD;;AAED,aAAO,oBAAQ,KAAI,CAACJ,KAAb,EAAoBE,SAApB,EAA+B,GAA/B,CAAP;AACD,KA7BkC;;AACjC,SAAKF,KAAL,GAAa,+BAAeF,SAAf,EAA0BC,UAAU,CAACR,IAArC,CAAb;AACA,SAAKc,SAAL,GAAiBN,UAAU,CAACO,QAA5B;AACA,SAAKC,IAAL,GAAY,IAAIC,0BAAJ,CAAsBV,SAAtB,EAAiCW,cAAKC,QAAL,CAAcX,UAAU,CAACY,IAAzB,CAAjC,CAAZ;AACD;;;;SAED,eAAa;AACX,aAAO,KAAKX,KAAL,KAAeP,SAAtB;AACD;;;SAED,eAAS;AACP,aAAO,KAAKc,IAAL,CAAUK,EAAjB;AACD;;;SAED,eAAe;AACb,aAAO,KAAKP,SAAZ;AACD;;;SAED,eAAU;AACR,aAAO,KAAKE,IAAZ;AACD","sourcesContent":["/**\n * \n * DocumentSnapshot representation wrapper\n */\nimport DocumentReference from './DocumentReference';\nimport FieldPath from './FieldPath';\nimport Path from './Path';\nimport { isObject, deepGet } from '../../utils';\nimport { parseNativeMap } from './utils/serialize';\n\nconst extractFieldPathData = (data, segments) => {\n  if (!data || !isObject(data)) {\n    return undefined;\n  }\n\n  const pathValue = data[segments[0]];\n\n  if (segments.length === 1) {\n    return pathValue;\n  }\n\n  return extractFieldPathData(pathValue, segments.slice(1));\n};\n/**\n * @class DocumentSnapshot\n */\n\n\nexport default class DocumentSnapshot {\n  constructor(firestore, nativeData) {\n    this._data = parseNativeMap(firestore, nativeData.data);\n    this._metadata = nativeData.metadata;\n    this._ref = new DocumentReference(firestore, Path.fromName(nativeData.path));\n  }\n\n  get exists() {\n    return this._data !== undefined;\n  }\n\n  get id() {\n    return this._ref.id;\n  }\n\n  get metadata() {\n    return this._metadata;\n  }\n\n  get ref() {\n    return this._ref;\n  }\n\n  data = () => this._data;\n  get = fieldPath => {\n    if (fieldPath instanceof FieldPath) {\n      return extractFieldPathData(this._data, fieldPath._segments);\n    }\n\n    return deepGet(this._data, fieldPath, '.');\n  };\n}"]},"metadata":{},"sourceType":"script"}