{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _utils = require(\"./utils\");\n\nvar _serialize = require(\"./utils/serialize\");\n\nvar _native = require(\"../../utils/native\");\n\nvar WriteBatch = function () {\n  function WriteBatch(firestore) {\n    (0, _classCallCheck2.default)(this, WriteBatch);\n    this._firestore = firestore;\n    this._writes = [];\n  }\n\n  (0, _createClass2.default)(WriteBatch, [{\n    key: \"commit\",\n    value: function commit() {\n      return (0, _native.getNativeModule)(this._firestore).documentBatch(this._writes);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(docRef) {\n      this._writes.push({\n        path: docRef.path,\n        type: 'DELETE'\n      });\n\n      return this;\n    }\n  }, {\n    key: \"set\",\n    value: function set(docRef, data, options) {\n      var nativeData = (0, _serialize.buildNativeMap)(data);\n\n      this._writes.push({\n        data: nativeData,\n        options: options,\n        path: docRef.path,\n        type: 'SET'\n      });\n\n      return this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(docRef) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var data = (0, _utils.parseUpdateArgs)(args, 'WriteBatch.update');\n\n      this._writes.push({\n        data: (0, _serialize.buildNativeMap)(data),\n        path: docRef.path,\n        type: 'UPDATE'\n      });\n\n      return this;\n    }\n  }]);\n  return WriteBatch;\n}();\n\nexports.default = WriteBatch;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/firestore/WriteBatch.js"],"names":["WriteBatch","firestore","_firestore","_writes","documentBatch","docRef","push","path","type","data","options","nativeData","args"],"mappings":";;;;;;;;;;;AAIA;;AACA;;AACA;;IAKqBA,U;AACnB,sBAAYC,SAAZ,EAAuB;AAAA;AACrB,SAAKC,UAAL,GAAkBD,SAAlB;AACA,SAAKE,OAAL,GAAe,EAAf;AACD;;;;WAED,kBAAS;AACP,aAAO,6BAAgB,KAAKD,UAArB,EAAiCE,aAAjC,CAA+C,KAAKD,OAApD,CAAP;AACD;;;WAED,iBAAOE,MAAP,EAAe;AAIb,WAAKF,OAAL,CAAaG,IAAb,CAAkB;AAChBC,QAAAA,IAAI,EAAEF,MAAM,CAACE,IADG;AAEhBC,QAAAA,IAAI,EAAE;AAFU,OAAlB;;AAKA,aAAO,IAAP;AACD;;;WAED,aAAIH,MAAJ,EAAYI,IAAZ,EAAkBC,OAAlB,EAA2B;AAKzB,UAAMC,UAAU,GAAG,+BAAeF,IAAf,CAAnB;;AAEA,WAAKN,OAAL,CAAaG,IAAb,CAAkB;AAChBG,QAAAA,IAAI,EAAEE,UADU;AAEhBD,QAAAA,OAAO,EAAPA,OAFgB;AAGhBH,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAHG;AAIhBC,QAAAA,IAAI,EAAE;AAJU,OAAlB;;AAOA,aAAO,IAAP;AACD;;;WAED,gBAAOH,MAAP,EAAwB;AAAA,wCAANO,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAGtB,UAAMH,IAAI,GAAG,4BAAgBG,IAAhB,EAAsB,mBAAtB,CAAb;;AAEA,WAAKT,OAAL,CAAaG,IAAb,CAAkB;AAChBG,QAAAA,IAAI,EAAE,+BAAeA,IAAf,CADU;AAEhBF,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAFG;AAGhBC,QAAAA,IAAI,EAAE;AAHU,OAAlB;;AAMA,aAAO,IAAP;AACD","sourcesContent":["/**\n * \n * WriteBatch representation wrapper\n */\nimport { parseUpdateArgs } from './utils';\nimport { buildNativeMap } from './utils/serialize';\nimport { getNativeModule } from '../../utils/native';\n\n/**\n * @class WriteBatch\n */\nexport default class WriteBatch {\n  constructor(firestore) {\n    this._firestore = firestore;\n    this._writes = [];\n  }\n\n  commit() {\n    return getNativeModule(this._firestore).documentBatch(this._writes);\n  }\n\n  delete(docRef) {\n    // TODO: Validation\n    // validate.isDocumentReference('docRef', docRef);\n    // validate.isOptionalPrecondition('deleteOptions', deleteOptions);\n    this._writes.push({\n      path: docRef.path,\n      type: 'DELETE'\n    });\n\n    return this;\n  }\n\n  set(docRef, data, options) {\n    // TODO: Validation\n    // validate.isDocumentReference('docRef', docRef);\n    // validate.isDocument('data', data);\n    // validate.isOptionalPrecondition('options', writeOptions);\n    const nativeData = buildNativeMap(data);\n\n    this._writes.push({\n      data: nativeData,\n      options,\n      path: docRef.path,\n      type: 'SET'\n    });\n\n    return this;\n  }\n\n  update(docRef, ...args) {\n    // TODO: Validation\n    // validate.isDocumentReference('docRef', docRef);\n    const data = parseUpdateArgs(args, 'WriteBatch.update');\n\n    this._writes.push({\n      data: buildNativeMap(data),\n      path: docRef.path,\n      type: 'UPDATE'\n    });\n\n    return this;\n  }\n\n}"]},"metadata":{},"sourceType":"script"}