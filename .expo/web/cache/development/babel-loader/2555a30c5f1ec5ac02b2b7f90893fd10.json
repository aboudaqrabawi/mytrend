{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _utils = require(\"../../utils\");\n\nvar RemoteMessage = function () {\n  function RemoteMessage(inboundMessage) {\n    (0, _classCallCheck2.default)(this, RemoteMessage);\n\n    if (inboundMessage) {\n      this._collapseKey = inboundMessage.collapseKey;\n      this._data = inboundMessage.data;\n      this._from = inboundMessage.from;\n      this._messageId = inboundMessage.messageId;\n      this._messageType = inboundMessage.messageType;\n      this._sentTime = inboundMessage.sentTime;\n    }\n\n    this._data = this._data || {};\n    this._messageId = this._messageId || (0, _utils.generatePushID)();\n    this._ttl = 3600;\n  }\n\n  (0, _createClass2.default)(RemoteMessage, [{\n    key: \"collapseKey\",\n    get: function get() {\n      return this._collapseKey;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }, {\n    key: \"from\",\n    get: function get() {\n      return this._from;\n    }\n  }, {\n    key: \"messageId\",\n    get: function get() {\n      return this._messageId;\n    }\n  }, {\n    key: \"messageType\",\n    get: function get() {\n      return this._messageType;\n    }\n  }, {\n    key: \"sentTime\",\n    get: function get() {\n      return this._sentTime;\n    }\n  }, {\n    key: \"to\",\n    get: function get() {\n      return this._to;\n    }\n  }, {\n    key: \"ttl\",\n    get: function get() {\n      return this._ttl;\n    }\n  }, {\n    key: \"setCollapseKey\",\n    value: function setCollapseKey(collapseKey) {\n      this._collapseKey = collapseKey;\n      return this;\n    }\n  }, {\n    key: \"setData\",\n    value: function setData() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!(0, _utils.isObject)(data)) {\n        throw new Error(\"RemoteMessage:setData expects an object but got type '\" + typeof data + \"'.\");\n      }\n\n      this._data = data;\n      return this;\n    }\n  }, {\n    key: \"setMessageId\",\n    value: function setMessageId(messageId) {\n      this._messageId = messageId;\n      return this;\n    }\n  }, {\n    key: \"setMessageType\",\n    value: function setMessageType(messageType) {\n      this._messageType = messageType;\n      return this;\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(to) {\n      this._to = to;\n      return this;\n    }\n  }, {\n    key: \"setTtl\",\n    value: function setTtl(ttl) {\n      this._ttl = ttl;\n      return this;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this._data) {\n        throw new Error('RemoteMessage: Missing required `data` property');\n      } else if (!this._messageId) {\n        throw new Error('RemoteMessage: Missing required `messageId` property');\n      } else if (!this._to) {\n        throw new Error('RemoteMessage: Missing required `to` property');\n      } else if (!this._ttl) {\n        throw new Error('RemoteMessage: Missing required `ttl` property');\n      }\n\n      return {\n        collapseKey: this._collapseKey,\n        data: this._data,\n        messageId: this._messageId,\n        messageType: this._messageType,\n        to: this._to,\n        ttl: this._ttl\n      };\n    }\n  }]);\n  return RemoteMessage;\n}();\n\nexports.default = RemoteMessage;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/messaging/RemoteMessage.js"],"names":["RemoteMessage","inboundMessage","_collapseKey","collapseKey","_data","data","_from","from","_messageId","messageId","_messageType","messageType","_sentTime","sentTime","_ttl","_to","Error","to","ttl"],"mappings":";;;;;;;;;;;AAIA;;IACqBA,a;AACnB,yBAAYC,cAAZ,EAA4B;AAAA;;AAC1B,QAAIA,cAAJ,EAAoB;AAClB,WAAKC,YAAL,GAAoBD,cAAc,CAACE,WAAnC;AACA,WAAKC,KAAL,GAAaH,cAAc,CAACI,IAA5B;AACA,WAAKC,KAAL,GAAaL,cAAc,CAACM,IAA5B;AACA,WAAKC,UAAL,GAAkBP,cAAc,CAACQ,SAAjC;AACA,WAAKC,YAAL,GAAoBT,cAAc,CAACU,WAAnC;AACA,WAAKC,SAAL,GAAiBX,cAAc,CAACY,QAAhC;AACD;;AAGD,SAAKT,KAAL,GAAa,KAAKA,KAAL,IAAc,EAA3B;AAEA,SAAKI,UAAL,GAAkB,KAAKA,UAAL,IAAmB,4BAArC;AACA,SAAKM,IAAL,GAAY,IAAZ;AACD;;;;SAED,eAAkB;AAChB,aAAO,KAAKZ,YAAZ;AACD;;;SAED,eAAW;AACT,aAAO,KAAKE,KAAZ;AACD;;;SAED,eAAW;AACT,aAAO,KAAKE,KAAZ;AACD;;;SAED,eAAgB;AACd,aAAO,KAAKE,UAAZ;AACD;;;SAED,eAAkB;AAChB,aAAO,KAAKE,YAAZ;AACD;;;SAED,eAAe;AACb,aAAO,KAAKE,SAAZ;AACD;;;SAED,eAAS;AACP,aAAO,KAAKG,GAAZ;AACD;;;SAED,eAAU;AACR,aAAO,KAAKD,IAAZ;AACD;;;WAQD,wBAAeX,WAAf,EAA4B;AAC1B,WAAKD,YAAL,GAAoBC,WAApB;AACA,aAAO,IAAP;AACD;;;WAQD,mBAAmB;AAAA,UAAXE,IAAW,uEAAJ,EAAI;;AACjB,UAAI,CAAC,qBAASA,IAAT,CAAL,EAAqB;AACnB,cAAM,IAAIW,KAAJ,4DAAmE,OAAOX,IAA1E,QAAN;AACD;;AAED,WAAKD,KAAL,GAAaC,IAAb;AACA,aAAO,IAAP;AACD;;;WAQD,sBAAaI,SAAb,EAAwB;AACtB,WAAKD,UAAL,GAAkBC,SAAlB;AACA,aAAO,IAAP;AACD;;;WAQD,wBAAeE,WAAf,EAA4B;AAC1B,WAAKD,YAAL,GAAoBC,WAApB;AACA,aAAO,IAAP;AACD;;;WAQD,eAAMM,EAAN,EAAU;AACR,WAAKF,GAAL,GAAWE,EAAX;AACA,aAAO,IAAP;AACD;;;WAQD,gBAAOC,GAAP,EAAY;AACV,WAAKJ,IAAL,GAAYI,GAAZ;AACA,aAAO,IAAP;AACD;;;WAED,iBAAQ;AACN,UAAI,CAAC,KAAKd,KAAV,EAAiB;AACf,cAAM,IAAIY,KAAJ,CAAU,iDAAV,CAAN;AACD,OAFD,MAEO,IAAI,CAAC,KAAKR,UAAV,EAAsB;AAC3B,cAAM,IAAIQ,KAAJ,CAAU,sDAAV,CAAN;AACD,OAFM,MAEA,IAAI,CAAC,KAAKD,GAAV,EAAe;AACpB,cAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD,OAFM,MAEA,IAAI,CAAC,KAAKF,IAAV,EAAgB;AACrB,cAAM,IAAIE,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,aAAO;AACLb,QAAAA,WAAW,EAAE,KAAKD,YADb;AAELG,QAAAA,IAAI,EAAE,KAAKD,KAFN;AAGLK,QAAAA,SAAS,EAAE,KAAKD,UAHX;AAILG,QAAAA,WAAW,EAAE,KAAKD,YAJb;AAKLO,QAAAA,EAAE,EAAE,KAAKF,GALJ;AAMLG,QAAAA,GAAG,EAAE,KAAKJ;AANL,OAAP;AAQD","sourcesContent":["/**\n * \n * RemoteMessage representation wrapper\n */\nimport { isObject, generatePushID } from '../../utils';\nexport default class RemoteMessage {\n  constructor(inboundMessage) {\n    if (inboundMessage) {\n      this._collapseKey = inboundMessage.collapseKey;\n      this._data = inboundMessage.data;\n      this._from = inboundMessage.from;\n      this._messageId = inboundMessage.messageId;\n      this._messageType = inboundMessage.messageType;\n      this._sentTime = inboundMessage.sentTime;\n    } // defaults\n\n\n    this._data = this._data || {}; // TODO: Is this the best way to generate an ID?\n\n    this._messageId = this._messageId || generatePushID();\n    this._ttl = 3600;\n  }\n\n  get collapseKey() {\n    return this._collapseKey;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get from() {\n    return this._from;\n  }\n\n  get messageId() {\n    return this._messageId;\n  }\n\n  get messageType() {\n    return this._messageType;\n  }\n\n  get sentTime() {\n    return this._sentTime;\n  }\n\n  get to() {\n    return this._to;\n  }\n\n  get ttl() {\n    return this._ttl;\n  }\n  /**\n   *\n   * @param collapseKey\n   * @returns {RemoteMessage}\n   */\n\n\n  setCollapseKey(collapseKey) {\n    this._collapseKey = collapseKey;\n    return this;\n  }\n  /**\n   *\n   * @param data\n   * @returns {RemoteMessage}\n   */\n\n\n  setData(data = {}) {\n    if (!isObject(data)) {\n      throw new Error(`RemoteMessage:setData expects an object but got type '${typeof data}'.`);\n    }\n\n    this._data = data;\n    return this;\n  }\n  /**\n   *\n   * @param messageId\n   * @returns {RemoteMessage}\n   */\n\n\n  setMessageId(messageId) {\n    this._messageId = messageId;\n    return this;\n  }\n  /**\n   *\n   * @param messageType\n   * @returns {RemoteMessage}\n   */\n\n\n  setMessageType(messageType) {\n    this._messageType = messageType;\n    return this;\n  }\n  /**\n   *\n   * @param to\n   * @returns {RemoteMessage}\n   */\n\n\n  setTo(to) {\n    this._to = to;\n    return this;\n  }\n  /**\n   *\n   * @param ttl\n   * @returns {RemoteMessage}\n   */\n\n\n  setTtl(ttl) {\n    this._ttl = ttl;\n    return this;\n  }\n\n  build() {\n    if (!this._data) {\n      throw new Error('RemoteMessage: Missing required `data` property');\n    } else if (!this._messageId) {\n      throw new Error('RemoteMessage: Missing required `messageId` property');\n    } else if (!this._to) {\n      throw new Error('RemoteMessage: Missing required `to` property');\n    } else if (!this._ttl) {\n      throw new Error('RemoteMessage: Missing required `ttl` property');\n    }\n\n    return {\n      collapseKey: this._collapseKey,\n      data: this._data,\n      messageId: this._messageId,\n      messageType: this._messageType,\n      to: this._to,\n      ttl: this._ttl\n    };\n  }\n\n}"]},"metadata":{},"sourceType":"script"}