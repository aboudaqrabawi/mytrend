{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statics = exports.default = exports.NAMESPACE = exports.MODULE_NAME = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _DynamicLink = _interopRequireDefault(require(\"./DynamicLink\"));\n\nvar _events = require(\"../../utils/events\");\n\nvar _log = require(\"../../utils/log\");\n\nvar _ModuleBase2 = _interopRequireDefault(require(\"../../utils/ModuleBase\"));\n\nvar _native = require(\"../../utils/native\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NATIVE_EVENTS = ['links_link_received'];\nvar MODULE_NAME = 'RNFirebaseLinks';\nexports.MODULE_NAME = MODULE_NAME;\nvar NAMESPACE = 'links';\nexports.NAMESPACE = NAMESPACE;\n\nvar Links = function (_ModuleBase) {\n  (0, _inherits2.default)(Links, _ModuleBase);\n\n  var _super = _createSuper(Links);\n\n  function Links(app) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Links);\n    _this = _super.call(this, app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n\n    _events.SharedEventEmitter.addListener('links_link_received', function (link) {\n      _events.SharedEventEmitter.emit('onLink', link);\n    });\n\n    if (_reactNative.Platform.OS === 'ios') {\n      (0, _native.getNativeModule)((0, _assertThisInitialized2.default)(_this)).jsInitialised();\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Links, [{\n    key: \"createDynamicLink\",\n    value: function createDynamicLink(link) {\n      if (!(link instanceof _DynamicLink.default)) {\n        return Promise.reject(new Error(\"Links:createDynamicLink expects a 'DynamicLink' but got type \" + typeof link));\n      }\n\n      try {\n        return (0, _native.getNativeModule)(this).createDynamicLink(link.build());\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n  }, {\n    key: \"createShortDynamicLink\",\n    value: function createShortDynamicLink(link, type) {\n      if (!(link instanceof _DynamicLink.default)) {\n        return Promise.reject(new Error(\"Links:createShortDynamicLink expects a 'DynamicLink' but got type \" + typeof link));\n      }\n\n      try {\n        return (0, _native.getNativeModule)(this).createShortDynamicLink(link.build(), type);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n  }, {\n    key: \"getInitialLink\",\n    value: function getInitialLink() {\n      return (0, _native.getNativeModule)(this).getInitialLink();\n    }\n  }, {\n    key: \"onLink\",\n    value: function onLink(listener) {\n      var _this2 = this;\n\n      (0, _log.getLogger)(this).info('Creating onLink listener');\n\n      _events.SharedEventEmitter.addListener('onLink', listener);\n\n      return function () {\n        (0, _log.getLogger)(_this2).info('Removing onLink listener');\n\n        _events.SharedEventEmitter.removeListener('onLink', listener);\n      };\n    }\n  }]);\n  return Links;\n}(_ModuleBase2.default);\n\nexports.default = Links;\nvar statics = {\n  DynamicLink: _DynamicLink.default\n};\nexports.statics = statics;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/links/index.js"],"names":["NATIVE_EVENTS","MODULE_NAME","NAMESPACE","Links","app","events","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","SharedEventEmitter","addListener","link","emit","Platform","OS","jsInitialised","DynamicLink","Promise","reject","Error","createDynamicLink","build","error","type","createShortDynamicLink","getInitialLink","listener","info","removeListener","ModuleBase","statics"],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AACA,IAAMA,aAAa,GAAG,CAAC,qBAAD,CAAtB;AACO,IAAMC,WAAW,GAAG,iBAApB;;AACA,IAAMC,SAAS,GAAG,OAAlB;;;IAKcC,K;;;;;AACnB,iBAAYC,GAAZ,EAAiB;AAAA;;AAAA;AACf,8BAAMA,GAAN,EAAW;AACTC,MAAAA,MAAM,EAAEL,aADC;AAETM,MAAAA,UAAU,EAAEL,WAFH;AAGTM,MAAAA,kBAAkB,EAAE,KAHX;AAITC,MAAAA,mBAAmB,EAAE,KAJZ;AAKTC,MAAAA,SAAS,EAAEP;AALF,KAAX;;AAOAQ,+BAAmBC,WAAnB,CAEA,qBAFA,EAEuB,UAAAC,IAAI,EAAI;AAC7BF,iCAAmBG,IAAnB,CAAwB,QAAxB,EAAkCD,IAAlC;AACD,KAJD;;AAMA,QAAIE,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB,gFAAsBC,aAAtB;AACD;;AAhBc;AAiBhB;;;;WAQD,2BAAkBJ,IAAlB,EAAwB;AACtB,UAAI,EAAEA,IAAI,YAAYK,oBAAlB,CAAJ,EAAoC;AAClC,eAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,mEAA0E,OAAOR,IAAjF,CAAf,CAAP;AACD;;AAED,UAAI;AACF,eAAO,6BAAgB,IAAhB,EAAsBS,iBAAtB,CAAwCT,IAAI,CAACU,KAAL,EAAxC,CAAP;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACd,eAAOL,OAAO,CAACC,MAAR,CAAeI,KAAf,CAAP;AACD;AACF;;;WAQD,gCAAuBX,IAAvB,EAA6BY,IAA7B,EAAmC;AACjC,UAAI,EAAEZ,IAAI,YAAYK,oBAAlB,CAAJ,EAAoC;AAClC,eAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,wEAA+E,OAAOR,IAAtF,CAAf,CAAP;AACD;;AAED,UAAI;AACF,eAAO,6BAAgB,IAAhB,EAAsBa,sBAAtB,CAA6Cb,IAAI,CAACU,KAAL,EAA7C,EAA2DE,IAA3D,CAAP;AACD,OAFD,CAEE,OAAOD,KAAP,EAAc;AACd,eAAOL,OAAO,CAACC,MAAR,CAAeI,KAAf,CAAP;AACD;AACF;;;WAOD,0BAAiB;AACf,aAAO,6BAAgB,IAAhB,EAAsBG,cAAtB,EAAP;AACD;;;WAQD,gBAAOC,QAAP,EAAiB;AAAA;;AACf,0BAAU,IAAV,EAAgBC,IAAhB,CAAqB,0BAArB;;AACAlB,iCAAmBC,WAAnB,CAA+B,QAA/B,EAAyCgB,QAAzC;;AACA,aAAO,YAAM;AACX,4BAAU,MAAV,EAAgBC,IAAhB,CAAqB,0BAArB;;AACAlB,mCAAmBmB,cAAnB,CAAkC,QAAlC,EAA4CF,QAA5C;AACD,OAHD;AAID;;;EA9EgCG,oB;;;AAiF5B,IAAMC,OAAO,GAAG;AACrBd,EAAAA,WAAW,EAAXA;AADqB,CAAhB","sourcesContent":["/**\n * \n * Dynamic Links representation wrapper\n */\nimport { Platform } from 'react-native';\nimport DynamicLink from './DynamicLink';\nimport { SharedEventEmitter } from '../../utils/events';\nimport { getLogger } from '../../utils/log';\nimport ModuleBase from '../../utils/ModuleBase';\nimport { getNativeModule } from '../../utils/native';\nconst NATIVE_EVENTS = ['links_link_received'];\nexport const MODULE_NAME = 'RNFirebaseLinks';\nexport const NAMESPACE = 'links';\n/**\n * @class Links\n */\n\nexport default class Links extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public event name: onMessage\n    'links_link_received', link => {\n      SharedEventEmitter.emit('onLink', link);\n    }); // Tell the native module that we're ready to receive events\n\n    if (Platform.OS === 'ios') {\n      getNativeModule(this).jsInitialised();\n    }\n  }\n  /**\n   * Create long Dynamic Link from parameters\n   * @param parameters\n   * @returns {Promise.<string>}\n   */\n\n\n  createDynamicLink(link) {\n    if (!(link instanceof DynamicLink)) {\n      return Promise.reject(new Error(`Links:createDynamicLink expects a 'DynamicLink' but got type ${typeof link}`));\n    }\n\n    try {\n      return getNativeModule(this).createDynamicLink(link.build());\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  /**\n   * Create short Dynamic Link from parameters\n   * @param parameters\n   * @returns {Promise.<string>}\n   */\n\n\n  createShortDynamicLink(link, type) {\n    if (!(link instanceof DynamicLink)) {\n      return Promise.reject(new Error(`Links:createShortDynamicLink expects a 'DynamicLink' but got type ${typeof link}`));\n    }\n\n    try {\n      return getNativeModule(this).createShortDynamicLink(link.build(), type);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  /**\n   * Returns the link that triggered application open\n   * @returns {Promise.<string>}\n   */\n\n\n  getInitialLink() {\n    return getNativeModule(this).getInitialLink();\n  }\n  /**\n   * Subscribe to dynamic links\n   * @param listener\n   * @returns {Function}\n   */\n\n\n  onLink(listener) {\n    getLogger(this).info('Creating onLink listener');\n    SharedEventEmitter.addListener('onLink', listener);\n    return () => {\n      getLogger(this).info('Removing onLink listener');\n      SharedEventEmitter.removeListener('onLink', listener);\n    };\n  }\n\n}\nexport const statics = {\n  DynamicLink\n};"]},"metadata":{},"sourceType":"script"}