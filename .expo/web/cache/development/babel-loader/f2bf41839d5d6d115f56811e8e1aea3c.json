{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _types = require(\"./types\");\n\nvar AndroidChannel = function () {\n  function AndroidChannel(channelId, name, importance) {\n    (0, _classCallCheck2.default)(this, AndroidChannel);\n\n    if (!Object.values(_types.Importance).includes(importance)) {\n      throw new Error(\"AndroidChannel() Invalid Importance: \" + importance);\n    }\n\n    this._channelId = channelId;\n    this._name = name;\n    this._importance = importance;\n  }\n\n  (0, _createClass2.default)(AndroidChannel, [{\n    key: \"bypassDnd\",\n    get: function get() {\n      return this._bypassDnd;\n    }\n  }, {\n    key: \"channelId\",\n    get: function get() {\n      return this._channelId;\n    }\n  }, {\n    key: \"description\",\n    get: function get() {\n      return this._description;\n    }\n  }, {\n    key: \"group\",\n    get: function get() {\n      return this._group;\n    }\n  }, {\n    key: \"importance\",\n    get: function get() {\n      return this._importance;\n    }\n  }, {\n    key: \"lightColor\",\n    get: function get() {\n      return this._lightColor;\n    }\n  }, {\n    key: \"lightsEnabled\",\n    get: function get() {\n      return this._lightsEnabled;\n    }\n  }, {\n    key: \"lockScreenVisibility\",\n    get: function get() {\n      return this._lockScreenVisibility;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: \"showBadge\",\n    get: function get() {\n      return this._showBadge;\n    }\n  }, {\n    key: \"sound\",\n    get: function get() {\n      return this._sound;\n    }\n  }, {\n    key: \"vibrationEnabled\",\n    get: function get() {\n      return this._vibrationEnabled;\n    }\n  }, {\n    key: \"vibrationPattern\",\n    get: function get() {\n      return this._vibrationPattern;\n    }\n  }, {\n    key: \"enableLights\",\n    value: function enableLights(lightsEnabled) {\n      this._lightsEnabled = lightsEnabled;\n      return this;\n    }\n  }, {\n    key: \"enableVibration\",\n    value: function enableVibration(vibrationEnabled) {\n      this._vibrationEnabled = vibrationEnabled;\n      return this;\n    }\n  }, {\n    key: \"setBypassDnd\",\n    value: function setBypassDnd(bypassDnd) {\n      this._bypassDnd = bypassDnd;\n      return this;\n    }\n  }, {\n    key: \"setDescription\",\n    value: function setDescription(description) {\n      this._description = description;\n      return this;\n    }\n  }, {\n    key: \"setGroup\",\n    value: function setGroup(groupId) {\n      this._group = groupId;\n      return this;\n    }\n  }, {\n    key: \"setLightColor\",\n    value: function setLightColor(lightColor) {\n      this._lightColor = lightColor;\n      return this;\n    }\n  }, {\n    key: \"setLockScreenVisibility\",\n    value: function setLockScreenVisibility(lockScreenVisibility) {\n      if (!Object.values(_types.Visibility).includes(lockScreenVisibility)) {\n        throw new Error(\"AndroidChannel:setLockScreenVisibility Invalid Visibility: \" + lockScreenVisibility);\n      }\n\n      this._lockScreenVisibility = lockScreenVisibility;\n      return this;\n    }\n  }, {\n    key: \"setShowBadge\",\n    value: function setShowBadge(showBadge) {\n      this._showBadge = showBadge;\n      return this;\n    }\n  }, {\n    key: \"setSound\",\n    value: function setSound(sound) {\n      this._sound = sound;\n      return this;\n    }\n  }, {\n    key: \"setVibrationPattern\",\n    value: function setVibrationPattern(vibrationPattern) {\n      this._vibrationPattern = vibrationPattern;\n      return this;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this._channelId) {\n        throw new Error('AndroidChannel: Missing required `channelId` property');\n      } else if (!this._importance) {\n        throw new Error('AndroidChannel: Missing required `importance` property');\n      } else if (!this._name) {\n        throw new Error('AndroidChannel: Missing required `name` property');\n      }\n\n      return {\n        bypassDnd: this._bypassDnd,\n        channelId: this._channelId,\n        description: this._description,\n        group: this._group,\n        importance: this._importance,\n        lightColor: this._lightColor,\n        lightsEnabled: this._lightsEnabled,\n        lockScreenVisibility: this._lockScreenVisibility,\n        name: this._name,\n        showBadge: this._showBadge,\n        sound: this._sound,\n        vibrationEnabled: this._vibrationEnabled,\n        vibrationPattern: this._vibrationPattern\n      };\n    }\n  }]);\n  return AndroidChannel;\n}();\n\nexports.default = AndroidChannel;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/notifications/AndroidChannel.js"],"names":["AndroidChannel","channelId","name","importance","Object","values","Importance","includes","Error","_channelId","_name","_importance","_bypassDnd","_description","_group","_lightColor","_lightsEnabled","_lockScreenVisibility","_showBadge","_sound","_vibrationEnabled","_vibrationPattern","lightsEnabled","vibrationEnabled","bypassDnd","description","groupId","lightColor","lockScreenVisibility","Visibility","showBadge","sound","vibrationPattern","group"],"mappings":"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","sourcesContent":["/**\n * \n * AndroidChannel representation wrapper\n */\nimport { Importance, Visibility } from './types';\nexport default class AndroidChannel {\n  constructor(channelId, name, importance) {\n    if (!Object.values(Importance).includes(importance)) {\n      throw new Error(`AndroidChannel() Invalid Importance: ${importance}`);\n    }\n\n    this._channelId = channelId;\n    this._name = name;\n    this._importance = importance;\n  }\n\n  get bypassDnd() {\n    return this._bypassDnd;\n  }\n\n  get channelId() {\n    return this._channelId;\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  get importance() {\n    return this._importance;\n  }\n\n  get lightColor() {\n    return this._lightColor;\n  }\n\n  get lightsEnabled() {\n    return this._lightsEnabled;\n  }\n\n  get lockScreenVisibility() {\n    return this._lockScreenVisibility;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get showBadge() {\n    return this._showBadge;\n  }\n\n  get sound() {\n    return this._sound;\n  }\n\n  get vibrationEnabled() {\n    return this._vibrationEnabled;\n  }\n\n  get vibrationPattern() {\n    return this._vibrationPattern;\n  }\n  /**\n   *\n   * @param lightsEnabled\n   * @returns {AndroidChannel}\n   */\n\n\n  enableLights(lightsEnabled) {\n    this._lightsEnabled = lightsEnabled;\n    return this;\n  }\n  /**\n   *\n   * @param vibrationEnabled\n   * @returns {AndroidChannel}\n   */\n\n\n  enableVibration(vibrationEnabled) {\n    this._vibrationEnabled = vibrationEnabled;\n    return this;\n  }\n  /**\n   *\n   * @param bypassDnd\n   * @returns {AndroidChannel}\n   */\n\n\n  setBypassDnd(bypassDnd) {\n    this._bypassDnd = bypassDnd;\n    return this;\n  }\n  /**\n   *\n   * @param description\n   * @returns {AndroidChannel}\n   */\n\n\n  setDescription(description) {\n    this._description = description;\n    return this;\n  }\n  /**\n   *\n   * @param group\n   * @returns {AndroidChannel}\n   */\n\n\n  setGroup(groupId) {\n    this._group = groupId;\n    return this;\n  }\n  /**\n   *\n   * @param lightColor\n   * @returns {AndroidChannel}\n   */\n\n\n  setLightColor(lightColor) {\n    this._lightColor = lightColor;\n    return this;\n  }\n  /**\n   *\n   * @param lockScreenVisibility\n   * @returns {AndroidChannel}\n   */\n\n\n  setLockScreenVisibility(lockScreenVisibility) {\n    if (!Object.values(Visibility).includes(lockScreenVisibility)) {\n      throw new Error(`AndroidChannel:setLockScreenVisibility Invalid Visibility: ${lockScreenVisibility}`);\n    }\n\n    this._lockScreenVisibility = lockScreenVisibility;\n    return this;\n  }\n  /**\n   *\n   * @param showBadge\n   * @returns {AndroidChannel}\n   */\n\n\n  setShowBadge(showBadge) {\n    this._showBadge = showBadge;\n    return this;\n  }\n  /**\n   *\n   * @param sound\n   * @returns {AndroidChannel}\n   */\n\n\n  setSound(sound) {\n    this._sound = sound;\n    return this;\n  }\n  /**\n   *\n   * @param vibrationPattern\n   * @returns {AndroidChannel}\n   */\n\n\n  setVibrationPattern(vibrationPattern) {\n    this._vibrationPattern = vibrationPattern;\n    return this;\n  }\n\n  build() {\n    if (!this._channelId) {\n      throw new Error('AndroidChannel: Missing required `channelId` property');\n    } else if (!this._importance) {\n      throw new Error('AndroidChannel: Missing required `importance` property');\n    } else if (!this._name) {\n      throw new Error('AndroidChannel: Missing required `name` property');\n    }\n\n    return {\n      bypassDnd: this._bypassDnd,\n      channelId: this._channelId,\n      description: this._description,\n      group: this._group,\n      importance: this._importance,\n      lightColor: this._lightColor,\n      lightsEnabled: this._lightsEnabled,\n      lockScreenVisibility: this._lockScreenVisibility,\n      name: this._name,\n      showBadge: this._showBadge,\n      sound: this._sound,\n      vibrationEnabled: this._vibrationEnabled,\n      vibrationPattern: this._vibrationPattern\n    };\n  }\n\n}"]},"metadata":{},"sourceType":"script"}