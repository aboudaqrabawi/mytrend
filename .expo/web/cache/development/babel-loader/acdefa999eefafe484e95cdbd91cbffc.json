{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statics = exports.default = exports.NAMESPACE = exports.MODULE_NAME = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _ModuleBase2 = _interopRequireDefault(require(\"../../utils/ModuleBase\"));\n\nvar _native = require(\"../../utils/native\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar MODULE_NAME = 'RNFirebaseCrashlytics';\nexports.MODULE_NAME = MODULE_NAME;\nvar NAMESPACE = 'crashlytics';\nexports.NAMESPACE = NAMESPACE;\n\nvar Crashlytics = function (_ModuleBase) {\n  (0, _inherits2.default)(Crashlytics, _ModuleBase);\n\n  var _super = _createSuper(Crashlytics);\n\n  function Crashlytics(app) {\n    (0, _classCallCheck2.default)(this, Crashlytics);\n    return _super.call(this, app, {\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n  }\n\n  (0, _createClass2.default)(Crashlytics, [{\n    key: \"crash\",\n    value: function crash() {\n      (0, _native.getNativeModule)(this).crash();\n    }\n  }, {\n    key: \"log\",\n    value: function log(message) {\n      if (typeof message === 'string') {\n        (0, _native.getNativeModule)(this).log(message);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"recordError\",\n    value: function recordError(code, message) {\n      if (typeof code === 'number' && typeof message === 'string') {\n        (0, _native.getNativeModule)(this).recordError(code, message);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"recordCustomError\",\n    value: function recordCustomError(name, message, stack) {\n      if (typeof stack === 'undefined') {\n        if (typeof name === 'string' && typeof message === 'string') {\n          (0, _native.getNativeModule)(this).recordCustomError(name, message, []);\n        } else {\n          throw new Error('Invalid parameter type!');\n        }\n      } else if (typeof name === 'string' && typeof message === 'string' && Array.isArray(stack)) {\n        var hasKey = true;\n        stack.forEach(function (v) {\n          if (!Object.prototype.hasOwnProperty.call(v, 'fileName')) {\n            hasKey = false;\n          }\n        });\n\n        if (hasKey) {\n          (0, _native.getNativeModule)(this).recordCustomError(name, message, stack);\n        } else {\n          throw new Error('Missing required argument fileName!');\n        }\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setBoolValue\",\n    value: function setBoolValue(key, value) {\n      if (typeof key === 'string' && typeof value === 'boolean') {\n        (0, _native.getNativeModule)(this).setBoolValue(key, value);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setFloatValue\",\n    value: function setFloatValue(key, value) {\n      if (typeof key === 'string' && typeof value === 'number') {\n        (0, _native.getNativeModule)(this).setFloatValue(key, value);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setIntValue\",\n    value: function setIntValue(key, value) {\n      if (typeof key === 'string' && typeof value === 'number') {\n        (0, _native.getNativeModule)(this).setIntValue(key, value);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setStringValue\",\n    value: function setStringValue(key, value) {\n      if (typeof key === 'string' && typeof value === 'string') {\n        (0, _native.getNativeModule)(this).setStringValue(key, value);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setUserIdentifier\",\n    value: function setUserIdentifier(userId) {\n      if (typeof userId === 'string') {\n        (0, _native.getNativeModule)(this).setUserIdentifier(userId);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setUserName\",\n    value: function setUserName(userName) {\n      if (typeof userName === 'string') {\n        return (0, _native.getNativeModule)(this).setUserName(userName);\n      }\n\n      throw new Error('Invalid parameter type!');\n    }\n  }, {\n    key: \"setUserEmail\",\n    value: function setUserEmail(userEmail) {\n      if (typeof userEmail === 'string') {\n        (0, _native.getNativeModule)(this).setUserEmail(userEmail);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"enableCrashlyticsCollection\",\n    value: function enableCrashlyticsCollection() {\n      (0, _native.getNativeModule)(this).enableCrashlyticsCollection();\n    }\n  }]);\n  return Crashlytics;\n}(_ModuleBase2.default);\n\nexports.default = Crashlytics;\nvar statics = {};\nexports.statics = statics;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/crashlytics/index.js"],"names":["MODULE_NAME","NAMESPACE","Crashlytics","app","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","crash","message","log","Error","code","recordError","name","stack","recordCustomError","Array","isArray","hasKey","forEach","v","Object","prototype","hasOwnProperty","call","key","value","setBoolValue","setFloatValue","setIntValue","setStringValue","userId","setUserIdentifier","userName","setUserName","userEmail","setUserEmail","enableCrashlyticsCollection","ModuleBase","statics"],"mappings":"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","sourcesContent":["/**\n * \n * Crash Reporting representation wrapper\n */\nimport ModuleBase from '../../utils/ModuleBase';\nimport { getNativeModule } from '../../utils/native';\nexport const MODULE_NAME = 'RNFirebaseCrashlytics';\nexport const NAMESPACE = 'crashlytics';\nexport default class Crashlytics extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n  }\n  /**\n   * Forces a crash. Useful for testing your application is set up correctly.\n   */\n\n\n  crash() {\n    getNativeModule(this).crash();\n  }\n  /**\n   * Logs a message that will appear in any subsequent crash reports.\n   * @param {string} message\n   */\n\n\n  log(message) {\n    if (typeof message === 'string') {\n      getNativeModule(this).log(message);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Logs a non fatal exception.\n   * @param {number} code\n   * @param {string} message\n   */\n\n\n  recordError(code, message) {\n    if (typeof code === 'number' && typeof message === 'string') {\n      getNativeModule(this).recordError(code, message);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Logs a custom non fatal exception.\n   * @param {string} name\n   * @param {string} message\n   * @param {Object[]} stack Optional\n   */\n\n\n  recordCustomError(name, message, stack) {\n    if (typeof stack === 'undefined') {\n      if (typeof name === 'string' && typeof message === 'string') {\n        getNativeModule(this).recordCustomError(name, message, []);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    } else if (typeof name === 'string' && typeof message === 'string' && Array.isArray(stack)) {\n      let hasKey = true;\n      stack.forEach(v => {\n        if (!Object.prototype.hasOwnProperty.call(v, 'fileName')) {\n          hasKey = false;\n        }\n      });\n\n      if (hasKey) {\n        getNativeModule(this).recordCustomError(name, message, stack);\n      } else {\n        throw new Error('Missing required argument fileName!');\n      }\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set a boolean value to show alongside any subsequent crash reports.\n   */\n\n\n  setBoolValue(key, value) {\n    if (typeof key === 'string' && typeof value === 'boolean') {\n      getNativeModule(this).setBoolValue(key, value);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set a float value to show alongside any subsequent crash reports.\n   */\n\n\n  setFloatValue(key, value) {\n    if (typeof key === 'string' && typeof value === 'number') {\n      getNativeModule(this).setFloatValue(key, value);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set an integer value to show alongside any subsequent crash reports.\n   */\n\n\n  setIntValue(key, value) {\n    if (typeof key === 'string' && typeof value === 'number') {\n      getNativeModule(this).setIntValue(key, value);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set a string value to show alongside any subsequent crash reports.\n   */\n\n\n  setStringValue(key, value) {\n    if (typeof key === 'string' && typeof value === 'string') {\n      getNativeModule(this).setStringValue(key, value);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set the user ID to show alongside any subsequent crash reports.\n   */\n\n\n  setUserIdentifier(userId) {\n    if (typeof userId === 'string') {\n      getNativeModule(this).setUserIdentifier(userId);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set the user name to show alongside any subsequent crash reports.\n   */\n\n\n  setUserName(userName) {\n    if (typeof userName === 'string') {\n      return getNativeModule(this).setUserName(userName);\n    }\n\n    throw new Error('Invalid parameter type!');\n  }\n  /**\n   * Set the user email to show alongside any subsequent crash reports.\n   */\n\n\n  setUserEmail(userEmail) {\n    if (typeof userEmail === 'string') {\n      getNativeModule(this).setUserEmail(userEmail);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Enable Crashlytics reporting. Only avaliable when disabled automatic initialization\n   */\n\n\n  enableCrashlyticsCollection() {\n    getNativeModule(this).enableCrashlyticsCollection();\n  }\n\n}\nexport const statics = {};"]},"metadata":{},"sourceType":"script"}