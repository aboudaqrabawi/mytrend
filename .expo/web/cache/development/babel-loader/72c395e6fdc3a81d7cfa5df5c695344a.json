{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _Query = _interopRequireDefault(require(\"./Query\"));\n\nvar _DocumentReference = _interopRequireDefault(require(\"./DocumentReference\"));\n\nvar _utils = require(\"../../utils\");\n\nvar CollectionReference = function () {\n  function CollectionReference(firestore, collectionPath) {\n    (0, _classCallCheck2.default)(this, CollectionReference);\n    this._collectionPath = collectionPath;\n    this._firestore = firestore;\n    this._query = new _Query.default(firestore, collectionPath);\n  }\n\n  (0, _createClass2.default)(CollectionReference, [{\n    key: \"firestore\",\n    get: function get() {\n      return this._firestore;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._collectionPath.id;\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parentPath = this._collectionPath.parent();\n\n      return parentPath ? new _DocumentReference.default(this._firestore, parentPath) : null;\n    }\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._collectionPath.relativeName;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherCollectionReference) {\n      if (!(otherCollectionReference instanceof CollectionReference)) {\n        throw new Error('firebase.firestore.CollectionReference.isEqual(*) expects an instance of CollectionReference.');\n      }\n\n      if (this.path !== otherCollectionReference.path) return false;\n\n      if (this._firestore.app.name !== otherCollectionReference._firestore.app.name) {\n        return false;\n      }\n\n      if (this._firestore.app.options.projectId !== otherCollectionReference._firestore.app.options.projectId) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var documentRef = this.doc();\n      return documentRef.set(data).then(function () {\n        return Promise.resolve(documentRef);\n      });\n    }\n  }, {\n    key: \"doc\",\n    value: function doc(documentPath) {\n      var newPath = documentPath || (0, _utils.firestoreAutoId)();\n\n      var path = this._collectionPath.child(newPath);\n\n      if (!path.isDocument) {\n        throw new Error('Argument \"documentPath\" must point to a document.');\n      }\n\n      return new _DocumentReference.default(this._firestore, path);\n    }\n  }, {\n    key: \"endAt\",\n    value: function endAt() {\n      for (var _len = arguments.length, snapshotOrVarArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n        snapshotOrVarArgs[_key] = arguments[_key];\n      }\n\n      return this._query.endAt(snapshotOrVarArgs);\n    }\n  }, {\n    key: \"endBefore\",\n    value: function endBefore() {\n      for (var _len2 = arguments.length, snapshotOrVarArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        snapshotOrVarArgs[_key2] = arguments[_key2];\n      }\n\n      return this._query.endBefore(snapshotOrVarArgs);\n    }\n  }, {\n    key: \"get\",\n    value: function get(options) {\n      return this._query.get(options);\n    }\n  }, {\n    key: \"limit\",\n    value: function limit(_limit) {\n      return this._query.limit(_limit);\n    }\n  }, {\n    key: \"onSnapshot\",\n    value: function onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n      return this._query.onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError);\n    }\n  }, {\n    key: \"orderBy\",\n    value: function orderBy(fieldPath, directionStr) {\n      return this._query.orderBy(fieldPath, directionStr);\n    }\n  }, {\n    key: \"startAfter\",\n    value: function startAfter() {\n      for (var _len3 = arguments.length, snapshotOrVarArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        snapshotOrVarArgs[_key3] = arguments[_key3];\n      }\n\n      return this._query.startAfter(snapshotOrVarArgs);\n    }\n  }, {\n    key: \"startAt\",\n    value: function startAt() {\n      for (var _len4 = arguments.length, snapshotOrVarArgs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        snapshotOrVarArgs[_key4] = arguments[_key4];\n      }\n\n      return this._query.startAt(snapshotOrVarArgs);\n    }\n  }, {\n    key: \"where\",\n    value: function where(fieldPath, opStr, value) {\n      return this._query.where(fieldPath, opStr, value);\n    }\n  }]);\n  return CollectionReference;\n}();\n\nexports.default = CollectionReference;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/firestore/CollectionReference.js"],"names":["CollectionReference","firestore","collectionPath","_collectionPath","_firestore","_query","Query","id","parentPath","parent","DocumentReference","relativeName","otherCollectionReference","Error","path","app","name","options","projectId","data","documentRef","doc","set","then","Promise","resolve","documentPath","newPath","child","isDocument","snapshotOrVarArgs","endAt","endBefore","get","limit","optionsOrObserverOrOnNext","observerOrOnNextOrOnError","onError","onSnapshot","fieldPath","directionStr","orderBy","startAfter","startAt","opStr","value","where"],"mappings":"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","sourcesContent":["/**\n * \n * CollectionReference representation wrapper\n */\nimport Query from './Query';\nimport DocumentReference from './DocumentReference';\nimport { firestoreAutoId } from '../../utils';\n\n/**\n * @class CollectionReference\n */\nexport default class CollectionReference {\n  constructor(firestore, collectionPath) {\n    this._collectionPath = collectionPath;\n    this._firestore = firestore;\n    this._query = new Query(firestore, collectionPath);\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  get id() {\n    return this._collectionPath.id;\n  }\n\n  get parent() {\n    const parentPath = this._collectionPath.parent();\n\n    return parentPath ? new DocumentReference(this._firestore, parentPath) : null;\n  }\n\n  get path() {\n    return this._collectionPath.relativeName;\n  }\n\n  isEqual(otherCollectionReference) {\n    if (!(otherCollectionReference instanceof CollectionReference)) {\n      throw new Error('firebase.firestore.CollectionReference.isEqual(*) expects an instance of CollectionReference.');\n    } // check paths match\n\n\n    if (this.path !== otherCollectionReference.path) return false; // check same firestore app name\n\n    if (this._firestore.app.name !== otherCollectionReference._firestore.app.name) {\n      return false;\n    } // check same firestore app projectId\n    // noinspection RedundantIfStatementJS\n\n\n    if (this._firestore.app.options.projectId !== otherCollectionReference._firestore.app.options.projectId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  add(data) {\n    const documentRef = this.doc();\n    return documentRef.set(data).then(() => Promise.resolve(documentRef));\n  }\n\n  doc(documentPath) {\n    const newPath = documentPath || firestoreAutoId();\n\n    const path = this._collectionPath.child(newPath);\n\n    if (!path.isDocument) {\n      throw new Error('Argument \"documentPath\" must point to a document.');\n    }\n\n    return new DocumentReference(this._firestore, path);\n  } // From Query\n\n\n  endAt(...snapshotOrVarArgs) {\n    return this._query.endAt(snapshotOrVarArgs);\n  }\n\n  endBefore(...snapshotOrVarArgs) {\n    return this._query.endBefore(snapshotOrVarArgs);\n  }\n\n  get(options) {\n    return this._query.get(options);\n  }\n\n  limit(limit) {\n    return this._query.limit(limit);\n  }\n\n  onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n    return this._query.onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError);\n  }\n\n  orderBy(fieldPath, directionStr) {\n    return this._query.orderBy(fieldPath, directionStr);\n  }\n\n  startAfter(...snapshotOrVarArgs) {\n    return this._query.startAfter(snapshotOrVarArgs);\n  }\n\n  startAt(...snapshotOrVarArgs) {\n    return this._query.startAt(snapshotOrVarArgs);\n  }\n\n  where(fieldPath, opStr, value) {\n    return this._query.where(fieldPath, opStr, value);\n  }\n\n}"]},"metadata":{},"sourceType":"script"}