{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statics = exports.default = exports.NAMESPACE = exports.MODULE_NAME = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _events = require(\"../../utils/events\");\n\nvar _internals = _interopRequireDefault(require(\"../../utils/internals\"));\n\nvar _log = require(\"../../utils/log\");\n\nvar _ModuleBase2 = _interopRequireDefault(require(\"../../utils/ModuleBase\"));\n\nvar _native = require(\"../../utils/native\");\n\nvar _utils = require(\"../../utils\");\n\nvar _IOSMessaging = _interopRequireDefault(require(\"./IOSMessaging\"));\n\nvar _RemoteMessage = _interopRequireDefault(require(\"./RemoteMessage\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NATIVE_EVENTS = ['messaging_message_received', 'messaging_token_refreshed'];\nvar MODULE_NAME = 'RNFirebaseMessaging';\nexports.MODULE_NAME = MODULE_NAME;\nvar NAMESPACE = 'messaging';\nexports.NAMESPACE = NAMESPACE;\n\nvar Messaging = function (_ModuleBase) {\n  (0, _inherits2.default)(Messaging, _ModuleBase);\n\n  var _super = _createSuper(Messaging);\n\n  function Messaging(app) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Messaging);\n    _this = _super.call(this, app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    _this._ios = new _IOSMessaging.default((0, _assertThisInitialized2.default)(_this));\n\n    _events.SharedEventEmitter.addListener('messaging_message_received', function (message) {\n      _events.SharedEventEmitter.emit('onMessage', new _RemoteMessage.default(message));\n    });\n\n    _events.SharedEventEmitter.addListener('messaging_token_refreshed', function (token) {\n      _events.SharedEventEmitter.emit('onTokenRefresh', token);\n    });\n\n    if (_reactNative.Platform.OS === 'ios') {\n      (0, _native.getNativeModule)((0, _assertThisInitialized2.default)(_this)).jsInitialised();\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Messaging, [{\n    key: \"ios\",\n    get: function get() {\n      return this._ios;\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return (0, _native.getNativeModule)(this).getToken();\n    }\n  }, {\n    key: \"deleteToken\",\n    value: function deleteToken() {\n      return (0, _native.getNativeModule)(this).deleteToken();\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(nextOrObserver) {\n      var _this2 = this;\n\n      var listener;\n\n      if ((0, _utils.isFunction)(nextOrObserver)) {\n        listener = nextOrObserver;\n      } else if ((0, _utils.isObject)(nextOrObserver) && (0, _utils.isFunction)(nextOrObserver.next)) {\n        listener = nextOrObserver.next;\n      } else {\n        throw new Error('Messaging.onMessage failed: First argument must be a function or observer object with a `next` function.');\n      }\n\n      (0, _log.getLogger)(this).info('Creating onMessage listener');\n\n      _events.SharedEventEmitter.addListener('onMessage', listener);\n\n      return function () {\n        (0, _log.getLogger)(_this2).info('Removing onMessage listener');\n\n        _events.SharedEventEmitter.removeListener('onMessage', listener);\n      };\n    }\n  }, {\n    key: \"onTokenRefresh\",\n    value: function onTokenRefresh(nextOrObserver) {\n      var _this3 = this;\n\n      var listener;\n\n      if ((0, _utils.isFunction)(nextOrObserver)) {\n        listener = nextOrObserver;\n      } else if ((0, _utils.isObject)(nextOrObserver) && (0, _utils.isFunction)(nextOrObserver.next)) {\n        listener = nextOrObserver.next;\n      } else {\n        throw new Error('Messaging.onTokenRefresh failed: First argument must be a function or observer object with a `next` function.');\n      }\n\n      (0, _log.getLogger)(this).info('Creating onTokenRefresh listener');\n\n      _events.SharedEventEmitter.addListener('onTokenRefresh', listener);\n\n      return function () {\n        (0, _log.getLogger)(_this3).info('Removing onTokenRefresh listener');\n\n        _events.SharedEventEmitter.removeListener('onTokenRefresh', listener);\n      };\n    }\n  }, {\n    key: \"requestPermission\",\n    value: function requestPermission() {\n      return (0, _native.getNativeModule)(this).requestPermission();\n    }\n  }, {\n    key: \"hasPermission\",\n    value: function hasPermission() {\n      return (0, _native.getNativeModule)(this).hasPermission();\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(remoteMessage) {\n      if (!(remoteMessage instanceof _RemoteMessage.default)) {\n        return Promise.reject(new Error(\"Messaging:sendMessage expects a 'RemoteMessage' but got type \" + typeof remoteMessage));\n      }\n\n      try {\n        return (0, _native.getNativeModule)(this).sendMessage(remoteMessage.build());\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n  }, {\n    key: \"subscribeToTopic\",\n    value: function subscribeToTopic(topic) {\n      return (0, _native.getNativeModule)(this).subscribeToTopic(topic);\n    }\n  }, {\n    key: \"unsubscribeFromTopic\",\n    value: function unsubscribeFromTopic(topic) {\n      return (0, _native.getNativeModule)(this).unsubscribeFromTopic(topic);\n    }\n  }, {\n    key: \"setBackgroundMessageHandler\",\n    value: function setBackgroundMessageHandler() {\n      throw new Error(_internals.default.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'setBackgroundMessageHandler'));\n    }\n  }, {\n    key: \"useServiceWorker\",\n    value: function useServiceWorker() {\n      throw new Error(_internals.default.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'useServiceWorker'));\n    }\n  }]);\n  return Messaging;\n}(_ModuleBase2.default);\n\nexports.default = Messaging;\nvar statics = {\n  RemoteMessage: _RemoteMessage.default\n};\nexports.statics = statics;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/messaging/index.js"],"names":["NATIVE_EVENTS","MODULE_NAME","NAMESPACE","Messaging","app","events","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","_ios","IOSMessaging","SharedEventEmitter","addListener","message","emit","RemoteMessage","token","Platform","OS","jsInitialised","getToken","deleteToken","nextOrObserver","listener","next","Error","info","removeListener","requestPermission","hasPermission","remoteMessage","Promise","reject","sendMessage","build","error","topic","subscribeToTopic","unsubscribeFromTopic","INTERNALS","STRINGS","ERROR_UNSUPPORTED_MODULE_METHOD","ModuleBase","statics"],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AACA,IAAMA,aAAa,GAAG,CAAC,4BAAD,EAA+B,2BAA/B,CAAtB;AACO,IAAMC,WAAW,GAAG,qBAApB;;AACA,IAAMC,SAAS,GAAG,WAAlB;;;IAKcC,S;;;;;AACnB,qBAAYC,GAAZ,EAAiB;AAAA;;AAAA;AACf,8BAAMA,GAAN,EAAW;AACTC,MAAAA,MAAM,EAAEL,aADC;AAETM,MAAAA,UAAU,EAAEL,WAFH;AAGTM,MAAAA,kBAAkB,EAAE,KAHX;AAITC,MAAAA,mBAAmB,EAAE,KAJZ;AAKTC,MAAAA,SAAS,EAAEP;AALF,KAAX;AAOA,UAAKQ,IAAL,GAAY,IAAIC,qBAAJ,6CAAZ;;AACAC,+BAAmBC,WAAnB,CAEA,4BAFA,EAE8B,UAAAC,OAAO,EAAI;AACvCF,iCAAmBG,IAAnB,CAAwB,WAAxB,EAAqC,IAAIC,sBAAJ,CAAkBF,OAAlB,CAArC;AACD,KAJD;;AAKAF,+BAAmBC,WAAnB,CAEA,2BAFA,EAE6B,UAAAI,KAAK,EAAI;AACpCL,iCAAmBG,IAAnB,CAAwB,gBAAxB,EAA0CE,KAA1C;AACD,KAJD;;AAMA,QAAIC,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB,gFAAsBC,aAAtB;AACD;;AAtBc;AAuBhB;;;;SAED,eAAU;AACR,aAAO,KAAKV,IAAZ;AACD;;;WAED,oBAAW;AACT,aAAO,6BAAgB,IAAhB,EAAsBW,QAAtB,EAAP;AACD;;;WAED,uBAAc;AACZ,aAAO,6BAAgB,IAAhB,EAAsBC,WAAtB,EAAP;AACD;;;WAED,mBAAUC,cAAV,EAA0B;AAAA;;AACxB,UAAIC,QAAJ;;AAEA,UAAI,uBAAWD,cAAX,CAAJ,EAAgC;AAE9BC,QAAAA,QAAQ,GAAGD,cAAX;AACD,OAHD,MAGO,IAAI,qBAASA,cAAT,KAA4B,uBAAWA,cAAc,CAACE,IAA1B,CAAhC,EAAiE;AACtED,QAAAA,QAAQ,GAAGD,cAAc,CAACE,IAA1B;AACD,OAFM,MAEA;AACL,cAAM,IAAIC,KAAJ,CAAU,0GAAV,CAAN;AACD;;AAED,0BAAU,IAAV,EAAgBC,IAAhB,CAAqB,6BAArB;;AACAf,iCAAmBC,WAAnB,CAA+B,WAA/B,EAA4CW,QAA5C;;AACA,aAAO,YAAM;AACX,4BAAU,MAAV,EAAgBG,IAAhB,CAAqB,6BAArB;;AACAf,mCAAmBgB,cAAnB,CAAkC,WAAlC,EAA+CJ,QAA/C;AACD,OAHD;AAID;;;WAED,wBAAeD,cAAf,EAA+B;AAAA;;AAC7B,UAAIC,QAAJ;;AAEA,UAAI,uBAAWD,cAAX,CAAJ,EAAgC;AAE9BC,QAAAA,QAAQ,GAAGD,cAAX;AACD,OAHD,MAGO,IAAI,qBAASA,cAAT,KAA4B,uBAAWA,cAAc,CAACE,IAA1B,CAAhC,EAAiE;AACtED,QAAAA,QAAQ,GAAGD,cAAc,CAACE,IAA1B;AACD,OAFM,MAEA;AACL,cAAM,IAAIC,KAAJ,CAAU,+GAAV,CAAN;AACD;;AAED,0BAAU,IAAV,EAAgBC,IAAhB,CAAqB,kCAArB;;AACAf,iCAAmBC,WAAnB,CAA+B,gBAA/B,EAAiDW,QAAjD;;AACA,aAAO,YAAM;AACX,4BAAU,MAAV,EAAgBG,IAAhB,CAAqB,kCAArB;;AACAf,mCAAmBgB,cAAnB,CAAkC,gBAAlC,EAAoDJ,QAApD;AACD,OAHD;AAID;;;WAED,6BAAoB;AAClB,aAAO,6BAAgB,IAAhB,EAAsBK,iBAAtB,EAAP;AACD;;;WAMD,yBAAgB;AACd,aAAO,6BAAgB,IAAhB,EAAsBC,aAAtB,EAAP;AACD;;;WAED,qBAAYC,aAAZ,EAA2B;AACzB,UAAI,EAAEA,aAAa,YAAYf,sBAA3B,CAAJ,EAA+C;AAC7C,eAAOgB,OAAO,CAACC,MAAR,CAAe,IAAIP,KAAJ,mEAA0E,OAAOK,aAAjF,CAAf,CAAP;AACD;;AAED,UAAI;AACF,eAAO,6BAAgB,IAAhB,EAAsBG,WAAtB,CAAkCH,aAAa,CAACI,KAAd,EAAlC,CAAP;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACd,eAAOJ,OAAO,CAACC,MAAR,CAAeG,KAAf,CAAP;AACD;AACF;;;WAED,0BAAiBC,KAAjB,EAAwB;AACtB,aAAO,6BAAgB,IAAhB,EAAsBC,gBAAtB,CAAuCD,KAAvC,CAAP;AACD;;;WAED,8BAAqBA,KAArB,EAA4B;AAC1B,aAAO,6BAAgB,IAAhB,EAAsBE,oBAAtB,CAA2CF,KAA3C,CAAP;AACD;;;WAMD,uCAA8B;AAC5B,YAAM,IAAIX,KAAJ,CAAUc,mBAAUC,OAAV,CAAkBC,+BAAlB,CAAkD,WAAlD,EAA+D,6BAA/D,CAAV,CAAN;AACD;;;WAED,4BAAmB;AACjB,YAAM,IAAIhB,KAAJ,CAAUc,mBAAUC,OAAV,CAAkBC,+BAAlB,CAAkD,WAAlD,EAA+D,kBAA/D,CAAV,CAAN;AACD;;;EAxHoCC,oB;;;AA2HhC,IAAMC,OAAO,GAAG;AACrB5B,EAAAA,aAAa,EAAbA;AADqB,CAAhB","sourcesContent":["/**\n * \n * Messaging (FCM) representation wrapper\n */\nimport { Platform } from 'react-native';\nimport { SharedEventEmitter } from '../../utils/events';\nimport INTERNALS from '../../utils/internals';\nimport { getLogger } from '../../utils/log';\nimport ModuleBase from '../../utils/ModuleBase';\nimport { getNativeModule } from '../../utils/native';\nimport { isFunction, isObject } from '../../utils';\nimport IOSMessaging from './IOSMessaging';\nimport RemoteMessage from './RemoteMessage';\nconst NATIVE_EVENTS = ['messaging_message_received', 'messaging_token_refreshed'];\nexport const MODULE_NAME = 'RNFirebaseMessaging';\nexport const NAMESPACE = 'messaging';\n/**\n * @class Messaging\n */\n\nexport default class Messaging extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    this._ios = new IOSMessaging(this);\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public event name: onMessage\n    'messaging_message_received', message => {\n      SharedEventEmitter.emit('onMessage', new RemoteMessage(message));\n    });\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public event name: onMessage\n    'messaging_token_refreshed', token => {\n      SharedEventEmitter.emit('onTokenRefresh', token);\n    }); // Tell the native module that we're ready to receive events\n\n    if (Platform.OS === 'ios') {\n      getNativeModule(this).jsInitialised();\n    }\n  }\n\n  get ios() {\n    return this._ios;\n  }\n\n  getToken() {\n    return getNativeModule(this).getToken();\n  }\n\n  deleteToken() {\n    return getNativeModule(this).deleteToken();\n  }\n\n  onMessage(nextOrObserver) {\n    let listener;\n\n    if (isFunction(nextOrObserver)) {\n      // $FlowExpectedError: Not coping with the overloaded method signature\n      listener = nextOrObserver;\n    } else if (isObject(nextOrObserver) && isFunction(nextOrObserver.next)) {\n      listener = nextOrObserver.next;\n    } else {\n      throw new Error('Messaging.onMessage failed: First argument must be a function or observer object with a `next` function.');\n    }\n\n    getLogger(this).info('Creating onMessage listener');\n    SharedEventEmitter.addListener('onMessage', listener);\n    return () => {\n      getLogger(this).info('Removing onMessage listener');\n      SharedEventEmitter.removeListener('onMessage', listener);\n    };\n  }\n\n  onTokenRefresh(nextOrObserver) {\n    let listener;\n\n    if (isFunction(nextOrObserver)) {\n      // $FlowExpectedError: Not coping with the overloaded method signature\n      listener = nextOrObserver;\n    } else if (isObject(nextOrObserver) && isFunction(nextOrObserver.next)) {\n      listener = nextOrObserver.next;\n    } else {\n      throw new Error('Messaging.onTokenRefresh failed: First argument must be a function or observer object with a `next` function.');\n    }\n\n    getLogger(this).info('Creating onTokenRefresh listener');\n    SharedEventEmitter.addListener('onTokenRefresh', listener);\n    return () => {\n      getLogger(this).info('Removing onTokenRefresh listener');\n      SharedEventEmitter.removeListener('onTokenRefresh', listener);\n    };\n  }\n\n  requestPermission() {\n    return getNativeModule(this).requestPermission();\n  }\n  /**\n   * NON WEB-SDK METHODS\n   */\n\n\n  hasPermission() {\n    return getNativeModule(this).hasPermission();\n  }\n\n  sendMessage(remoteMessage) {\n    if (!(remoteMessage instanceof RemoteMessage)) {\n      return Promise.reject(new Error(`Messaging:sendMessage expects a 'RemoteMessage' but got type ${typeof remoteMessage}`));\n    }\n\n    try {\n      return getNativeModule(this).sendMessage(remoteMessage.build());\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  subscribeToTopic(topic) {\n    return getNativeModule(this).subscribeToTopic(topic);\n  }\n\n  unsubscribeFromTopic(topic) {\n    return getNativeModule(this).unsubscribeFromTopic(topic);\n  }\n  /**\n   * KNOWN UNSUPPORTED METHODS\n   */\n\n\n  setBackgroundMessageHandler() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'setBackgroundMessageHandler'));\n  }\n\n  useServiceWorker() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'useServiceWorker'));\n  }\n\n}\nexport const statics = {\n  RemoteMessage\n};"]},"metadata":{},"sourceType":"script"}