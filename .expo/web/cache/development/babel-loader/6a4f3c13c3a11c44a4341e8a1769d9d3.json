{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nrequire(\"react-native-gesture-handler\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNavigation = require(\"react-navigation\");\n\nvar _reactNavigationStack = require(\"react-navigation-stack\");\n\nvar _reactNavigationDrawer = require(\"react-navigation-drawer\");\n\nvar _LoginScreen = _interopRequireDefault(require(\"../screens/Login/LoginScreen\"));\n\nvar _RegisterScreen = _interopRequireDefault(require(\"../screens/Register/RegisterScreen\"));\n\nvar _HomeScreen = _interopRequireDefault(require(\"../screens/Home/HomeScreen\"));\n\nvar _UserProfileScreen = _interopRequireDefault(require(\"../screens/UserProfile/UserProfileScreen\"));\n\nvar _MyProfileScreen = _interopRequireDefault(require(\"../screens/MyProfile/MyProfileScreen\"));\n\nvar _MapScreen = _interopRequireDefault(require(\"../screens/Map/MapScreen\"));\n\nvar _SelectInterestings = _interopRequireDefault(require(\"../screens/SelectInterestings/SelectInterestings\"));\n\nvar _TrendsScreen = _interopRequireDefault(require(\"../screens/Trends/TrendsScreen\"));\n\nvar _MoreScreen = _interopRequireDefault(require(\"../screens/More/MoreScreen\"));\n\nvar _ReportAProblemScreen = _interopRequireDefault(require(\"../screens/ReportAProblem/ReportAProblemScreen\"));\n\nvar _SplashScreen = _interopRequireDefault(require(\"./SplashScreen/SplashScreen\"));\n\nvar _AddTrendScreen = _interopRequireDefault(require(\"./AddTrend/AddTrendScreen\"));\n\nvar _ChatScreen = _interopRequireDefault(require(\"./Chat/ChatScreen\"));\n\nvar _Strings = _interopRequireDefault(require(\"../../assets/languages/Strings\"));\n\nvar _MainStyle = _interopRequireDefault(require(\"../../assets/appStyle/MainStyle\"));\n\nvar _jsxFileName = \"/Users/alheresh/trend-mobile/my-trend-new/src/screens/AppNavigation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar IS_RTL = _reactNative.I18nManager.isRTL;\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar AppNavigator = function (_Component) {\n  (0, _inherits2.default)(AppNavigator, _Component);\n\n  var _super = _createSuper(AppNavigator);\n\n  function AppNavigator() {\n    (0, _classCallCheck2.default)(this, AppNavigator);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(AppNavigator, [{\n    key: \"render\",\n    value: function render() {\n      strings = IS_RTL ? _Strings.default.ar : _Strings.default.enUS;\n      styles = _MainStyle.default.returnStyles(IS_RTL);\n      lang = IS_RTL ? true : false;\n      var MainNavigatorNav = (0, _reactNavigationStack.createStackNavigator)({\n        Register: {\n          screen: _RegisterScreen.default,\n          navigationOptions: {\n            headerTitle: strings.create,\n            headerStyle: {\n              elevation: 0\n            }\n          }\n        },\n        Login: {\n          screen: _LoginScreen.default,\n          navigationOptions: {\n            headerShown: false\n          }\n        },\n        SelectInterestings: {\n          screen: _SelectInterestings.default,\n          navigationOptions: {\n            headerShown: false\n          }\n        }\n      });\n      var DrawerStack = (0, _reactNavigationDrawer.createDrawerNavigator)({\n        UserProfile: {\n          screen: _UserProfileScreen.default,\n          navigationOptions: {\n            headerShown: false\n          }\n        },\n        Chat: {\n          screen: _ChatScreen.default,\n          navigationOptions: {\n            headerShown: false\n          }\n        },\n        More: {\n          screen: _MoreScreen.default,\n          navigationOptions: {\n            headerShown: false\n          }\n        },\n        ReportAProblem: {\n          screen: _ReportAProblemScreen.default,\n          navigationOptions: {\n            headerShown: false\n          }\n        },\n        HomeScreen: {\n          screen: _HomeScreen.default,\n          navigationOptions: {\n            headerShown: false\n          }\n        },\n        AddTrendScreen: {\n          screen: _AddTrendScreen.default,\n          navigationOptions: {}\n        },\n        MyProfileScreen: {\n          screen: _MyProfileScreen.default,\n          navigationOptions: {\n            headerShown: false\n          }\n        },\n        MapScreen: {\n          screen: _MapScreen.default,\n          navigationOptions: {\n            headerShown: false\n          }\n        },\n        TrendsScreen: {\n          screen: _TrendsScreen.default,\n          navigationOptions: {\n            headerShown: false\n          }\n        }\n      }, {\n        drawerPosition: _reactNative.I18nManager.isRTL ? 'right' : 'left',\n        drawerType: 'front',\n        drawerWidth: width * 0.7,\n        contentOptions: {\n          activeTintColor: '#fff',\n          activeBackgroundColor: '#fff',\n          itemsContainerStyle: {\n            marginVertical: 0\n          },\n          iconContainerStyle: {\n            opacity: 1\n          }\n        }\n      });\n      var RootNavigator = (0, _reactNavigation.createAppContainer)((0, _reactNavigation.createSwitchNavigator)({\n        AuthLoading: _SplashScreen.default,\n        App: DrawerStack,\n        Auth: MainNavigatorNav\n      }));\n      return _react.default.createElement(RootNavigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n  return AppNavigator;\n}(_react.Component);\n\nexports.default = AppNavigator;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/src/screens/AppNavigation.js"],"names":["IS_RTL","I18nManager","isRTL","Dimensions","get","width","height","AppNavigator","strings","Strings","ar","enUS","styles","MainStyle","returnStyles","lang","MainNavigatorNav","Register","screen","RegisterScreen","navigationOptions","headerTitle","create","headerStyle","elevation","Login","headerShown","SelectInterestings","DrawerStack","UserProfile","UserProfileScreen","Chat","ChatScreen","More","MoreScreen","ReportAProblem","ReportAProblemScreen","HomeScreen","AddTrendScreen","MyProfileScreen","MapScreen","TrendsScreen","drawerPosition","drawerType","drawerWidth","contentOptions","activeTintColor","activeBackgroundColor","itemsContainerStyle","marginVertical","iconContainerStyle","opacity","RootNavigator","AuthLoading","SplashScreen","App","Auth","Component"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React, {Component} from 'react';\nimport {I18nManager, Image, View, Dimensions} from 'react-native';\nimport {createAppContainer, createSwitchNavigator} from 'react-navigation';\nimport {createStackNavigator} from 'react-navigation-stack';\nimport {createDrawerNavigator} from 'react-navigation-drawer';\n\nimport Login from '../screens/Login/LoginScreen';\nimport RegisterScreen from '../screens/Register/RegisterScreen';\nimport HomeScreen from '../screens/Home/HomeScreen';\nimport UserProfileScreen from '../screens/UserProfile/UserProfileScreen';\nimport MyProfileScreen from '../screens/MyProfile/MyProfileScreen';\nimport MapScreen from '../screens/Map/MapScreen';\nimport SelectInterestings from '../screens/SelectInterestings/SelectInterestings';\nimport TrendsScreen from '../screens/Trends/TrendsScreen';\nimport MoreScreen from '../screens/More/MoreScreen';\nimport ReportAProblemScreen from '../screens/ReportAProblem/ReportAProblemScreen';\nimport SplashScreen from './SplashScreen/SplashScreen';\nimport AddTrendScreen from './AddTrend/AddTrendScreen';\nimport ChatScreen from './Chat/ChatScreen';\n\nimport Strings from '../../assets/languages/Strings';\nimport MainStyle from '../../assets/appStyle/MainStyle';\n\nvar IS_RTL = I18nManager.isRTL;\nconst {width: width, height: height} = Dimensions.get('window');\n\nexport default class AppNavigator extends Component {\n  render() {\n    strings = IS_RTL ? Strings.ar : Strings.enUS;\n    styles = MainStyle.returnStyles(IS_RTL);\n    lang = IS_RTL ? true : false;\n\n    const MainNavigatorNav = createStackNavigator({\n      Register: {\n        screen: RegisterScreen,\n        navigationOptions: {\n          headerTitle: strings.create,\n          headerStyle: {\n            elevation: 0,\n          },\n        },\n      },\n      Login: {\n        screen: Login,\n        navigationOptions: {\n          headerShown: false,\n        },\n      },\n\n      SelectInterestings: {\n        screen: SelectInterestings,\n        navigationOptions: {\n          headerShown: false,\n        },\n      },\n    });\n\n    const DrawerStack = createDrawerNavigator(\n      {\n        UserProfile: {\n          screen: UserProfileScreen,\n          navigationOptions: {\n            headerShown: false,\n          },\n        },\n        Chat: {\n          screen: ChatScreen,\n          navigationOptions: {\n            headerShown: false,\n          },\n        },\n        More: {\n          screen: MoreScreen,\n          navigationOptions: {\n            headerShown: false,\n          },\n        },\n        ReportAProblem: {\n          screen: ReportAProblemScreen,\n          navigationOptions: {\n            headerShown: false,\n          },\n        },\n        HomeScreen: {\n          screen: HomeScreen,\n          navigationOptions: {\n            headerShown: false,\n          },\n        },\n        AddTrendScreen: {\n          screen: AddTrendScreen,\n          navigationOptions: {\n            // headerShown: false,\n          },\n        },\n        MyProfileScreen: {\n          screen: MyProfileScreen,\n          navigationOptions: {\n            headerShown: false,\n          },\n        },\n        MapScreen: {\n          screen: MapScreen,\n          navigationOptions: {\n            headerShown: false,\n          },\n        },\n        TrendsScreen: {\n          screen: TrendsScreen,\n          navigationOptions: {\n            headerShown: false,\n          },\n        },\n      },\n      {\n        // contentComponent: props => <DrawerContent {...props} />,\n        drawerPosition: I18nManager.isRTL ? 'right' : 'left',\n        drawerType: 'front',\n        drawerWidth: width * 0.7,\n        contentOptions: {\n          activeTintColor: '#fff',\n          activeBackgroundColor: '#fff',\n          itemsContainerStyle: {\n            marginVertical: 0,\n          },\n          iconContainerStyle: {\n            opacity: 1,\n          },\n        },\n      },\n    );\n\n    const RootNavigator = createAppContainer(\n      createSwitchNavigator({\n        AuthLoading: SplashScreen,\n        App: DrawerStack,\n        Auth: MainNavigatorNav,\n      }),\n    );\n    return <RootNavigator />;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}