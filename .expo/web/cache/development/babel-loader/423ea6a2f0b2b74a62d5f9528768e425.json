{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _index = require(\"../../../assets/colors/index\");\n\nvar _jsxFileName = \"/Users/alheresh/trend-mobile/my-trend-new/src/screens/SplashScreen/SplashScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SplashScreen = function (_Component) {\n  (0, _inherits2.default)(SplashScreen, _Component);\n\n  var _super = _createSuper(SplashScreen);\n\n  function SplashScreen() {\n    (0, _classCallCheck2.default)(this, SplashScreen);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(SplashScreen, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      var _this = this;\n\n      return _regenerator.default.async(function UNSAFE_componentWillMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loginInterval = setInterval(function () {\n                _this.renderLoading();\n              }, 1000);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      var userId;\n      return _regenerator.default.async(function renderLoading$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regenerator.default.awrap(_asyncStorage.default.getItem('@Trend:token'));\n\n            case 2:\n              userId = _context2.sent;\n              console.log(userId);\n\n              if (userId == null) {\n                redirectID = 'Login';\n              } else {\n                redirectID = 'TrendsScreen';\n              }\n\n              clearInterval(this.loginInterval);\n              this.props.navigation.navigate(redirectID);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          backgroundColor: _index.white,\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.StatusBar, {\n        barStyle: \"dark-content\",\n        backgroundColor: _index.white,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.Image, {\n        source: require('../../../assets/images/login.png'),\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          position: 'absolute',\n          top: height * 0.9,\n          alignSelf: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          textAlign: 'center',\n          padding: 10,\n          fontSize: 18,\n          color: '#000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, 'All Rights Reserved © Next Stage Jo')));\n    }\n  }]);\n  return SplashScreen;\n}(_react.Component);\n\nexports.default = SplashScreen;\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar styles = _reactNative.StyleSheet.create({\n  logo: {\n    alignSelf: 'center',\n    marginTop: width * 0.3\n  }\n});","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/src/screens/SplashScreen/SplashScreen.js"],"names":["SplashScreen","loginInterval","setInterval","renderLoading","AsyncStorage","getItem","userId","console","log","redirectID","clearInterval","props","navigation","navigate","backgroundColor","white","flex","require","styles","logo","position","top","height","alignSelf","textAlign","padding","fontSize","color","Component","Dimensions","get","width","StyleSheet","create","marginTop"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAQA;;AACA;;;;;;;;IAEqBA,Y;;;;;;;;;;;;WACnB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACE,mBAAKC,aAAL,GAAqBC,WAAW,CAAC,YAAM;AACrC,gBAAA,KAAI,CAACC,aAAL;AACD,eAF+B,EAE7B,IAF6B,CAAhC;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACuBC,sBAAaC,OAAb,CAAqB,cAArB,CADvB;;AAAA;AACQC,cAAAA,MADR;AAEEC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,kBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClBG,gBAAAA,UAAU,GAAG,OAAb;AACD,eAFD,MAEO;AACLA,gBAAAA,UAAU,GAAG,cAAb;AACD;;AACDC,cAAAA,aAAa,CAAC,KAAKT,aAAN,CAAb;AACA,mBAAKU,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+BJ,UAA/B;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAYA,kBAAS;AACP,aACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE;AAACK,UAAAA,eAAe,EAAEC,YAAlB;AAAyBC,UAAAA,IAAI,EAAE;AAA/B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,sBAAD;AAAW,QAAA,QAAQ,EAAC,cAApB;AAAmC,QAAA,eAAe,EAAED,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,6BAAC,kBAAD;AACE,QAAA,MAAM,EAAEE,OAAO,CAAC,kCAAD,CADjB;AAEE,QAAA,KAAK,EAAEC,MAAM,CAACC,IAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAOE,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,GAAG,EAAEC,MAAM,GAAG,GAFT;AAGLC,UAAAA,SAAS,EAAE;AAHN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE,QADN;AAELC,UAAAA,OAAO,EAAE,EAFJ;AAGLC,UAAAA,QAAQ,EAAE,EAHL;AAILC,UAAAA,KAAK,EAAE;AAJF,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,qCARH,CANF,CAPF,CADF;AA2BD;;;EA/CuCC,gB;;;;sBAiDHC,wBAAWC,GAAX,CAAe,QAAf,C;IAAzBC,K,mBAAPA,K;IAAsBT,M,mBAARA,M;;AACrB,IAAMJ,MAAM,GAAGc,wBAAWC,MAAX,CAAkB;AAC/Bd,EAAAA,IAAI,EAAE;AACJI,IAAAA,SAAS,EAAE,QADP;AAEJW,IAAAA,SAAS,EAAEH,KAAK,GAAG;AAFf;AADyB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {\n  Dimensions,\n  Image,\n  StyleSheet,\n  StatusBar,\n  View,\n  Text,\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {white} from '../../../assets/colors/index';\n\nexport default class SplashScreen extends Component {\n  async UNSAFE_componentWillMount() {\n    this.loginInterval = setInterval(() => {\n      this.renderLoading();\n    }, 1000);\n  }\n\n  async renderLoading() {\n    const userId = await AsyncStorage.getItem('@Trend:token');\n    console.log(userId);\n    if (userId == null) {\n      redirectID = 'Login';\n    } else {\n      redirectID = 'TrendsScreen';\n    }\n    clearInterval(this.loginInterval);\n    this.props.navigation.navigate(redirectID);\n  }\n\n  render() {\n    return (\n      <View style={{backgroundColor: white, flex: 1}}>\n        <StatusBar barStyle=\"dark-content\" backgroundColor={white} />\n        <Image\n          source={require('../../../assets/images/login.png')}\n          style={styles.logo}\n        />\n\n        <View\n          style={{\n            position: 'absolute',\n            top: height * 0.9,\n            alignSelf: 'center',\n          }}>\n          <Text\n            style={{\n              textAlign: 'center',\n              padding: 10,\n              fontSize: 18,\n              color: '#000',\n              //   fontFamily: RegularFont,\n            }}>\n            {'All Rights Reserved © Next Stage Jo'}\n          </Text>\n        </View>\n      </View>\n    );\n  }\n}\nconst {width: width, height: height} = Dimensions.get('window');\nconst styles = StyleSheet.create({\n  logo: {\n    alignSelf: 'center',\n    marginTop: width * 0.3,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}