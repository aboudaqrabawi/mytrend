{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeVideo = _interopRequireDefault(require(\"react-native-video\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _padStart = _interopRequireDefault(require(\"lodash/padStart\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar VideoPlayer = function (_Component) {\n  (0, _inherits2.default)(VideoPlayer, _Component);\n\n  var _super = _createSuper(VideoPlayer);\n\n  function VideoPlayer(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, VideoPlayer);\n    _this = _super.call(this, props);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"opts\", void 0);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"player\", void 0);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"animations\", void 0);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"variousStyles\", void 0);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"mounted\", false);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_onLoadStart\", function () {\n      _this.loadAnimation();\n\n      _this.setState({\n        loading: true\n      });\n\n      if (typeof _this.props.onLoadStart === 'function') {\n        _this.props.onLoadStart();\n      }\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_onLoad\", function (data) {\n      _this.setState({\n        duration: data.duration,\n        loading: false\n      });\n\n      if (_this.state.showControls) {\n        _this.setControlTimeout();\n      }\n\n      if (typeof _this.props.onLoad === 'function') {\n        _this.props.onLoad(data);\n      }\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_onProgress\", function (data) {\n      var state = _this.state;\n\n      if (!state.scrubbing) {\n        if (!state.seeking) {\n          var position = _this.calculateSeekerPosition();\n\n          _this.setSeekerPosition(position);\n        }\n\n        if (typeof _this.props.onProgress === 'function') {\n          _this.props.onProgress(data);\n        }\n\n        _this.setState({\n          currentTime: data.currentTime\n        });\n      }\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_onSeek\", function (data) {\n      var state = _this.state;\n\n      if (state.scrubbing) {\n        if (!state.seeking) {\n          _this.setControlTimeout();\n\n          _this.setState({\n            paused: state.originallyPaused\n          });\n        }\n\n        _this.setState({\n          scrubbing: false,\n          currentTime: data.currentTime\n        });\n      }\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_onEnd\", function () {});\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_onError\", function () {\n      _this.setState({\n        error: true,\n        loading: false\n      });\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_onScreenTouch\", function () {\n      if (typeof _this.player.tapActionTimeout === 'number') {\n        clearTimeout(_this.player.tapActionTimeout);\n        _this.player.tapActionTimeout = 0;\n\n        _this.methods.toggleFullscreen();\n\n        var state = _this.state;\n\n        if (state.showControls) {\n          _this.resetControlTimeout();\n        }\n      } else {\n        _this.player.tapActionTimeout = setTimeout(function () {\n          var state = _this.state;\n\n          if (_this.player.tapAnywhereToPause && state.showControls) {\n            _this.methods.togglePlayPause();\n\n            _this.resetControlTimeout();\n          } else {\n            _this.methods.toggleControls();\n          }\n\n          _this.player.tapActionTimeout = 0;\n        }, _this.props.doubleTapTime);\n      }\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"setControlTimeout\", function () {\n      _this.player.controlTimeout = setTimeout(function () {\n        _this._hideControls();\n      }, _this.player.controlTimeoutDelay);\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"clearControlTimeout\", function () {\n      clearTimeout(_this.player.controlTimeout);\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"resetControlTimeout\", function () {\n      _this.clearControlTimeout();\n\n      _this.setControlTimeout();\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"hideControlAnimation\", function () {\n      _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.animations.topControl.opacity, {\n        toValue: 0,\n        duration: _this.props.controlAnimationTiming,\n        useNativeDriver: false\n      }), _reactNative.Animated.timing(_this.animations.topControl.marginTop, {\n        toValue: -100,\n        duration: _this.props.controlAnimationTiming,\n        useNativeDriver: false\n      }), _reactNative.Animated.timing(_this.animations.bottomControl.opacity, {\n        toValue: 0,\n        duration: _this.props.controlAnimationTiming,\n        useNativeDriver: false\n      }), _reactNative.Animated.timing(_this.animations.bottomControl.marginBottom, {\n        toValue: -100,\n        duration: _this.props.controlAnimationTiming,\n        useNativeDriver: false\n      })]).start();\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"showControlAnimation\", function () {\n      _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.animations.topControl.opacity, {\n        toValue: 1,\n        useNativeDriver: false,\n        duration: _this.props.controlAnimationTiming\n      }), _reactNative.Animated.timing(_this.animations.topControl.marginTop, {\n        toValue: 0,\n        useNativeDriver: false,\n        duration: _this.props.controlAnimationTiming\n      }), _reactNative.Animated.timing(_this.animations.bottomControl.opacity, {\n        toValue: 1,\n        useNativeDriver: false,\n        duration: _this.props.controlAnimationTiming\n      }), _reactNative.Animated.timing(_this.animations.bottomControl.marginBottom, {\n        toValue: 0,\n        useNativeDriver: false,\n        duration: _this.props.controlAnimationTiming\n      })]).start();\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"loadAnimation\", function () {\n      if (_this.state.loading) {\n        _reactNative.Animated.sequence([_reactNative.Animated.timing(_this.animations.loader.rotate, {\n          toValue: _this.animations.loader.MAX_VALUE,\n          duration: 1500,\n          easing: _reactNative.Easing.linear,\n          useNativeDriver: false\n        }), _reactNative.Animated.timing(_this.animations.loader.rotate, {\n          toValue: 0,\n          duration: 0,\n          easing: _reactNative.Easing.linear,\n          useNativeDriver: false\n        })]).start(_this.loadAnimation);\n      }\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_hideControls\", function () {\n      if (_this.mounted) {\n        _this.hideControlAnimation();\n\n        _this.setState({\n          showControls: false\n        });\n      }\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_toggleControls\", function () {\n      var state = _this.state;\n      var showControls = !state.showControls;\n\n      if (showControls) {\n        _this.showControlAnimation();\n\n        _this.setControlTimeout();\n\n        typeof _this.events.onShowControls === 'function' && _this.events.onShowControls();\n      } else {\n        _this.hideControlAnimation();\n\n        _this.clearControlTimeout();\n\n        typeof _this.events.onHideControls === 'function' && _this.events.onHideControls();\n      }\n\n      _this.setState({\n        showControls: showControls\n      });\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_toggleFullscreen\", function () {\n      var state = _this.state;\n      var isFullscreen = !state.isFullscreen;\n      var resizeMode = 'contain';\n\n      if (_this.props.toggleResizeModeOnFullscreen) {\n        resizeMode = isFullscreen === true ? 'cover' : 'contain';\n      }\n\n      if (isFullscreen) {\n        typeof _this.events.onEnterFullscreen === 'function' && _this.events.onEnterFullscreen();\n      } else {\n        typeof _this.events.onExitFullscreen === 'function' && _this.events.onExitFullscreen();\n      }\n\n      _this.setState({\n        isFullscreen: isFullscreen,\n        resizeMode: resizeMode\n      });\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_togglePlayPause\", function () {\n      var state = _this.state;\n      var paused = !state.paused;\n\n      if (paused) {\n        typeof _this.events.onPause === 'function' && _this.events.onPause();\n      } else {\n        typeof _this.events.onPlay === 'function' && _this.events.onPlay();\n      }\n\n      _this.setState({\n        paused: paused\n      });\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_toggleTimer\", function () {\n      var state = _this.state;\n\n      _this.setState({\n        showTimeRemaining: !state.showTimeRemaining\n      });\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_onBack\", function () {\n      if (_this.props.onBack) {\n        _this.props.onBack();\n      }\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"calculateTime\", function () {\n      if (_this.state.showTimeRemaining) {\n        var time = _this.state.duration - _this.state.currentTime;\n        return \"\".concat(_this.formatTime(time));\n      }\n\n      return _this.formatTime(_this.state.currentTime);\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"calculateSeekerPosition\", function () {\n      var percent = _this.state.currentTime / _this.state.duration;\n      return _this.player.seekerWidth * percent;\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"calculateTimeFromSeekerPosition\", function () {\n      var percent = _this.state.seekerPosition / _this.player.seekerWidth;\n      return _this.state.duration * percent;\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"calculateVolumeFromVolumePosition\", function () {\n      return _this.state.volumePosition / _this.player.volumeWidth;\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"calculateVolumePositionFromVolume\", function () {\n      return _this.player.volumeWidth * _this.state.volume;\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"initSeekPanResponder\", function () {\n      _this.player.seekPanResponder = _reactNative.PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          return true;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n          return true;\n        },\n        onPanResponderGrant: function onPanResponderGrant(evt) {\n          var state = _objectSpread({}, _this.state);\n\n          _this.clearControlTimeout();\n\n          var position = evt.nativeEvent.locationX;\n\n          _this.setSeekerPosition(position);\n\n          state.seeking = true;\n          state.originallyPaused = state.paused;\n          state.scrubbing = false;\n\n          if (_this.player.scrubbingTimeStep > 0) {\n            state.paused = true;\n          }\n\n          _this.setState(state);\n        },\n        onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n          var position = _this.state.seekerOffset + gestureState.dx;\n\n          _this.setSeekerPosition(position);\n\n          var state = _objectSpread({}, _this.state);\n\n          if (_this.player.scrubbingTimeStep > 0 && !state.loading && !state.scrubbing) {\n            var time = _this.calculateTimeFromSeekerPosition();\n\n            var timeDifference = Math.abs(state.currentTime - time) * 1000;\n\n            if (time < state.duration && timeDifference >= _this.player.scrubbingTimeStep) {\n              state.scrubbing = true;\n\n              _this.setState(state);\n\n              setTimeout(function () {\n                var _this$player$ref$curr;\n\n                (_this$player$ref$curr = _this.player.ref.current) === null || _this$player$ref$curr === void 0 ? void 0 : _this$player$ref$curr.seek(time, _this.player.scrubbingTimeStep);\n              }, 1);\n            }\n          }\n        },\n        onPanResponderRelease: function onPanResponderRelease() {\n          var time = _this.calculateTimeFromSeekerPosition();\n\n          var state = _objectSpread({}, _this.state);\n\n          if (time >= state.duration && !state.loading) {\n            state.paused = true;\n\n            _this.events.onEnd();\n          } else if (state.scrubbing) {\n            state.seeking = false;\n          } else {\n            _this.seekTo(time);\n\n            _this.setControlTimeout();\n\n            state.paused = state.originallyPaused;\n            state.seeking = false;\n          }\n\n          _this.setState(state);\n        }\n      });\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"initVolumePanResponder\", function () {\n      _this.player.volumePanResponder = _reactNative.PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          return true;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n          return true;\n        },\n        onPanResponderGrant: function onPanResponderGrant() {\n          _this.clearControlTimeout();\n        },\n        onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n          var state = _objectSpread({}, _this.state);\n\n          var position = _this.state.volumeOffset + gestureState.dx;\n\n          _this.setVolumePosition(position);\n\n          state.volume = _this.calculateVolumeFromVolumePosition();\n\n          if (state.volume <= 0) {\n            state.muted = true;\n          } else {\n            state.muted = false;\n          }\n\n          _this.setState(state);\n        },\n        onPanResponderRelease: function onPanResponderRelease() {\n          var state = _objectSpread({}, _this.state);\n\n          state.volumeOffset = state.volumePosition;\n\n          _this.setControlTimeout();\n\n          _this.setState(state);\n        }\n      });\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderControl\", function (children, callback) {\n      var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"transparent\",\n        activeOpacity: 0.3,\n        onPress: function onPress() {\n          _this.resetControlTimeout();\n\n          callback();\n        },\n        style: [styles.controls.control, style]\n      }, children);\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderNullControl\", function () {\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.controls.control]\n      });\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderTopControls\", function () {\n      var backControl = !_this.props.onBack ? _this.renderNullControl() : _this.renderBack();\n      var volumeControl = _this.props.disableVolume ? _this.renderNullControl() : _this.renderVolume();\n      var fullscreenControl = _this.props.disableFullscreen ? _this.renderNullControl() : _this.renderFullscreen();\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.controls.top, {\n          opacity: _this.animations.topControl.opacity,\n          marginTop: _this.animations.topControl.marginTop\n        }]\n      }, _react.default.createElement(_reactNative.ImageBackground, {\n        source: require('./assets/img/top-vignette.png'),\n        style: [styles.controls.column],\n        imageStyle: [styles.controls.vignette]\n      }, _react.default.createElement(_reactNative.SafeAreaView, {\n        style: styles.controls.topControlGroup\n      }, backControl, _react.default.createElement(_reactNative.View, {\n        style: styles.controls.pullRight\n      }, volumeControl, fullscreenControl))));\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderBack\", function () {\n      return _this.renderControl(_react.default.createElement(_reactNative.Image, {\n        source: require('./assets/img/back.png'),\n        style: styles.controls.back\n      }), _this.events.onBack, styles.controls.back);\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderVolume\", function () {\n      var _this$player$volumePa;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.volume.container\n      }, _react.default.createElement(_reactNative.View, {\n        style: [styles.volume.fill, {\n          width: _this.state.volumeFillWidth\n        }]\n      }), _react.default.createElement(_reactNative.View, {\n        style: [styles.volume.track, {\n          width: _this.state.volumeTrackWidth\n        }]\n      }), _react.default.createElement(_reactNative.View, _extends({\n        style: [styles.volume.handle, {\n          left: _this.state.volumePosition\n        }]\n      }, (_this$player$volumePa = _this.player.volumePanResponder) === null || _this$player$volumePa === void 0 ? void 0 : _this$player$volumePa.panHandlers), _react.default.createElement(_reactNative.Image, {\n        style: styles.volume.icon,\n        source: require('./assets/img/volume.png')\n      })));\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderFullscreen\", function () {\n      var source = _this.state.isFullscreen === true ? require('./assets/img/shrink.png') : require('./assets/img/expand.png');\n      return _this.renderControl(_react.default.createElement(_reactNative.Image, {\n        source: source\n      }), _this.methods.toggleFullscreen, styles.controls.fullscreen);\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderBottomControls\", function () {\n      var timerControl = _this.props.disableTimer ? _this.renderNullControl() : _this.renderTimer();\n      var seekbarControl = _this.props.disableSeekbar ? _this.renderNullControl() : _this.renderSeekbar();\n      var playPauseControl = _this.props.disablePlayPause ? _this.renderNullControl() : _this.renderPlayPause();\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.controls.bottom, {\n          opacity: _this.animations.bottomControl.opacity,\n          marginBottom: _this.animations.bottomControl.marginBottom\n        }]\n      }, _react.default.createElement(_reactNative.ImageBackground, {\n        source: require('./assets/img/bottom-vignette.png'),\n        style: [styles.controls.column],\n        imageStyle: [styles.controls.vignette]\n      }, seekbarControl, _react.default.createElement(_reactNative.SafeAreaView, {\n        style: [styles.controls.row, styles.controls.bottomControlGroup]\n      }, playPauseControl, _this.renderTitle(), timerControl)));\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderSeekbar\", function () {\n      var _this$player$seekPanR;\n\n      return _react.default.createElement(_reactNative.View, _extends({\n        style: styles.seekbar.container,\n        collapsable: false\n      }, (_this$player$seekPanR = _this.player.seekPanResponder) === null || _this$player$seekPanR === void 0 ? void 0 : _this$player$seekPanR.panHandlers), _react.default.createElement(_reactNative.View, {\n        style: styles.seekbar.track,\n        onLayout: function onLayout(event) {\n          return _this.player.seekerWidth = event.nativeEvent.layout.width;\n        },\n        pointerEvents: 'none'\n      }, _react.default.createElement(_reactNative.View, {\n        style: [styles.seekbar.fill, {\n          width: _this.state.seekerFillWidth,\n          backgroundColor: _this.props.seekColor || '#FFF'\n        }],\n        pointerEvents: 'none'\n      })), _react.default.createElement(_reactNative.View, {\n        style: [styles.seekbar.handle, {\n          left: _this.state.seekerPosition\n        }],\n        pointerEvents: 'none'\n      }, _react.default.createElement(_reactNative.View, {\n        style: [styles.seekbar.circle, {\n          backgroundColor: _this.props.seekColor || '#FFF'\n        }],\n        pointerEvents: 'none'\n      })));\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderPlayPause\", function () {\n      var source = _this.state.paused === true ? require('./assets/img/play.png') : require('./assets/img/pause.png');\n      return _this.renderControl(_react.default.createElement(_reactNative.Image, {\n        source: source\n      }), _this.methods.togglePlayPause, styles.controls.playPause);\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderTitle\", function () {\n      if (_this.opts.title) {\n        return _react.default.createElement(_reactNative.View, {\n          style: [styles.controls.control, styles.controls.title]\n        }, _react.default.createElement(_reactNative.Text, {\n          style: [styles.controls.text, styles.controls.titleText],\n          numberOfLines: 1\n        }, _this.opts.title || ''));\n      }\n\n      return null;\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderTimer\", function () {\n      return _this.renderControl(_react.default.createElement(_reactNative.Text, {\n        style: styles.controls.timerText\n      }, _this.calculateTime()), _this.methods.toggleTimer, styles.controls.timer);\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderLoader\", function () {\n      if (_this.state.loading) {\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.loader.container\n        }, _react.default.createElement(_reactNative.Animated.Image, {\n          source: require('./assets/img/loader-icon.png'),\n          style: [{\n            transform: [{\n              rotate: _this.animations.loader.rotate.interpolate({\n                inputRange: [0, 360],\n                outputRange: ['0deg', '360deg']\n              })\n            }]\n          }]\n        }));\n      }\n\n      return null;\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderError\", function () {\n      if (_this.state.error) {\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.error.container\n        }, _react.default.createElement(_reactNative.Image, {\n          source: require('./assets/img/error-icon.png'),\n          style: styles.error.icon\n        }), _react.default.createElement(_reactNative.Text, {\n          style: styles.error.text\n        }, \"Video unavailable\"));\n      }\n\n      return null;\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"methods\", {\n      toggleFullscreen: _this._toggleFullscreen,\n      togglePlayPause: _this._togglePlayPause,\n      toggleControls: _this._toggleControls,\n      toggleTimer: _this._toggleTimer\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"events\", {\n      onError: _this.props.onError || _this._onError,\n      onBack: _this.props.onBack || _this._onBack,\n      onEnd: _this.props.onEnd || _this._onEnd,\n      onScreenTouch: _this._onScreenTouch,\n      onEnterFullscreen: _this.props.onEnterFullscreen,\n      onExitFullscreen: _this.props.onExitFullscreen,\n      onShowControls: _this.props.onShowControls,\n      onHideControls: _this.props.onHideControls,\n      onLoadStart: _this._onLoadStart,\n      onProgress: _this._onProgress,\n      onSeek: _this._onSeek,\n      onLoad: _this._onLoad,\n      onPause: _this.props.onPause,\n      onPlay: _this.props.onPlay\n    });\n\n    _this.state = {\n      resizeMode: _this.props.resizeMode || 'contain',\n      paused: _this.props.paused || false,\n      muted: _this.props.muted || false,\n      volume: _this.props.volume || 1,\n      rate: _this.props.rate || 1,\n      isFullscreen: _this.props.isFullscreen || _this.props.resizeMode === 'cover' || false,\n      showTimeRemaining: true,\n      volumeTrackWidth: 0,\n      volumeFillWidth: 0,\n      seekerFillWidth: 0,\n      showControls: _this.props.showOnStart,\n      volumePosition: 0,\n      seekerPosition: 0,\n      volumeOffset: 0,\n      seekerOffset: 0,\n      seeking: false,\n      originallyPaused: false,\n      scrubbing: false,\n      loading: false,\n      currentTime: 0,\n      error: false,\n      duration: 0\n    };\n    _this.opts = {\n      playWhenInactive: _this.props.playWhenInactive,\n      playInBackground: _this.props.playInBackground,\n      repeat: _this.props.repeat || false,\n      title: _this.props.title\n    };\n    _this.player = {\n      controlTimeoutDelay: _this.props.controlTimeout || 15000,\n      volumePanResponder: undefined,\n      seekPanResponder: undefined,\n      controlTimeout: null,\n      tapActionTimeout: null,\n      volumeWidth: 150,\n      iconOffset: 0,\n      seekerWidth: 0,\n      ref: _react.default.createRef(),\n      scrubbingTimeStep: _this.props.scrubbing || 0,\n      tapAnywhereToPause: _this.props.tapAnywhereToPause\n    };\n    var initialValue = _this.props.showOnStart ? 1 : 0;\n    _this.animations = {\n      bottomControl: {\n        marginBottom: new _reactNative.Animated.Value(0),\n        opacity: new _reactNative.Animated.Value(initialValue)\n      },\n      topControl: {\n        marginTop: new _reactNative.Animated.Value(0),\n        opacity: new _reactNative.Animated.Value(initialValue)\n      },\n      video: {\n        opacity: new _reactNative.Animated.Value(1)\n      },\n      loader: {\n        rotate: new _reactNative.Animated.Value(0),\n        MAX_VALUE: 360\n      }\n    };\n    _this.variousStyles = {\n      videoStyle: _this.props.videoStyle || {},\n      containerStyle: _this.props.style || {}\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(VideoPlayer, [{\n    key: \"formatTime\",\n    value: function formatTime() {\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      time = Math.min(Math.max(time, 0), this.state.duration);\n      var formattedMinutes = (0, _padStart.default)(Math.floor(time / 60).toFixed(0), 2, '0');\n      var formattedSeconds = (0, _padStart.default)(Math.floor(time % 60).toFixed(0), 2, '0');\n      return \"\".concat(formattedMinutes, \":\").concat(formattedSeconds);\n    }\n  }, {\n    key: \"setSeekerPosition\",\n    value: function setSeekerPosition() {\n      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var state = _objectSpread({}, this.state);\n\n      position = this.constrainToSeekerMinMax(position);\n      state.seekerFillWidth = position;\n      state.seekerPosition = position;\n\n      if (!state.seeking) {\n        state.seekerOffset = position;\n      }\n\n      this.setState(state);\n    }\n  }, {\n    key: \"constrainToSeekerMinMax\",\n    value: function constrainToSeekerMinMax() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (val <= 0) {\n        return 0;\n      } else if (val >= this.player.seekerWidth) {\n        return this.player.seekerWidth;\n      }\n\n      return val;\n    }\n  }, {\n    key: \"seekTo\",\n    value: function seekTo() {\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var _this$player$ref$curr2;\n\n      var state = _objectSpread({}, this.state);\n\n      state.currentTime = time;\n      (_this$player$ref$curr2 = this.player.ref.current) === null || _this$player$ref$curr2 === void 0 ? void 0 : _this$player$ref$curr2.seek(time);\n      this.setState(state);\n    }\n  }, {\n    key: \"setVolumePosition\",\n    value: function setVolumePosition() {\n      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var state = _objectSpread({}, this.state);\n\n      position = this.constrainToVolumeMinMax(position);\n      state.volumePosition = position + this.player.iconOffset;\n      state.volumeFillWidth = position;\n      state.volumeTrackWidth = this.player.volumeWidth - state.volumeFillWidth;\n\n      if (state.volumeFillWidth < 0) {\n        state.volumeFillWidth = 0;\n      }\n\n      if (state.volumeTrackWidth > 150) {\n        state.volumeTrackWidth = 150;\n      }\n\n      this.setState(state);\n    }\n  }, {\n    key: \"constrainToVolumeMinMax\",\n    value: function constrainToVolumeMinMax() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (val <= 0) {\n        return 0;\n      } else if (val >= this.player.volumeWidth + 9) {\n        return this.player.volumeWidth + 9;\n      }\n\n      return val;\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.initSeekPanResponder();\n      this.initVolumePanResponder();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.state.paused !== nextProps.paused && typeof nextProps.paused === 'boolean') {\n        this.setState({\n          paused: nextProps.paused\n        });\n      }\n\n      if (this.variousStyles.videoStyle !== nextProps.videoStyle) {\n        this.variousStyles.videoStyle = nextProps.videoStyle;\n      }\n\n      if (this.variousStyles.containerStyle !== nextProps.style) {\n        this.variousStyles.containerStyle = nextProps.style;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var position = this.calculateVolumePositionFromVolume();\n      this.setVolumePosition(position);\n      this.mounted = true;\n      this.setState({\n        volumeOffset: position\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n      this.clearControlTimeout();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: this.events.onScreenTouch,\n        style: [styles.player.container, this.variousStyles.containerStyle]\n      }, _react.default.createElement(_reactNative.View, {\n        style: [styles.player.container, this.variousStyles.containerStyle]\n      }, _react.default.createElement(_reactNativeVideo.default, _extends({}, this.props, {\n        ref: this.player.ref,\n        resizeMode: this.state.resizeMode,\n        volume: this.state.volume,\n        paused: this.state.paused,\n        muted: this.state.muted,\n        rate: this.state.rate,\n        onLoadStart: this.events.onLoadStart,\n        onProgress: this.events.onProgress,\n        onError: this.events.onError,\n        onLoad: this.events.onLoad,\n        onEnd: this.events.onEnd,\n        onSeek: this.events.onSeek,\n        style: [styles.player.video, this.variousStyles.videoStyle],\n        source: this.props.source\n      })), this.renderError(), this.renderLoader(), this.renderTopControls(), this.renderBottomControls()));\n    }\n  }]);\n  return VideoPlayer;\n}(_react.Component);\n\nexports.default = VideoPlayer;\n\n_defineProperty(VideoPlayer, \"defaultProps\", {\n  toggleResizeModeOnFullscreen: true,\n  controlAnimationTiming: 500,\n  controlTimeout: 15000,\n  doubleTapTime: 130,\n  scrubbing: 0,\n  playInBackground: false,\n  playWhenInactive: false,\n  resizeMode: 'contain',\n  isFullscreen: false,\n  showOnStart: true,\n  paused: false,\n  repeat: false,\n  muted: false,\n  volume: 1,\n  title: '',\n  rate: 1,\n  seekColor: '#fff',\n  tapAnywhereToPause: false\n});\n\nvar styles = {\n  player: _reactNative.StyleSheet.create({\n    container: {\n      overflow: 'hidden',\n      backgroundColor: '#000',\n      flex: 1,\n      alignSelf: 'stretch',\n      justifyContent: 'space-between'\n    },\n    video: {\n      overflow: 'hidden',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }),\n  error: _reactNative.StyleSheet.create({\n    container: {\n      backgroundColor: 'rgba( 0, 0, 0, 0.5 )',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    icon: {\n      marginBottom: 16\n    },\n    text: {\n      backgroundColor: 'transparent',\n      color: '#f27474'\n    }\n  }),\n  loader: _reactNative.StyleSheet.create({\n    container: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }),\n  controls: _reactNative.StyleSheet.create({\n    row: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      height: undefined,\n      width: undefined\n    },\n    column: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      height: undefined,\n      width: undefined\n    },\n    vignette: {\n      resizeMode: 'stretch'\n    },\n    control: {\n      padding: 16\n    },\n    text: {\n      backgroundColor: 'transparent',\n      color: '#FFF',\n      fontSize: 14,\n      textAlign: 'center'\n    },\n    pullRight: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    top: {\n      flex: 1,\n      alignItems: 'stretch',\n      justifyContent: 'flex-start'\n    },\n    bottom: {\n      alignItems: 'stretch',\n      flex: 2,\n      justifyContent: 'flex-end'\n    },\n    topControlGroup: {\n      alignSelf: 'stretch',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      flexDirection: 'row',\n      width: undefined,\n      margin: 12,\n      marginBottom: 18\n    },\n    bottomControlGroup: {\n      alignSelf: 'stretch',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginLeft: 12,\n      marginRight: 12,\n      marginBottom: 0\n    },\n    volume: {\n      flexDirection: 'row'\n    },\n    fullscreen: {\n      flexDirection: 'row'\n    },\n    playPause: {\n      position: 'relative',\n      width: 80,\n      zIndex: 0\n    },\n    title: {\n      alignItems: 'center',\n      flex: 0.6,\n      flexDirection: 'column',\n      padding: 0\n    },\n    titleText: {\n      textAlign: 'center'\n    },\n    timer: {\n      width: 80\n    },\n    timerText: {\n      backgroundColor: 'transparent',\n      color: '#FFF',\n      fontSize: 11,\n      textAlign: 'right'\n    },\n    back: {}\n  }),\n  volume: _reactNative.StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      flexDirection: 'row',\n      height: 1,\n      marginLeft: 20,\n      marginRight: 20,\n      width: 150\n    },\n    track: {\n      backgroundColor: '#333',\n      height: 1,\n      marginLeft: 7\n    },\n    fill: {\n      backgroundColor: '#FFF',\n      height: 1\n    },\n    handle: {\n      position: 'absolute',\n      marginTop: -24,\n      marginLeft: -24,\n      padding: 16\n    },\n    icon: {\n      marginLeft: 7\n    }\n  }),\n  seekbar: _reactNative.StyleSheet.create({\n    container: {\n      alignSelf: 'stretch',\n      height: 28,\n      marginLeft: 20,\n      marginRight: 20\n    },\n    track: {\n      backgroundColor: '#333',\n      height: 1,\n      position: 'relative',\n      top: 14,\n      width: '100%'\n    },\n    fill: {\n      backgroundColor: '#FFF',\n      height: 1,\n      width: '100%'\n    },\n    handle: {\n      position: 'absolute',\n      marginLeft: -7,\n      height: 28,\n      width: 28\n    },\n    circle: {\n      borderRadius: 12,\n      position: 'relative',\n      top: 8,\n      left: 8,\n      height: 12,\n      width: 12\n    }\n  })\n};","map":{"version":3,"sources":["index.tsx"],"names":["VideoPlayer","toggleResizeModeOnFullscreen","controlAnimationTiming","controlTimeout","doubleTapTime","scrubbing","playInBackground","playWhenInactive","resizeMode","isFullscreen","showOnStart","paused","repeat","muted","volume","title","rate","seekColor","tapAnywhereToPause","constructor","showTimeRemaining","volumeTrackWidth","volumeFillWidth","seekerFillWidth","showControls","volumePosition","seekerPosition","volumeOffset","seekerOffset","seeking","originallyPaused","loading","currentTime","error","duration","controlTimeoutDelay","volumePanResponder","seekPanResponder","tapActionTimeout","volumeWidth","iconOffset","seekerWidth","ref","React","scrubbingTimeStep","initialValue","bottomControl","marginBottom","Animated","opacity","topControl","marginTop","video","loader","rotate","MAX_VALUE","videoStyle","containerStyle","data","state","position","clearTimeout","setTimeout","toValue","useNativeDriver","easing","Easing","time","formatTime","Math","formattedMinutes","padStart","formattedSeconds","setSeekerPosition","constrainToSeekerMinMax","val","percent","seekTo","setVolumePosition","constrainToVolumeMinMax","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","nextProps","componentDidMount","componentWillUnmount","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderGrant","evt","onPanResponderMove","gestureState","timeDifference","onPanResponderRelease","style","callback","styles","backControl","volumeControl","fullscreenControl","require","topControlGroup","pullRight","back","container","width","left","source","timerControl","seekbarControl","playPauseControl","event","backgroundColor","timerText","transform","inputRange","outputRange","icon","text","render","toggleFullscreen","togglePlayPause","toggleControls","toggleTimer","_toggleTimer","onError","onBack","onEnd","onScreenTouch","onEnterFullscreen","onExitFullscreen","onShowControls","onHideControls","onLoadStart","onProgress","onSeek","onLoad","onPause","onPlay","player","overflow","flex","alignSelf","justifyContent","top","right","bottom","alignItems","color","controls","row","flexDirection","height","undefined","column","vignette","control","padding","fontSize","textAlign","margin","bottomControlGroup","marginLeft","marginRight","fullscreen","playPause","zIndex","titleText","timer","track","fill","handle","seekbar","circle","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Video, {\n  VideoProperties,\n  OnLoadData,\n  OnProgressData,\n  OnSeekData,\n} from 'react-native-video';\nimport {\n  TouchableWithoutFeedback,\n  TouchableHighlight,\n  ImageBackground,\n  PanResponder,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  Easing,\n  Image,\n  View,\n  Text,\n  StyleProp,\n  ViewStyle,\n  PanResponderInstance,\n} from 'react-native';\nimport padStart from 'lodash/padStart';\n\ninterface IProps extends VideoProperties {\n  toggleResizeModeOnFullscreen: boolean;\n  controlAnimationTiming: number;\n  doubleTapTime: number;\n  isFullscreen: boolean;\n  showOnStart: boolean;\n  title: string;\n  playInBackground: boolean;\n  playWhenInactive: boolean;\n  videoStyle?: StyleProp<ViewStyle>;\n  controlTimeout: number;\n  scrubbing: number;\n  seekColor: string;\n  tapAnywhereToPause: boolean;\n\n  onEnterFullscreen?: () => void;\n  onExitFullscreen?: () => void;\n  onHideControls?: () => void;\n  onShowControls?: () => void;\n  onPause?: () => void;\n  onPlay?: () => void;\n  onBack?: () => void;\n\n  disableFullscreen?: boolean;\n  disablePlayPause?: boolean;\n  disableSeekbar?: boolean;\n  disableVolume?: boolean;\n  disableTimer?: boolean;\n}\n\ninterface IState {\n  // Video\n  resizeMode: 'stretch' | 'contain' | 'cover' | 'none';\n  paused: boolean;\n  muted: boolean;\n  volume: number;\n  rate: number;\n  // Controls\n\n  isFullscreen: boolean;\n  showTimeRemaining: boolean;\n  volumeTrackWidth: number;\n  volumeFillWidth: number;\n  seekerFillWidth: number;\n  showControls: boolean;\n  volumePosition: number;\n  seekerPosition: number;\n  volumeOffset: number;\n  seekerOffset: number;\n  seeking: boolean;\n  originallyPaused: boolean;\n  scrubbing: boolean;\n  loading: boolean;\n  currentTime: number;\n  error: boolean;\n  duration: number;\n}\n\nexport default class VideoPlayer extends Component<IProps, IState> {\n  static defaultProps = {\n    toggleResizeModeOnFullscreen: true,\n    controlAnimationTiming: 500,\n    controlTimeout: 15000,\n    doubleTapTime: 130,\n    scrubbing: 0,\n    playInBackground: false,\n    playWhenInactive: false,\n    resizeMode: 'contain',\n    isFullscreen: false,\n    showOnStart: true,\n    paused: false,\n    repeat: false,\n    muted: false,\n    volume: 1,\n    title: '',\n    rate: 1,\n    seekColor: '#fff',\n    tapAnywhereToPause: false,\n  };\n\n  opts: {\n    playWhenInactive: boolean;\n    playInBackground: boolean;\n    repeat: boolean;\n    title: string;\n  };\n\n  player: {\n    controlTimeoutDelay: number;\n    volumePanResponder?: PanResponderInstance;\n    seekPanResponder?: PanResponderInstance;\n    controlTimeout: any;\n    tapActionTimeout: any;\n    volumeWidth: number;\n    iconOffset: number;\n    seekerWidth: number;\n    ref: React.RefObject<Video>;\n    scrubbingTimeStep: number;\n    tapAnywhereToPause: boolean;\n  };\n\n  animations: {\n    bottomControl: {\n      marginBottom: Animated.Value;\n      opacity: Animated.Value;\n    };\n    topControl: {\n      marginTop: Animated.Value;\n      opacity: Animated.Value;\n    };\n    video: {\n      opacity: Animated.Value;\n    };\n    loader: {\n      rotate: Animated.Value;\n      MAX_VALUE: number;\n    };\n  };\n\n  variousStyles: {\n    videoStyle: StyleProp<ViewStyle>;\n    containerStyle: StyleProp<ViewStyle>;\n  };\n\n  mounted = false;\n\n  constructor(props: IProps) {\n    super(props);\n\n    /**\n     * All of our values that are updated by the\n     * methods and listeners in this class\n     */\n    this.state = {\n      // Video\n      resizeMode: this.props.resizeMode || 'contain',\n      paused: this.props.paused || false,\n      muted: this.props.muted || false,\n      volume: this.props.volume || 1,\n      rate: this.props.rate || 1,\n      // Controls\n\n      isFullscreen:\n        this.props.isFullscreen || this.props.resizeMode === 'cover' || false,\n      showTimeRemaining: true,\n      volumeTrackWidth: 0,\n      volumeFillWidth: 0,\n      seekerFillWidth: 0,\n      showControls: this.props.showOnStart,\n      volumePosition: 0,\n      seekerPosition: 0,\n      volumeOffset: 0,\n      seekerOffset: 0,\n      seeking: false,\n      originallyPaused: false,\n      scrubbing: false,\n      loading: false,\n      currentTime: 0,\n      error: false,\n      duration: 0,\n    };\n\n    /**\n     * Any options that can be set at init.\n     */\n    this.opts = {\n      playWhenInactive: this.props.playWhenInactive,\n      playInBackground: this.props.playInBackground,\n      repeat: this.props.repeat || false,\n      title: this.props.title,\n    };\n\n    /**\n     * Player information\n     */\n    this.player = {\n      controlTimeoutDelay: this.props.controlTimeout || 15000,\n      volumePanResponder: undefined,\n      seekPanResponder: undefined,\n      controlTimeout: null,\n      tapActionTimeout: null,\n      volumeWidth: 150,\n      iconOffset: 0,\n      seekerWidth: 0,\n      ref: React.createRef<Video>(),\n      scrubbingTimeStep: this.props.scrubbing || 0,\n      tapAnywhereToPause: this.props.tapAnywhereToPause,\n    };\n\n    /**\n     * Various animations\n     */\n    const initialValue = this.props.showOnStart ? 1 : 0;\n\n    this.animations = {\n      bottomControl: {\n        marginBottom: new Animated.Value(0),\n        opacity: new Animated.Value(initialValue),\n      },\n      topControl: {\n        marginTop: new Animated.Value(0),\n        opacity: new Animated.Value(initialValue),\n      },\n      video: {\n        opacity: new Animated.Value(1),\n      },\n      loader: {\n        rotate: new Animated.Value(0),\n        MAX_VALUE: 360,\n      },\n    };\n\n    /**\n     * Various styles that be added...\n     */\n    this.variousStyles = {\n      videoStyle: this.props.videoStyle || {},\n      containerStyle: this.props.style || {},\n    };\n  }\n\n  /**\n    | -------------------------------------------------------\n    | Events\n    | -------------------------------------------------------\n    |\n    | These are the events that the <Video> component uses\n    | and can be overridden by assigning it as a prop.\n    | It is suggested that you override onEnd.\n    |\n    */\n\n  /**\n   * When load starts we display a loading icon\n   * and show the controls.\n   */\n  _onLoadStart = () => {\n    this.loadAnimation();\n    this.setState({\n      loading: true,\n    });\n\n    if (typeof this.props.onLoadStart === 'function') {\n      this.props.onLoadStart();\n    }\n  };\n\n  /**\n   * When load is finished we hide the load icon\n   * and hide the controls. We also set the\n   * video duration.\n   *\n   * @param {object} data The video meta data\n   */\n  _onLoad = (data: OnLoadData) => {\n    this.setState({\n      duration: data.duration,\n      loading: false,\n    });\n\n    if (this.state.showControls) {\n      this.setControlTimeout();\n    }\n\n    if (typeof this.props.onLoad === 'function') {\n      this.props.onLoad(data);\n    }\n  };\n\n  /**\n   * For onprogress we fire listeners that\n   * update our seekbar and timer.\n   *\n   * @param {object} data The video meta data\n   */\n  _onProgress = (data: OnProgressData) => {\n    let state = this.state;\n    if (!state.scrubbing) {\n      if (!state.seeking) {\n        const position = this.calculateSeekerPosition();\n        this.setSeekerPosition(position);\n      }\n\n      if (typeof this.props.onProgress === 'function') {\n        this.props.onProgress(data);\n      }\n\n      this.setState({\n        currentTime: data.currentTime,\n      });\n    }\n  };\n\n  /**\n   * For onSeek we clear scrubbing if set.\n   *\n   * @param {object} data The video meta data\n   */\n  _onSeek = (data: OnSeekData) => {\n    let state = this.state;\n    if (state.scrubbing) {\n      // Seeking may be false here if the user released the seek bar while the player was still processing\n      // the last seek command. In this case, perform the steps that have been postponed.\n      if (!state.seeking) {\n        this.setControlTimeout();\n        this.setState({\n          paused: state.originallyPaused,\n        });\n      }\n\n      this.setState({\n        scrubbing: false,\n        currentTime: data.currentTime,\n      });\n    }\n  };\n\n  /**\n   * It is suggested that you override this\n   * command so your app knows what to do.\n   * Either close the video or go to a\n   * new page.\n   */\n  _onEnd = () => {};\n\n  /**\n   * Set the error state to true which then\n   * changes our renderError function\n   *\n   * @param {object} err  Err obj returned from <Video> component\n   */\n  _onError = () => {\n    this.setState({\n      error: true,\n      loading: false,\n    });\n  };\n\n  /**\n   * This is a single and double tap listener\n   * when the user taps the screen anywhere.\n   * One tap toggles controls and/or toggles pause,\n   * two toggles fullscreen mode.\n   */\n  _onScreenTouch = () => {\n    if (typeof this.player.tapActionTimeout === 'number') {\n      clearTimeout(this.player.tapActionTimeout);\n      this.player.tapActionTimeout = 0;\n      this.methods.toggleFullscreen();\n      const state = this.state;\n      if (state.showControls) {\n        this.resetControlTimeout();\n      }\n    } else {\n      this.player.tapActionTimeout = setTimeout(() => {\n        const state = this.state;\n        if (this.player.tapAnywhereToPause && state.showControls) {\n          this.methods.togglePlayPause();\n          this.resetControlTimeout();\n        } else {\n          this.methods.toggleControls();\n        }\n        this.player.tapActionTimeout = 0;\n      }, this.props.doubleTapTime);\n    }\n  };\n\n  /**\n    | -------------------------------------------------------\n    | Methods\n    | -------------------------------------------------------\n    |\n    | These are all of our functions that interact with\n    | various parts of the class. Anything from\n    | calculating time remaining in a video\n    | to handling control operations.\n    |\n    */\n\n  /**\n   * Set a timeout when the controls are shown\n   * that hides them after a length of time.\n   * Default is 15s\n   */\n  setControlTimeout = () => {\n    this.player.controlTimeout = setTimeout(() => {\n      this._hideControls();\n    }, this.player.controlTimeoutDelay);\n  };\n\n  /**\n   * Clear the hide controls timeout.\n   */\n  clearControlTimeout = () => {\n    clearTimeout(this.player.controlTimeout);\n  };\n\n  /**\n   * Reset the timer completely\n   */\n  resetControlTimeout = () => {\n    this.clearControlTimeout();\n    this.setControlTimeout();\n  };\n\n  /**\n   * Animation to hide controls. We fade the\n   * display to 0 then move them off the\n   * screen so they're not interactable\n   */\n  hideControlAnimation = () => {\n    Animated.parallel([\n      Animated.timing(this.animations.topControl.opacity, {\n        toValue: 0,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.animations.topControl.marginTop, {\n        toValue: -100,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.animations.bottomControl.opacity, {\n        toValue: 0,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.animations.bottomControl.marginBottom, {\n        toValue: -100,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  };\n\n  /**\n   * Animation to show controls...opposite of\n   * above...move onto the screen and then\n   * fade in.\n   */\n  showControlAnimation = () => {\n    Animated.parallel([\n      Animated.timing(this.animations.topControl.opacity, {\n        toValue: 1,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming,\n      }),\n      Animated.timing(this.animations.topControl.marginTop, {\n        toValue: 0,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming,\n      }),\n      Animated.timing(this.animations.bottomControl.opacity, {\n        toValue: 1,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming,\n      }),\n      Animated.timing(this.animations.bottomControl.marginBottom, {\n        toValue: 0,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming,\n      }),\n    ]).start();\n  };\n\n  /**\n   * Loop animation to spin loader icon. If not loading then stop loop.\n   */\n  loadAnimation = () => {\n    if (this.state.loading) {\n      Animated.sequence([\n        Animated.timing(this.animations.loader.rotate, {\n          toValue: this.animations.loader.MAX_VALUE,\n          duration: 1500,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        }),\n        Animated.timing(this.animations.loader.rotate, {\n          toValue: 0,\n          duration: 0,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        }),\n      ]).start(this.loadAnimation);\n    }\n  };\n\n  /**\n   * Function to hide the controls. Sets our\n   * state then calls the animation.\n   */\n  _hideControls = () => {\n    if (this.mounted) {\n      this.hideControlAnimation();\n\n      this.setState({\n        showControls: false,\n      });\n    }\n  };\n\n  /**\n   * Function to toggle controls based on\n   * current state.\n   */\n  _toggleControls = () => {\n    let state = this.state;\n    const showControls = !state.showControls;\n\n    if (showControls) {\n      this.showControlAnimation();\n      this.setControlTimeout();\n      typeof this.events.onShowControls === 'function' &&\n        this.events.onShowControls();\n    } else {\n      this.hideControlAnimation();\n      this.clearControlTimeout();\n      typeof this.events.onHideControls === 'function' &&\n        this.events.onHideControls();\n    }\n\n    this.setState({\n      showControls,\n    });\n  };\n\n  /**\n   * Toggle fullscreen changes resizeMode on\n   * the <Video> component then updates the\n   * isFullscreen state.\n   */\n  _toggleFullscreen = () => {\n    let state = this.state;\n\n    const isFullscreen = !state.isFullscreen;\n    let resizeMode: any = 'contain';\n    if (this.props.toggleResizeModeOnFullscreen) {\n      resizeMode = isFullscreen === true ? 'cover' : 'contain';\n    }\n\n    if (isFullscreen) {\n      typeof this.events.onEnterFullscreen === 'function' &&\n        this.events.onEnterFullscreen();\n    } else {\n      typeof this.events.onExitFullscreen === 'function' &&\n        this.events.onExitFullscreen();\n    }\n\n    this.setState({\n      isFullscreen,\n      resizeMode,\n    });\n  };\n\n  /**\n   * Toggle playing state on <Video> component\n   */\n  _togglePlayPause = () => {\n    let state = this.state;\n    const paused = !state.paused;\n\n    if (paused) {\n      typeof this.events.onPause === 'function' && this.events.onPause();\n    } else {\n      typeof this.events.onPlay === 'function' && this.events.onPlay();\n    }\n\n    this.setState({\n      paused,\n    });\n  };\n\n  /**\n   * Toggle between showing time remaining or\n   * video duration in the timer control\n   */\n  _toggleTimer = () => {\n    let state = this.state;\n    this.setState({\n      showTimeRemaining: !state.showTimeRemaining,\n    });\n  };\n\n  /**\n   * The default 'onBack' function pops the navigator\n   * and as such the video player requires a\n   * navigator prop by default.\n   */\n  _onBack = () => {\n    if (this.props.onBack) {\n      this.props.onBack();\n    }\n  };\n\n  /**\n   * Calculate the time to show in the timer area\n   * based on if they want to see time remaining\n   * or duration. Formatted to look as 00:00.\n   */\n  calculateTime = () => {\n    if (this.state.showTimeRemaining) {\n      const time = this.state.duration - this.state.currentTime;\n      return `${this.formatTime(time)}`;\n    }\n\n    return this.formatTime(this.state.currentTime);\n  };\n\n  /**\n   * Format a time string as mm:ss\n   *\n   * @param {int} time time in milliseconds\n   * @return {string} formatted time string in mm:ss format\n   */\n  formatTime(time = 0) {\n    time = Math.min(Math.max(time, 0), this.state.duration);\n\n    const formattedMinutes = padStart(Math.floor(time / 60).toFixed(0), 2, '0');\n    const formattedSeconds = padStart(Math.floor(time % 60).toFixed(0), 2, '0');\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n\n  /**\n   * Set the position of the seekbar's components\n   * (both fill and handle) according to the\n   * position supplied.\n   *\n   * @param {float} position position in px of seeker handle}\n   */\n  setSeekerPosition(position = 0) {\n    let state = { ...this.state };\n    position = this.constrainToSeekerMinMax(position);\n\n    state.seekerFillWidth = position;\n    state.seekerPosition = position;\n\n    if (!state.seeking) {\n      state.seekerOffset = position;\n    }\n\n    this.setState(state);\n  }\n\n  /**\n   * Constrain the location of the seeker to the\n   * min/max value based on how big the\n   * seeker is.\n   *\n   * @param {float} val position of seeker handle in px\n   * @return {float} constrained position of seeker handle in px\n   */\n  constrainToSeekerMinMax(val = 0) {\n    if (val <= 0) {\n      return 0;\n    } else if (val >= this.player.seekerWidth) {\n      return this.player.seekerWidth;\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the position that the seeker should be\n   * at along its track.\n   *\n   * @return {float} position of seeker handle in px based on currentTime\n   */\n  calculateSeekerPosition = () => {\n    const percent = this.state.currentTime / this.state.duration;\n    return this.player.seekerWidth * percent;\n  };\n\n  /**\n   * Return the time that the video should be at\n   * based on where the seeker handle is.\n   *\n   * @return {float} time in ms based on seekerPosition.\n   */\n  calculateTimeFromSeekerPosition = () => {\n    const percent = this.state.seekerPosition / this.player.seekerWidth;\n    return this.state.duration * percent;\n  };\n\n  /**\n   * Seek to a time in the video.\n   *\n   * @param {float} time time to seek to in ms\n   */\n  seekTo(time = 0) {\n    let state = { ...this.state };\n    state.currentTime = time;\n    this.player.ref.current?.seek(time);\n    this.setState(state);\n  }\n\n  /**\n   * Set the position of the volume slider\n   *\n   * @param {float} position position of the volume handle in px\n   */\n  setVolumePosition(position = 0) {\n    let state = { ...this.state };\n    position = this.constrainToVolumeMinMax(position);\n    state.volumePosition = position + this.player.iconOffset;\n    state.volumeFillWidth = position;\n\n    state.volumeTrackWidth = this.player.volumeWidth - state.volumeFillWidth;\n\n    if (state.volumeFillWidth < 0) {\n      state.volumeFillWidth = 0;\n    }\n\n    if (state.volumeTrackWidth > 150) {\n      state.volumeTrackWidth = 150;\n    }\n\n    this.setState(state);\n  }\n\n  /**\n   * Constrain the volume bar to the min/max of\n   * its track's width.\n   *\n   * @param {float} val position of the volume handle in px\n   * @return {float} contrained position of the volume handle in px\n   */\n  constrainToVolumeMinMax(val = 0) {\n    if (val <= 0) {\n      return 0;\n    } else if (val >= this.player.volumeWidth + 9) {\n      return this.player.volumeWidth + 9;\n    }\n    return val;\n  }\n\n  /**\n   * Get the volume based on the position of the\n   * volume object.\n   *\n   * @return {float} volume level based on volume handle position\n   */\n  calculateVolumeFromVolumePosition = () => {\n    return this.state.volumePosition / this.player.volumeWidth;\n  };\n\n  /**\n   * Get the position of the volume handle based\n   * on the volume\n   *\n   * @return {float} volume handle position in px based on volume\n   */\n  calculateVolumePositionFromVolume = () => {\n    return this.player.volumeWidth * this.state.volume;\n  };\n\n  /**\n    | -------------------------------------------------------\n    | React Component functions\n    | -------------------------------------------------------\n    |\n    | Here we're initializing our listeners and getting\n    | the component ready using the built-in React\n    | Component methods\n    |\n    */\n\n  /**\n   * Before mounting, init our seekbar and volume bar\n   * pan responders.\n   */\n  UNSAFE_componentWillMount() {\n    this.initSeekPanResponder();\n    this.initVolumePanResponder();\n  }\n\n  /**\n   * To allow basic playback management from the outside\n   * we have to handle possible props changes to state changes\n   */\n  UNSAFE_componentWillReceiveProps(nextProps: IProps) {\n    if (\n      this.state.paused !== nextProps.paused &&\n      typeof nextProps.paused === 'boolean'\n    ) {\n      this.setState({\n        paused: nextProps.paused,\n      });\n    }\n\n    if (this.variousStyles.videoStyle !== nextProps.videoStyle) {\n      this.variousStyles.videoStyle = nextProps.videoStyle;\n    }\n\n    if (this.variousStyles.containerStyle !== nextProps.style) {\n      this.variousStyles.containerStyle = nextProps.style;\n    }\n  }\n\n  /**\n   * Upon mounting, calculate the position of the volume\n   * bar based on the volume property supplied to it.\n   */\n  componentDidMount() {\n    const position = this.calculateVolumePositionFromVolume();\n\n    this.setVolumePosition(position);\n    this.mounted = true;\n\n    this.setState({\n      volumeOffset: position,\n    });\n  }\n\n  /**\n   * When the component is about to unmount kill the\n   * timeout less it fire in the prev/next scene\n   */\n  componentWillUnmount() {\n    this.mounted = false;\n    this.clearControlTimeout();\n  }\n\n  /**\n   * Get our seekbar responder going\n   */\n  initSeekPanResponder = () => {\n    this.player.seekPanResponder = PanResponder.create({\n      // Ask to be the responder.\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n\n      /**\n       * When we start the pan tell the machine that we're\n       * seeking. This stops it from updating the seekbar\n       * position in the onProgress listener.\n       */\n      onPanResponderGrant: (evt) => {\n        let state = { ...this.state };\n        this.clearControlTimeout();\n        const position = evt.nativeEvent.locationX;\n        this.setSeekerPosition(position);\n        state.seeking = true;\n        state.originallyPaused = state.paused;\n        state.scrubbing = false;\n        if (this.player.scrubbingTimeStep > 0) {\n          state.paused = true;\n        }\n        this.setState(state);\n      },\n\n      /**\n       * When panning, update the seekbar position, duh.\n       */\n      onPanResponderMove: (evt, gestureState) => {\n        const position = this.state.seekerOffset + gestureState.dx;\n        this.setSeekerPosition(position);\n        let state = { ...this.state };\n\n        if (\n          this.player.scrubbingTimeStep > 0 &&\n          !state.loading &&\n          !state.scrubbing\n        ) {\n          const time = this.calculateTimeFromSeekerPosition();\n          const timeDifference = Math.abs(state.currentTime - time) * 1000;\n\n          if (\n            time < state.duration &&\n            timeDifference >= this.player.scrubbingTimeStep\n          ) {\n            state.scrubbing = true;\n\n            this.setState(state);\n            setTimeout(() => {\n              this.player.ref.current?.seek(\n                time,\n                this.player.scrubbingTimeStep\n              );\n            }, 1);\n          }\n        }\n      },\n\n      /**\n       * On release we update the time and seek to it in the video.\n       * If you seek to the end of the video we fire the\n       * onEnd callback\n       */\n      onPanResponderRelease: () => {\n        const time = this.calculateTimeFromSeekerPosition();\n        let state = { ...this.state };\n        if (time >= state.duration && !state.loading) {\n          state.paused = true;\n          this.events.onEnd();\n        } else if (state.scrubbing) {\n          state.seeking = false;\n        } else {\n          this.seekTo(time);\n          this.setControlTimeout();\n          state.paused = state.originallyPaused;\n          state.seeking = false;\n        }\n        this.setState(state);\n      },\n    });\n  };\n\n  /**\n   * Initialize the volume pan responder.\n   */\n  initVolumePanResponder = () => {\n    this.player.volumePanResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        this.clearControlTimeout();\n      },\n\n      /**\n       * Update the volume as we change the position.\n       * If we go to 0 then turn on the mute prop\n       * to avoid that weird static-y sound.\n       */\n      onPanResponderMove: (evt, gestureState) => {\n        let state = { ...this.state };\n        const position = this.state.volumeOffset + gestureState.dx;\n\n        this.setVolumePosition(position);\n        state.volume = this.calculateVolumeFromVolumePosition();\n\n        if (state.volume <= 0) {\n          state.muted = true;\n        } else {\n          state.muted = false;\n        }\n\n        this.setState(state);\n      },\n\n      /**\n       * Update the offset...\n       */\n      onPanResponderRelease: () => {\n        let state = { ...this.state };\n        state.volumeOffset = state.volumePosition;\n        this.setControlTimeout();\n        this.setState(state);\n      },\n    });\n  };\n\n  /**\n    | -------------------------------------------------------\n    | Rendering\n    | -------------------------------------------------------\n    |\n    | This section contains all of our render methods.\n    | In addition to the typical React render func\n    | we also have all the render methods for\n    | the controls.\n    |\n    */\n\n  /**\n   * Standard render control function that handles\n   * everything except the sliders. Adds a\n   * consistent <TouchableHighlight>\n   * wrapper and styling.\n   */\n  renderControl = (\n    children: React.ReactNode,\n    callback: () => void,\n    style = {}\n  ) => {\n    return (\n      <TouchableHighlight\n        underlayColor=\"transparent\"\n        activeOpacity={0.3}\n        onPress={() => {\n          this.resetControlTimeout();\n          callback();\n        }}\n        style={[styles.controls.control, style]}\n      >\n        {children}\n      </TouchableHighlight>\n    );\n  };\n\n  /**\n   * Renders an empty control, used to disable a control without breaking the view layout.\n   */\n  renderNullControl = () => {\n    return <View style={[styles.controls.control]} />;\n  };\n\n  /**\n   * Groups the top bar controls together in an animated\n   * view and spaces them out.\n   */\n  renderTopControls = () => {\n    const backControl = !this.props.onBack\n      ? this.renderNullControl()\n      : this.renderBack();\n    const volumeControl = this.props.disableVolume\n      ? this.renderNullControl()\n      : this.renderVolume();\n    const fullscreenControl = this.props.disableFullscreen\n      ? this.renderNullControl()\n      : this.renderFullscreen();\n\n    return (\n      <Animated.View\n        style={[\n          styles.controls.top,\n          {\n            opacity: this.animations.topControl.opacity,\n            marginTop: this.animations.topControl.marginTop,\n          },\n        ]}\n      >\n        <ImageBackground\n          source={require('./assets/img/top-vignette.png')}\n          style={[styles.controls.column]}\n          imageStyle={[styles.controls.vignette]}\n        >\n          <SafeAreaView style={styles.controls.topControlGroup}>\n            {backControl}\n            <View style={styles.controls.pullRight}>\n              {volumeControl}\n              {fullscreenControl}\n            </View>\n          </SafeAreaView>\n        </ImageBackground>\n      </Animated.View>\n    );\n  };\n\n  /**\n   * Back button control\n   */\n  renderBack = () => {\n    return this.renderControl(\n      <Image\n        source={require('./assets/img/back.png')}\n        style={styles.controls.back}\n      />,\n      this.events.onBack,\n      styles.controls.back\n    );\n  };\n\n  /**\n   * Render the volume slider and attach the pan handlers\n   */\n  renderVolume = () => {\n    return (\n      <View style={styles.volume.container}>\n        <View\n          style={[styles.volume.fill, { width: this.state.volumeFillWidth }]}\n        />\n        <View\n          style={[styles.volume.track, { width: this.state.volumeTrackWidth }]}\n        />\n        <View\n          style={[styles.volume.handle, { left: this.state.volumePosition }]}\n          {...this.player.volumePanResponder?.panHandlers}\n        >\n          <Image\n            style={styles.volume.icon}\n            source={require('./assets/img/volume.png')}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  /**\n   * Render fullscreen toggle and set icon based on the fullscreen state.\n   */\n  renderFullscreen = () => {\n    let source =\n      this.state.isFullscreen === true\n        ? require('./assets/img/shrink.png')\n        : require('./assets/img/expand.png');\n    return this.renderControl(\n      <Image source={source} />,\n      this.methods.toggleFullscreen,\n      styles.controls.fullscreen\n    );\n  };\n\n  /**\n   * Render bottom control group and wrap it in a holder\n   */\n  renderBottomControls = () => {\n    const timerControl = this.props.disableTimer\n      ? this.renderNullControl()\n      : this.renderTimer();\n    const seekbarControl = this.props.disableSeekbar\n      ? this.renderNullControl()\n      : this.renderSeekbar();\n    const playPauseControl = this.props.disablePlayPause\n      ? this.renderNullControl()\n      : this.renderPlayPause();\n\n    return (\n      <Animated.View\n        style={[\n          styles.controls.bottom,\n          {\n            opacity: this.animations.bottomControl.opacity,\n            marginBottom: this.animations.bottomControl.marginBottom,\n          },\n        ]}\n      >\n        <ImageBackground\n          source={require('./assets/img/bottom-vignette.png')}\n          style={[styles.controls.column]}\n          imageStyle={[styles.controls.vignette]}\n        >\n          {seekbarControl}\n          <SafeAreaView\n            style={[styles.controls.row, styles.controls.bottomControlGroup]}\n          >\n            {playPauseControl}\n            {this.renderTitle()}\n            {timerControl}\n          </SafeAreaView>\n        </ImageBackground>\n      </Animated.View>\n    );\n  };\n\n  /**\n   * Render the seekbar and attach its handlers\n   */\n  renderSeekbar = () => {\n    return (\n      <View\n        style={styles.seekbar.container}\n        collapsable={false}\n        {...this.player.seekPanResponder?.panHandlers}\n      >\n        <View\n          style={styles.seekbar.track}\n          onLayout={(event) =>\n            (this.player.seekerWidth = event.nativeEvent.layout.width)\n          }\n          pointerEvents={'none'}\n        >\n          <View\n            style={[\n              styles.seekbar.fill,\n              {\n                width: this.state.seekerFillWidth,\n                backgroundColor: this.props.seekColor || '#FFF',\n              },\n            ]}\n            pointerEvents={'none'}\n          />\n        </View>\n        <View\n          style={[styles.seekbar.handle, { left: this.state.seekerPosition }]}\n          pointerEvents={'none'}\n        >\n          <View\n            style={[\n              styles.seekbar.circle,\n              { backgroundColor: this.props.seekColor || '#FFF' },\n            ]}\n            pointerEvents={'none'}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  /**\n   * Render the play/pause button and show the respective icon\n   */\n  renderPlayPause = () => {\n    let source =\n      this.state.paused === true\n        ? require('./assets/img/play.png')\n        : require('./assets/img/pause.png');\n    return this.renderControl(\n      <Image source={source} />,\n      this.methods.togglePlayPause,\n      styles.controls.playPause\n    );\n  };\n\n  /**\n   * Render our title...if supplied.\n   */\n  renderTitle = () => {\n    if (this.opts.title) {\n      return (\n        <View style={[styles.controls.control, styles.controls.title]}>\n          <Text\n            style={[styles.controls.text, styles.controls.titleText]}\n            numberOfLines={1}\n          >\n            {this.opts.title || ''}\n          </Text>\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  /**\n   * Show our timer.\n   */\n  renderTimer = () => {\n    return this.renderControl(\n      <Text style={styles.controls.timerText}>{this.calculateTime()}</Text>,\n      this.methods.toggleTimer,\n      styles.controls.timer\n    );\n  };\n\n  /**\n   * Show loading icon\n   */\n  renderLoader = () => {\n    if (this.state.loading) {\n      return (\n        <View style={styles.loader.container}>\n          <Animated.Image\n            source={require('./assets/img/loader-icon.png')}\n            style={[\n              {\n                transform: [\n                  {\n                    rotate: this.animations.loader.rotate.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              },\n            ]}\n          />\n        </View>\n      );\n    }\n    return null;\n  };\n\n  renderError = () => {\n    if (this.state.error) {\n      return (\n        <View style={styles.error.container}>\n          <Image\n            source={require('./assets/img/error-icon.png')}\n            style={styles.error.icon}\n          />\n          <Text style={styles.error.text}>Video unavailable</Text>\n        </View>\n      );\n    }\n    return null;\n  };\n\n  /**\n   * Provide all of our options and render the whole component.\n   */\n  render() {\n    return (\n      <TouchableWithoutFeedback\n        onPress={this.events.onScreenTouch}\n        style={[styles.player.container, this.variousStyles.containerStyle]}\n      >\n        <View\n          style={[styles.player.container, this.variousStyles.containerStyle]}\n        >\n          <Video\n            {...this.props}\n            ref={this.player.ref}\n            resizeMode={this.state.resizeMode}\n            volume={this.state.volume}\n            paused={this.state.paused}\n            muted={this.state.muted}\n            rate={this.state.rate}\n            onLoadStart={this.events.onLoadStart}\n            onProgress={this.events.onProgress}\n            onError={this.events.onError}\n            onLoad={this.events.onLoad}\n            onEnd={this.events.onEnd}\n            onSeek={this.events.onSeek}\n            style={[styles.player.video, this.variousStyles.videoStyle]}\n            source={this.props.source}\n          />\n          {this.renderError()}\n          {this.renderLoader()}\n          {this.renderTopControls()}\n          {this.renderBottomControls()}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n\n  /**\n   * Functions used throughout the application\n   */\n  methods = {\n    toggleFullscreen: this._toggleFullscreen,\n    togglePlayPause: this._togglePlayPause,\n    toggleControls: this._toggleControls,\n    toggleTimer: this._toggleTimer,\n  };\n\n  /**\n   * Our app listeners and associated methods\n   */\n  events = {\n    onError: this.props.onError || this._onError,\n    onBack: this.props.onBack || this._onBack,\n    onEnd: this.props.onEnd || this._onEnd,\n    onScreenTouch: this._onScreenTouch,\n    onEnterFullscreen: this.props.onEnterFullscreen,\n    onExitFullscreen: this.props.onExitFullscreen,\n    onShowControls: this.props.onShowControls,\n    onHideControls: this.props.onHideControls,\n    onLoadStart: this._onLoadStart,\n    onProgress: this._onProgress,\n    onSeek: this._onSeek,\n    onLoad: this._onLoad,\n    onPause: this.props.onPause,\n    onPlay: this.props.onPlay,\n  };\n}\n\n/**\n * This object houses our styles. There's player\n * specific styles and control specific ones.\n * And then there's volume/seeker styles.\n */\nconst styles = {\n  player: StyleSheet.create({\n    container: {\n      overflow: 'hidden',\n      backgroundColor: '#000',\n      flex: 1,\n      alignSelf: 'stretch',\n      justifyContent: 'space-between',\n    },\n    video: {\n      overflow: 'hidden',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    },\n  }),\n  error: StyleSheet.create({\n    container: {\n      backgroundColor: 'rgba( 0, 0, 0, 0.5 )',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    icon: {\n      marginBottom: 16,\n    },\n    text: {\n      backgroundColor: 'transparent',\n      color: '#f27474',\n    },\n  }),\n  loader: StyleSheet.create({\n    container: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  }),\n  controls: StyleSheet.create({\n    row: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      height: undefined,\n      width: undefined,\n    },\n    column: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      height: undefined,\n      width: undefined,\n    },\n    vignette: {\n      resizeMode: 'stretch',\n    },\n    control: {\n      padding: 16,\n    },\n    text: {\n      backgroundColor: 'transparent',\n      color: '#FFF',\n      fontSize: 14,\n      textAlign: 'center',\n    },\n    pullRight: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    top: {\n      flex: 1,\n      alignItems: 'stretch',\n      justifyContent: 'flex-start',\n    },\n    bottom: {\n      alignItems: 'stretch',\n      flex: 2,\n      justifyContent: 'flex-end',\n    },\n    topControlGroup: {\n      alignSelf: 'stretch',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      flexDirection: 'row',\n      width: undefined,\n      margin: 12,\n      marginBottom: 18,\n    },\n    bottomControlGroup: {\n      alignSelf: 'stretch',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginLeft: 12,\n      marginRight: 12,\n      marginBottom: 0,\n    },\n    volume: {\n      flexDirection: 'row',\n    },\n    fullscreen: {\n      flexDirection: 'row',\n    },\n    playPause: {\n      position: 'relative',\n      width: 80,\n      zIndex: 0,\n    },\n    title: {\n      alignItems: 'center',\n      flex: 0.6,\n      flexDirection: 'column',\n      padding: 0,\n    },\n    titleText: {\n      textAlign: 'center',\n    },\n    timer: {\n      width: 80,\n    },\n    timerText: {\n      backgroundColor: 'transparent',\n      color: '#FFF',\n      fontSize: 11,\n      textAlign: 'right',\n    },\n    back: {},\n  }),\n  volume: StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      flexDirection: 'row',\n      height: 1,\n      marginLeft: 20,\n      marginRight: 20,\n      width: 150,\n    },\n    track: {\n      backgroundColor: '#333',\n      height: 1,\n      marginLeft: 7,\n    },\n    fill: {\n      backgroundColor: '#FFF',\n      height: 1,\n    },\n    handle: {\n      position: 'absolute',\n      marginTop: -24,\n      marginLeft: -24,\n      padding: 16,\n    },\n    icon: {\n      marginLeft: 7,\n    },\n  }),\n  seekbar: StyleSheet.create({\n    container: {\n      alignSelf: 'stretch',\n      height: 28,\n      marginLeft: 20,\n      marginRight: 20,\n    },\n    track: {\n      backgroundColor: '#333',\n      height: 1,\n      position: 'relative',\n      top: 14,\n      width: '100%',\n    },\n    fill: {\n      backgroundColor: '#FFF',\n      height: 1,\n      width: '100%',\n    },\n    handle: {\n      position: 'absolute',\n      marginLeft: -7,\n      height: 28,\n      width: 28,\n    },\n    circle: {\n      borderRadius: 12,\n      position: 'relative',\n      top: 8,\n      left: 8,\n      height: 12,\n      width: 12,\n    },\n  }),\n};\n"]},"metadata":{},"sourceType":"script"}