{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.DOWNLOAD_TASK = exports.UPLOAD_TASK = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _ = require(\"./\");\n\nvar _utils = require(\"../../utils\");\n\nvar UPLOAD_TASK = 'upload';\nexports.UPLOAD_TASK = UPLOAD_TASK;\nvar DOWNLOAD_TASK = 'download';\nexports.DOWNLOAD_TASK = DOWNLOAD_TASK;\n\nvar StorageTask = function () {\n  function StorageTask(type, promise, storageRef) {\n    (0, _classCallCheck2.default)(this, StorageTask);\n    this.type = type;\n    this.ref = storageRef;\n    this.storage = storageRef._storage;\n    this.path = storageRef.path;\n    this.then = promise.then.bind(promise);\n    this.catch = promise.catch.bind(promise);\n  }\n\n  (0, _createClass2.default)(StorageTask, [{\n    key: \"_interceptSnapshotEvent\",\n    value: function _interceptSnapshotEvent(f) {\n      var _this = this;\n\n      if (!(0, _utils.isFunction)(f)) return null;\n      return function (snapshot) {\n        var _snapshot = (0, _extends2.default)({}, snapshot);\n\n        _snapshot.task = _this;\n        _snapshot.ref = _this.ref;\n        return f && f(_snapshot);\n      };\n    }\n  }, {\n    key: \"_interceptErrorEvent\",\n    value: function _interceptErrorEvent(f) {\n      if (!(0, _utils.isFunction)(f)) return null;\n      return function (error) {\n        var _error = new Error(error.message);\n\n        _error.code = error.code;\n        return f && f(_error);\n      };\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(nextOrObserver, error, complete) {\n      var _this2 = this;\n\n      var _error;\n\n      var _next;\n\n      var _complete;\n\n      if (typeof nextOrObserver === 'function') {\n        _error = this._interceptErrorEvent(error);\n        _next = this._interceptSnapshotEvent(nextOrObserver);\n        _complete = this._interceptSnapshotEvent(complete);\n      } else if (nextOrObserver) {\n        _error = this._interceptErrorEvent(nextOrObserver.error);\n        _next = this._interceptSnapshotEvent(nextOrObserver.next);\n        _complete = this._interceptSnapshotEvent(nextOrObserver.complete);\n      }\n\n      if (_next) {\n        this.storage._addListener(this.path, _.statics.TaskEvent.STATE_CHANGED, _next);\n      }\n\n      if (_error) {\n        this.storage._addListener(this.path, this.type + \"_failure\", _error);\n      }\n\n      if (_complete) {\n        this.storage._addListener(this.path, this.type + \"_success\", _complete);\n      }\n\n      return function () {\n        if (_next) _this2.storage._removeListener(_this2.path, _.statics.TaskEvent.STATE_CHANGED, _next);\n        if (_error) _this2.storage._removeListener(_this2.path, _this2.type + \"_failure\", _error);\n        if (_complete) _this2.storage._removeListener(_this2.path, _this2.type + \"_success\", _complete);\n      };\n    }\n  }, {\n    key: \"on\",\n    value: function on() {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _.statics.TaskEvent.STATE_CHANGED;\n      var nextOrObserver = arguments.length > 1 ? arguments[1] : undefined;\n      var error = arguments.length > 2 ? arguments[2] : undefined;\n      var complete = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!event) {\n        throw new Error(\"StorageTask.on listener is missing required string argument 'event'.\");\n      }\n\n      if (event !== _.statics.TaskEvent.STATE_CHANGED) {\n        throw new Error(\"StorageTask.on event argument must be a string with a value of '\" + _.statics.TaskEvent.STATE_CHANGED + \"'\");\n      }\n\n      if (!nextOrObserver && !error && !complete) {\n        return this._subscribe.bind(this);\n      }\n\n      return this._subscribe(nextOrObserver, error, complete);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      throw new Error('.pause() is not currently supported by react-native-firebase');\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      throw new Error('.resume() is not currently supported by react-native-firebase');\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      throw new Error('.cancel() is not currently supported by react-native-firebase');\n    }\n  }]);\n  return StorageTask;\n}();\n\nexports.default = StorageTask;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-firebase/dist/modules/storage/task.js"],"names":["UPLOAD_TASK","DOWNLOAD_TASK","StorageTask","type","promise","storageRef","ref","storage","_storage","path","then","bind","catch","f","snapshot","_snapshot","task","error","_error","Error","message","code","nextOrObserver","complete","_next","_complete","_interceptErrorEvent","_interceptSnapshotEvent","next","_addListener","StorageStatics","TaskEvent","STATE_CHANGED","_removeListener","event","_subscribe"],"mappings":"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","sourcesContent":["/**\n * \n * UploadTask representation wrapper\n */\nimport { statics as StorageStatics } from './';\nimport { isFunction } from '../../utils';\nexport const UPLOAD_TASK = 'upload';\nexport const DOWNLOAD_TASK = 'download';\n\n/**\n * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask\n */\nexport default class StorageTask {\n  constructor(type, promise, storageRef) {\n    this.type = type;\n    this.ref = storageRef;\n    this.storage = storageRef._storage;\n    this.path = storageRef.path; // 'proxy' original promise\n\n    this.then = promise.then.bind(promise);\n    this.catch = promise.catch.bind(promise);\n  }\n  /**\n   * Intercepts a native snapshot result object attaches ref / task instances\n   * and calls the original function\n   * @returns {Promise.<T>}\n   * @private\n   */\n\n\n  _interceptSnapshotEvent(f) {\n    if (!isFunction(f)) return null;\n    return snapshot => {\n      const _snapshot = Object.assign({}, snapshot);\n\n      _snapshot.task = this;\n      _snapshot.ref = this.ref;\n      return f && f(_snapshot);\n    };\n  }\n  /**\n   * Intercepts a error object form native and converts to a JS Error\n   * @param f\n   * @returns {*}\n   * @private\n   */\n\n\n  _interceptErrorEvent(f) {\n    if (!isFunction(f)) return null;\n    return error => {\n      const _error = new Error(error.message); // $FlowExpectedError\n\n\n      _error.code = error.code;\n      return f && f(_error);\n    };\n  }\n  /**\n   *\n   * @param nextOrObserver\n   * @param error\n   * @param complete\n   * @returns {function()}\n   * @private\n   */\n\n\n  _subscribe(nextOrObserver, error, complete) {\n    let _error;\n\n    let _next;\n\n    let _complete;\n\n    if (typeof nextOrObserver === 'function') {\n      _error = this._interceptErrorEvent(error);\n      _next = this._interceptSnapshotEvent(nextOrObserver);\n      _complete = this._interceptSnapshotEvent(complete);\n    } else if (nextOrObserver) {\n      _error = this._interceptErrorEvent(nextOrObserver.error);\n      _next = this._interceptSnapshotEvent(nextOrObserver.next);\n      _complete = this._interceptSnapshotEvent(nextOrObserver.complete);\n    }\n\n    if (_next) {\n      this.storage._addListener(this.path, StorageStatics.TaskEvent.STATE_CHANGED, _next);\n    }\n\n    if (_error) {\n      this.storage._addListener(this.path, `${this.type}_failure`, _error);\n    }\n\n    if (_complete) {\n      this.storage._addListener(this.path, `${this.type}_success`, _complete);\n    }\n\n    return () => {\n      if (_next) this.storage._removeListener(this.path, StorageStatics.TaskEvent.STATE_CHANGED, _next);\n      if (_error) this.storage._removeListener(this.path, `${this.type}_failure`, _error);\n      if (_complete) this.storage._removeListener(this.path, `${this.type}_success`, _complete);\n    };\n  }\n  /**\n   *\n   * @param event\n   * @param nextOrObserver\n   * @param error\n   * @param complete\n   * @returns {function()}\n   */\n\n\n  on(event = StorageStatics.TaskEvent.STATE_CHANGED, nextOrObserver, error, complete) {\n    if (!event) {\n      throw new Error(\"StorageTask.on listener is missing required string argument 'event'.\");\n    }\n\n    if (event !== StorageStatics.TaskEvent.STATE_CHANGED) {\n      throw new Error(`StorageTask.on event argument must be a string with a value of '${StorageStatics.TaskEvent.STATE_CHANGED}'`);\n    } // if only event provided return the subscriber function\n\n\n    if (!nextOrObserver && !error && !complete) {\n      return this._subscribe.bind(this);\n    }\n\n    return this._subscribe(nextOrObserver, error, complete);\n  }\n\n  pause() {\n    throw new Error('.pause() is not currently supported by react-native-firebase');\n  }\n\n  resume() {\n    // todo\n    throw new Error('.resume() is not currently supported by react-native-firebase');\n  }\n\n  cancel() {\n    // todo\n    throw new Error('.cancel() is not currently supported by react-native-firebase');\n  }\n\n}"]},"metadata":{},"sourceType":"script"}