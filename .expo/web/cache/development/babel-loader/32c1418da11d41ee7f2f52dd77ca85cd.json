{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-animated-numbers/index.js\";\n\nvar NUMBERS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nvar usePrevious = function usePrevious(value) {\n  var ref = _react.default.useRef();\n\n  _react.default.useEffect(function () {\n    ref.current = value;\n  });\n\n  if (typeof ref.current === 'undefined') {\n    return 0;\n  }\n\n  return ref.current;\n};\n\nvar AnimatedNumber = function AnimatedNumber(_ref) {\n  var animateToNumber = _ref.animateToNumber,\n      fontStyle = _ref.fontStyle,\n      animationDuration = _ref.animationDuration,\n      includeComma = _ref.includeComma,\n      easing = _ref.easing;\n  var prevNumber = usePrevious(animateToNumber);\n  var animateToNumberString = String(Math.abs(animateToNumber));\n  var prevNumberString = String(Math.abs(prevNumber));\n  var animateToNumbersArr = Array.from(animateToNumberString, Number);\n  var prevNumberersArr = Array.from(prevNumberString, Number);\n\n  if (includeComma) {\n    var reducedArray = new Array(Math.ceil(animateToNumberString.length / 3)).fill(0);\n    var startReducedArray = new Array(Math.ceil(prevNumberString.length / 3)).fill(0);\n    reducedArray.map(function (__, index) {\n      if (index === 0) {\n        return;\n      }\n\n      animateToNumbersArr.splice(animateToNumberString.length - index * 3, 0, ',');\n    });\n    startReducedArray.map(function (__, index) {\n      if (index === 0) {\n        return;\n      }\n\n      prevNumberersArr.splice(prevNumberString.length - index * 3, 0, ',');\n    });\n  }\n\n  var _React$useState = _react.default.useState(0),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      numberHeight = _React$useState2[0],\n      setNumberHeight = _React$useState2[1];\n\n  var animations = animateToNumbersArr.map(function (__, index) {\n    if (typeof prevNumberersArr[index] !== 'number') {\n      return new _reactNativeReanimated.default.Value(0);\n    }\n\n    var animationHeight = -1 * (numberHeight * prevNumberersArr[index]);\n    return new _reactNativeReanimated.default.Value(animationHeight);\n  });\n\n  var setButtonLayout = function setButtonLayout(e) {\n    setNumberHeight(e.nativeEvent.layout.height);\n  };\n\n  _react.default.useEffect(function () {\n    animations.map(function (animation, index) {\n      if (typeof animateToNumbersArr[index] !== 'number') {\n        return;\n      }\n\n      _reactNativeReanimated.default.timing(animation, {\n        toValue: -1 * (numberHeight * animateToNumbersArr[index]),\n        duration: animationDuration || 1400,\n        useNativeDriver: true,\n        easing: easing || _reactNativeReanimated.Easing.elastic(1.2)\n      }).start();\n    });\n  }, [animateToNumber, numberHeight]);\n\n  var getTranslateY = function getTranslateY(index) {\n    return animations[index];\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, numberHeight !== 0 && _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, animateToNumber < 0 && _react.default.createElement(_reactNative.Text, {\n    style: [fontStyle, {\n      height: numberHeight\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, '-'), animateToNumbersArr.map(function (n, index) {\n    if (typeof n === 'string') {\n      return _react.default.createElement(_reactNative.Text, {\n        key: index,\n        style: [fontStyle, {\n          height: numberHeight\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, n);\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      key: index,\n      style: {\n        height: numberHeight,\n        overflow: 'hidden'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 8\n      }\n    }, _react.default.createElement(_reactNativeReanimated.default.View, {\n      style: [{\n        transform: [{\n          translateY: getTranslateY(index)\n        }]\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, NUMBERS.map(function (number, i) {\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row'\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: [fontStyle, {\n          height: numberHeight\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 12\n        }\n      }, number));\n    })));\n  })), _react.default.createElement(_reactNative.Text, {\n    style: [fontStyle, {\n      position: 'absolute',\n      top: -999999\n    }],\n    onLayout: setButtonLayout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 4\n    }\n  }, 0));\n};\n\nvar _default = AnimatedNumber;\nexports.default = _default;","map":{"version":3,"sources":["/Users/alheresh/trend-mobile/my-trend-new/node_modules/react-native-animated-numbers/index.js"],"names":["NUMBERS","usePrevious","value","ref","React","useRef","useEffect","current","AnimatedNumber","animateToNumber","fontStyle","animationDuration","includeComma","easing","prevNumber","animateToNumberString","String","Math","abs","prevNumberString","animateToNumbersArr","Array","from","Number","prevNumberersArr","reducedArray","ceil","length","fill","startReducedArray","map","__","index","splice","useState","numberHeight","setNumberHeight","animations","Animated","Value","animationHeight","setButtonLayout","e","nativeEvent","layout","height","animation","timing","toValue","duration","useNativeDriver","Easing","elastic","start","getTranslateY","flexDirection","n","overflow","transform","translateY","number","i","position","top"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;AAEA,IAAMA,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAhB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC9B,MAAMC,GAAG,GAAGC,eAAMC,MAAN,EAAZ;;AACAD,iBAAME,SAAN,CAAgB,YAAM;AACrBH,IAAAA,GAAG,CAACI,OAAJ,GAAcL,KAAd;AACA,GAFD;;AAIA,MAAI,OAAOC,GAAG,CAACI,OAAX,KAAuB,WAA3B,EAAwC;AACvC,WAAO,CAAP;AACA;;AAED,SAAOJ,GAAG,CAACI,OAAX;AACA,CAXD;;AAaA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAMjB;AAAA,MALLC,eAKK,QALLA,eAKK;AAAA,MAJLC,SAIK,QAJLA,SAIK;AAAA,MAHLC,iBAGK,QAHLA,iBAGK;AAAA,MAFLC,YAEK,QAFLA,YAEK;AAAA,MADLC,MACK,QADLA,MACK;AACL,MAAMC,UAAU,GAAGb,WAAW,CAACQ,eAAD,CAA9B;AACA,MAAMM,qBAAqB,GAAGC,MAAM,CAACC,IAAI,CAACC,GAAL,CAAST,eAAT,CAAD,CAApC;AACA,MAAMU,gBAAgB,GAAGH,MAAM,CAACC,IAAI,CAACC,GAAL,CAASJ,UAAT,CAAD,CAA/B;AAEA,MAAMM,mBAAmB,GAAGC,KAAK,CAACC,IAAN,CAAWP,qBAAX,EAAkCQ,MAAlC,CAA5B;AACA,MAAMC,gBAAgB,GAAGH,KAAK,CAACC,IAAN,CAAWH,gBAAX,EAA6BI,MAA7B,CAAzB;;AAEA,MAAIX,YAAJ,EAAkB;AACjB,QAAMa,YAAY,GAAG,IAAIJ,KAAJ,CACpBJ,IAAI,CAACS,IAAL,CAAUX,qBAAqB,CAACY,MAAtB,GAA+B,CAAzC,CADoB,EAEnBC,IAFmB,CAEd,CAFc,CAArB;AAIA,QAAMC,iBAAiB,GAAG,IAAIR,KAAJ,CACzBJ,IAAI,CAACS,IAAL,CAAUP,gBAAgB,CAACQ,MAAjB,GAA0B,CAApC,CADyB,EAExBC,IAFwB,CAEnB,CAFmB,CAA1B;AAIAH,IAAAA,YAAY,CAACK,GAAb,CAAiB,UAACC,EAAD,EAAKC,KAAL,EAAe;AAC/B,UAAIA,KAAK,KAAK,CAAd,EAAiB;AAChB;AACA;;AAEDZ,MAAAA,mBAAmB,CAACa,MAApB,CACClB,qBAAqB,CAACY,MAAtB,GAA+BK,KAAK,GAAG,CADxC,EAEC,CAFD,EAGC,GAHD;AAKA,KAVD;AAYAH,IAAAA,iBAAiB,CAACC,GAAlB,CAAsB,UAACC,EAAD,EAAKC,KAAL,EAAe;AACpC,UAAIA,KAAK,KAAK,CAAd,EAAiB;AAChB;AACA;;AAEDR,MAAAA,gBAAgB,CAACS,MAAjB,CAAwBd,gBAAgB,CAACQ,MAAjB,GAA0BK,KAAK,GAAG,CAA1D,EAA6D,CAA7D,EAAgE,GAAhE;AACA,KAND;AAOA;;AApCI,wBAsCmC5B,eAAM8B,QAAN,CAAe,CAAf,CAtCnC;AAAA;AAAA,MAsCEC,YAtCF;AAAA,MAsCgBC,eAtChB;;AAuCL,MAAMC,UAAU,GAAGjB,mBAAmB,CAACU,GAApB,CAAwB,UAACC,EAAD,EAAKC,KAAL,EAAe;AACzD,QAAI,OAAOR,gBAAgB,CAACQ,KAAD,CAAvB,KAAmC,QAAvC,EAAiD;AAChD,aAAO,IAAIM,+BAASC,KAAb,CAAmB,CAAnB,CAAP;AACA;;AAED,QAAMC,eAAe,GAAG,CAAC,CAAD,IAAML,YAAY,GAAGX,gBAAgB,CAACQ,KAAD,CAArC,CAAxB;AACA,WAAO,IAAIM,+BAASC,KAAb,CAAmBC,eAAnB,CAAP;AACA,GAPkB,CAAnB;;AASA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC9BN,IAAAA,eAAe,CAACM,CAAC,CAACC,WAAF,CAAcC,MAAd,CAAqBC,MAAtB,CAAf;AACA,GAFD;;AAIAzC,iBAAME,SAAN,CAAgB,YAAM;AACrB+B,IAAAA,UAAU,CAACP,GAAX,CAAe,UAACgB,SAAD,EAAYd,KAAZ,EAAsB;AACpC,UAAI,OAAOZ,mBAAmB,CAACY,KAAD,CAA1B,KAAsC,QAA1C,EAAoD;AACnD;AACA;;AAEDM,qCAASS,MAAT,CAAgBD,SAAhB,EAA2B;AAC1BE,QAAAA,OAAO,EAAE,CAAC,CAAD,IAAMb,YAAY,GAAGf,mBAAmB,CAACY,KAAD,CAAxC,CADiB;AAE1BiB,QAAAA,QAAQ,EAAEtC,iBAAiB,IAAI,IAFL;AAG1BuC,QAAAA,eAAe,EAAE,IAHS;AAI1BrC,QAAAA,MAAM,EAAEA,MAAM,IAAIsC,8BAAOC,OAAP,CAAe,GAAf;AAJQ,OAA3B,EAKGC,KALH;AAMA,KAXD;AAYA,GAbD,EAaG,CAAC5C,eAAD,EAAkB0B,YAAlB,CAbH;;AAeA,MAAMmB,aAAa,GAAG,SAAhBA,aAAgB,CAACtB,KAAD,EAAW;AAChC,WAAOK,UAAU,CAACL,KAAD,CAAjB;AACA,GAFD;;AAIA,SACC,4DACEG,YAAY,KAAK,CAAjB,IACA,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAEoB,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE9C,eAAe,GAAG,CAAlB,IACA,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACC,SAAD,EAAY;AAAEmC,MAAAA,MAAM,EAAEV;AAAV,KAAZ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqD,GAArD,CAFF,EAIEf,mBAAmB,CAACU,GAApB,CAAwB,UAAC0B,CAAD,EAAIxB,KAAJ,EAAc;AACtC,QAAI,OAAOwB,CAAP,KAAa,QAAjB,EAA2B;AAC1B,aACC,6BAAC,iBAAD;AAAM,QAAA,GAAG,EAAExB,KAAX;AAAkB,QAAA,KAAK,EAAE,CAACtB,SAAD,EAAY;AAAEmC,UAAAA,MAAM,EAAEV;AAAV,SAAZ,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEqB,CADF,CADD;AAKA;;AAED,WACC,6BAAC,iBAAD;AACC,MAAA,GAAG,EAAExB,KADN;AAEC,MAAA,KAAK,EAAE;AAAEa,QAAAA,MAAM,EAAEV,YAAV;AAAwBsB,QAAAA,QAAQ,EAAE;AAAlC,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIC,6BAAC,8BAAD,CAAU,IAAV;AACC,MAAA,KAAK,EAAE,CACN;AACCC,QAAAA,SAAS,EAAE,CACV;AACCC,UAAAA,UAAU,EAAEL,aAAa,CAACtB,KAAD;AAD1B,SADU;AADZ,OADM,CADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWEhC,OAAO,CAAC8B,GAAR,CAAY,UAAC8B,MAAD,EAASC,CAAT;AAAA,aACZ,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE;AAAEN,UAAAA,aAAa,EAAE;AAAjB,SAAb;AAAuC,QAAA,GAAG,EAAEM,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE,CAACnD,SAAD,EAAY;AAAEmC,UAAAA,MAAM,EAAEV;AAAV,SAAZ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEyB,MADF,CADD,CADY;AAAA,KAAZ,CAXF,CAJD,CADD;AA0BA,GAnCA,CAJF,CAFF,EA4CC,6BAAC,iBAAD;AACC,IAAA,KAAK,EAAE,CAAClD,SAAD,EAAY;AAAEoD,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,GAAG,EAAE,CAAC;AAA9B,KAAZ,CADR;AAEC,IAAA,QAAQ,EAAEtB,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,CAJF,CA5CD,CADD;AAqDA,CAlID;;eAoIejC,c","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\nimport Animated, { Easing } from 'react-native-reanimated';\n\nconst NUMBERS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nconst usePrevious = (value) => {\n\tconst ref = React.useRef();\n\tReact.useEffect(() => {\n\t\tref.current = value;\n\t});\n\n\tif (typeof ref.current === 'undefined') {\n\t\treturn 0;\n\t}\n\n\treturn ref.current;\n};\n\nconst AnimatedNumber = ({\n\tanimateToNumber,\n\tfontStyle,\n\tanimationDuration,\n\tincludeComma,\n\teasing,\n}) => {\n\tconst prevNumber = usePrevious(animateToNumber);\n\tconst animateToNumberString = String(Math.abs(animateToNumber));\n\tconst prevNumberString = String(Math.abs(prevNumber));\n\n\tconst animateToNumbersArr = Array.from(animateToNumberString, Number);\n\tconst prevNumberersArr = Array.from(prevNumberString, Number);\n\n\tif (includeComma) {\n\t\tconst reducedArray = new Array(\n\t\t\tMath.ceil(animateToNumberString.length / 3)\n\t\t).fill(0);\n\n\t\tconst startReducedArray = new Array(\n\t\t\tMath.ceil(prevNumberString.length / 3)\n\t\t).fill(0);\n\n\t\treducedArray.map((__, index) => {\n\t\t\tif (index === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tanimateToNumbersArr.splice(\n\t\t\t\tanimateToNumberString.length - index * 3,\n\t\t\t\t0,\n\t\t\t\t','\n\t\t\t);\n\t\t});\n\n\t\tstartReducedArray.map((__, index) => {\n\t\t\tif (index === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tprevNumberersArr.splice(prevNumberString.length - index * 3, 0, ',');\n\t\t});\n\t}\n\n\tconst [numberHeight, setNumberHeight] = React.useState(0);\n\tconst animations = animateToNumbersArr.map((__, index) => {\n\t\tif (typeof prevNumberersArr[index] !== 'number') {\n\t\t\treturn new Animated.Value(0);\n\t\t}\n\n\t\tconst animationHeight = -1 * (numberHeight * prevNumberersArr[index]);\n\t\treturn new Animated.Value(animationHeight);\n\t});\n\n\tconst setButtonLayout = (e) => {\n\t\tsetNumberHeight(e.nativeEvent.layout.height);\n\t};\n\n\tReact.useEffect(() => {\n\t\tanimations.map((animation, index) => {\n\t\t\tif (typeof animateToNumbersArr[index] !== 'number') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tAnimated.timing(animation, {\n\t\t\t\ttoValue: -1 * (numberHeight * animateToNumbersArr[index]),\n\t\t\t\tduration: animationDuration || 1400,\n\t\t\t\tuseNativeDriver: true,\n\t\t\t\teasing: easing || Easing.elastic(1.2),\n\t\t\t}).start();\n\t\t});\n\t}, [animateToNumber, numberHeight]);\n\n\tconst getTranslateY = (index) => {\n\t\treturn animations[index];\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{numberHeight !== 0 && (\n\t\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t\t{animateToNumber < 0 && (\n\t\t\t\t\t\t<Text style={[fontStyle, { height: numberHeight }]}>{'-'}</Text>\n\t\t\t\t\t)}\n\t\t\t\t\t{animateToNumbersArr.map((n, index) => {\n\t\t\t\t\t\tif (typeof n === 'string') {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Text key={index} style={[fontStyle, { height: numberHeight }]}>\n\t\t\t\t\t\t\t\t\t{n}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tstyle={{ height: numberHeight, overflow: 'hidden' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Animated.View\n\t\t\t\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttransform: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslateY: getTranslateY(index),\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{NUMBERS.map((number, i) => (\n\t\t\t\t\t\t\t\t\t\t<View style={{ flexDirection: 'row' }} key={i}>\n\t\t\t\t\t\t\t\t\t\t\t<Text style={[fontStyle, { height: numberHeight }]}>\n\t\t\t\t\t\t\t\t\t\t\t\t{number}\n\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Animated.View>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</View>\n\t\t\t)}\n\t\t\t<Text\n\t\t\t\tstyle={[fontStyle, { position: 'absolute', top: -999999 }]}\n\t\t\t\tonLayout={setButtonLayout}\n\t\t\t>\n\t\t\t\t{0}\n\t\t\t</Text>\n\t\t</>\n\t);\n};\n\nexport default AnimatedNumber;\n"]},"metadata":{},"sourceType":"script"}